var searchIndex = {};
searchIndex["vulkano"] = {"doc":"Safe and rich Rust wrapper around the Vulkan API.","items":[[4,"OomError","vulkano","Error type returned by most Vulkan functions.",null,null],[13,"OutOfHostMemory","","There is no memory available on the host (ie. the CPU, RAM, etc.).",0,null],[13,"OutOfDeviceMemory","","There is no memory available on the device (ie. video memory).",0,null],[0,"buffer","","Location in memory that contains data.",null,null],[3,"BufferSlice","vulkano::buffer","A subpart of a buffer.",null,null],[0,"cpu_access","","Buffer whose content is accessible to the CPU.",null,null],[3,"CpuAccessibleBuffer","vulkano::buffer::cpu_access","Buffer whose content is accessible by the CPU.",null,null],[3,"ReadLock","","Object that can be used to read or write the content of a `CpuAccessBuffer`.",null,null],[3,"WriteLock","","Object that can be used to read or write the content of a `CpuAccessBuffer`.",null,null],[11,"fmt","","",1,null],[11,"new","","Builds a new buffer. Only allowed for sized data.",1,{"inputs":[{"name":"arc"},{"name":"usage"},{"name":"i"}],"output":{"name":"result"}}],[11,"array","","Builds a new buffer. Can be used for arrays.",1,{"inputs":[{"name":"arc"},{"name":"usize"},{"name":"usage"},{"name":"i"}],"output":{"name":"result"}}],[11,"raw","","Builds a new buffer without checking the size.",1,{"inputs":[{"name":"arc"},{"name":"usize"},{"name":"usage"},{"name":"i"}],"output":{"name":"result"}}],[11,"device","","Returns the device used to create this buffer.",1,null],[11,"queue_families","","Returns the queue families this buffer can be used on.",1,null],[11,"read","","Locks the buffer in order to write its content.",1,null],[11,"write","","Locks the buffer in order to write its content.",1,null],[11,"inner","","",1,null],[11,"blocks","","",1,null],[11,"block_memory_range","","",1,null],[11,"needs_fence","","",1,null],[11,"host_accesses","","",1,null],[11,"gpu_access","","",1,null],[11,"map","","Makes a new `ReadLock` to access a sub-part of the current `ReadLock`.",2,null],[11,"deref","","",2,null],[11,"map","","Makes a new `WriteLock` to access a sub-part of the current `WriteLock`.",3,null],[11,"deref","","",3,null],[11,"deref_mut","","",3,null],[0,"device_local","vulkano::buffer","Buffer whose content is read-written by the GPU only.",null,null],[3,"DeviceLocalBuffer","vulkano::buffer::device_local","Buffer whose content is accessible by the CPU.",null,null],[11,"fmt","","",4,null],[11,"new","","Builds a new buffer. Only allowed for sized data.",4,{"inputs":[{"name":"arc"},{"name":"usage"},{"name":"i"}],"output":{"name":"result"}}],[11,"array","","Builds a new buffer. Can be used for arrays.",4,{"inputs":[{"name":"arc"},{"name":"usize"},{"name":"usage"},{"name":"i"}],"output":{"name":"result"}}],[11,"raw","","Builds a new buffer without checking the size.",4,{"inputs":[{"name":"arc"},{"name":"usize"},{"name":"usage"},{"name":"i"}],"output":{"name":"result"}}],[11,"device","","Returns the device used to create this buffer.",4,null],[11,"queue_families","","Returns the queue families this buffer can be used on.",4,null],[11,"inner","","",4,null],[11,"blocks","","",4,null],[11,"block_memory_range","","",4,null],[11,"needs_fence","","",4,null],[11,"host_accesses","","",4,null],[11,"gpu_access","","",4,null],[0,"immutable","vulkano::buffer","Buffer that is written once then read for as long as it is alive.",null,null],[3,"ImmutableBuffer","vulkano::buffer::immutable","Buffer that is written once then read for as long as it is alive.",null,null],[11,"new","","Builds a new buffer. Only allowed for sized data.",5,{"inputs":[{"name":"arc"},{"name":"usage"},{"name":"i"}],"output":{"name":"result"}}],[11,"array","","Builds a new buffer. Can be used for arrays.",5,{"inputs":[{"name":"arc"},{"name":"usize"},{"name":"usage"},{"name":"i"}],"output":{"name":"result"}}],[11,"raw","","Builds a new buffer without checking the size.",5,{"inputs":[{"name":"arc"},{"name":"usize"},{"name":"usage"},{"name":"i"}],"output":{"name":"result"}}],[11,"device","","Returns the device used to create this buffer.",5,null],[11,"queue_families","","Returns the queue families this buffer can be used on.",5,null],[11,"inner","","",5,null],[11,"blocks","","",5,null],[11,"block_memory_range","","",5,null],[11,"needs_fence","","",5,null],[11,"host_accesses","","",5,null],[11,"gpu_access","","",5,null],[0,"sys","vulkano::buffer","Low level implementation of buffers.",null,null],[3,"UnsafeBuffer","vulkano::buffer::sys","Data storage in a GPU-accessible location.",null,null],[3,"SparseLevel","","",null,null],[12,"sparse","","",6,null],[12,"sparse_residency","","",6,null],[12,"sparse_aliased","","",6,null],[3,"Usage","","Describes how a buffer is going to be used. This is **not** an optimization.",null,null],[12,"transfer_source","","",7,null],[12,"transfer_dest","","",7,null],[12,"uniform_texel_buffer","","",7,null],[12,"storage_texel_buffer","","",7,null],[12,"uniform_buffer","","",7,null],[12,"storage_buffer","","",7,null],[12,"index_buffer","","",7,null],[12,"vertex_buffer","","",7,null],[12,"indirect_buffer","","",7,null],[4,"BufferCreationError","","Error that can happen when creating a buffer.",null,null],[13,"OomError","","Not enough memory.",8,null],[13,"SparseBindingFeatureNotEnabled","","Sparse binding was requested but the corresponding feature wasn&#39;t enabled.",8,null],[13,"SparseResidencyBufferFeatureNotEnabled","","Sparse residency was requested but the corresponding feature wasn&#39;t enabled.",8,null],[13,"SparseResidencyAliasedFeatureNotEnabled","","Sparse aliasing was requested but the corresponding feature wasn&#39;t enabled.",8,null],[11,"fmt","","",9,null],[11,"new","","Creates a new buffer of the given size.",9,{"inputs":[{"name":"arc"},{"name":"usize"},{"name":"usage"},{"name":"sharing"},{"name":"sparselevel"}],"output":{"name":"result"}}],[11,"bind_memory","","",9,null],[11,"device","","Returns the device used to create this buffer.",9,null],[11,"size","","Returns the size of the buffer in bytes.",9,null],[11,"usage_transfer_src","","",9,null],[11,"usage_transfer_dest","","",9,null],[11,"usage_uniform_texel_buffer","","",9,null],[11,"usage_storage_texel_buffer","","",9,null],[11,"usage_uniform_buffer","","",9,null],[11,"usage_storage_buffer","","",9,null],[11,"usage_index_buffer","","",9,null],[11,"usage_vertex_buffer","","",9,null],[11,"usage_indirect_buffer","","",9,null],[11,"internal_object","","",9,null],[11,"drop","","",9,null],[11,"clone","","",6,null],[11,"fmt","","",6,null],[11,"none","","",6,{"inputs":[],"output":{"name":"sparselevel"}}],[11,"clone","","",7,null],[11,"fmt","","",7,null],[11,"none","","Builds a `Usage` with all values set to false.",7,{"inputs":[],"output":{"name":"usage"}}],[11,"all","","Builds a `Usage` with all values set to true. Can be used for quick prototyping.",7,{"inputs":[],"output":{"name":"usage"}}],[11,"transfer_source","","Builds a `Usage` with `transfer_source` set to true and the rest to false.",7,{"inputs":[],"output":{"name":"usage"}}],[11,"vertex_buffer","","Builds a `Usage` with `vertex_buffer` set to true and the rest to false.",7,{"inputs":[],"output":{"name":"usage"}}],[11,"vertex_buffer_transfer_dest","","Builds a `Usage` with `vertex_buffer` and `transfer_dest` set to true and the rest to false.",7,{"inputs":[],"output":{"name":"usage"}}],[11,"index_buffer","","Builds a `Usage` with `index_buffer` set to true and the rest to false.",7,{"inputs":[],"output":{"name":"usage"}}],[11,"index_buffer_transfer_dest","","Builds a `Usage` with `index_buffer` and `transfer_dest` set to true and the rest to false.",7,{"inputs":[],"output":{"name":"usage"}}],[11,"uniform_buffer","","Builds a `Usage` with `uniform_buffer` set to true and the rest to false.",7,{"inputs":[],"output":{"name":"usage"}}],[11,"uniform_buffer_transfer_dest","","Builds a `Usage` with `uniform_buffer` and `transfer_dest` set to true and the rest\nto false.",7,{"inputs":[],"output":{"name":"usage"}}],[11,"indirect_buffer","","Builds a `Usage` with `indirect_buffer` set to true and the rest to false.",7,{"inputs":[],"output":{"name":"usage"}}],[11,"indirect_buffer_transfer_dest","","Builds a `Usage` with `indirect_buffer` and `transfer_dest` set to true and the rest\nto false.",7,{"inputs":[],"output":{"name":"usage"}}],[11,"eq","","",8,null],[11,"ne","","",8,null],[11,"fmt","","",8,null],[11,"clone","","",8,null],[11,"description","","",8,null],[11,"cause","","",8,null],[11,"fmt","","",8,null],[11,"from","","",8,{"inputs":[{"name":"oomerror"}],"output":{"name":"buffercreationerror"}}],[11,"from","","",8,{"inputs":[{"name":"error"}],"output":{"name":"buffercreationerror"}}],[0,"traits","vulkano::buffer","",null,null],[3,"AccessRange","vulkano::buffer::traits","",null,null],[12,"block","","",10,null],[12,"write","","",10,null],[3,"GpuAccessResult","","",null,null],[12,"dependencies","","",11,null],[12,"additional_wait_semaphore","","",11,null],[12,"additional_signal_semaphore","","",11,null],[8,"Buffer","","",null,null],[10,"inner","","Returns the inner buffer.",12,null],[10,"needs_fence","","Returns whether accessing a range of this buffer should signal a fence.",12,null],[10,"host_accesses","","Called when a command buffer that uses this buffer is being built.",12,null],[10,"blocks","","Given a range, returns the list of blocks which each range is contained in.",12,null],[10,"block_memory_range","","Returns the range of bytes of the memory used by a block.",12,null],[10,"gpu_access","","",12,null],[11,"size","","",12,null],[8,"TypedBuffer","","",null,null],[16,"Content","","",13,null],[11,"len","","",13,null],[11,"eq","","",10,null],[11,"ne","","",10,null],[11,"clone","","",10,null],[11,"fmt","","",10,null],[0,"view","vulkano::buffer","View of a buffer, in order to use it as a uniform texel buffer or storage texel buffer.",null,null],[3,"BufferView","vulkano::buffer::view","Represents a way for the GPU to interpret buffer data. See the documentation of the\n`view` module.",null,null],[4,"BufferViewCreationError","","Error that can happen when creating a buffer view.",null,null],[13,"OomError","","Out of memory.",14,null],[13,"WrongBufferUsage","","The buffer was not creating with one of the `storage_texel_buffer` or\n`uniform_texel_buffer` usages.",14,null],[13,"UnsupportedFormat","","The requested format is not supported for this usage.",14,null],[11,"new","","Builds a new buffer view.",15,{"inputs":[{"name":"s"},{"name":"f"}],"output":{"name":"result"}}],[11,"unchecked","","Builds a new buffer view without checking that the format is correct.",15,{"inputs":[{"name":"s"},{"name":"f"}],"output":{"name":"result"}}],[11,"buffer","","Returns the buffer associated to this view.",15,null],[11,"uniform_texel_buffer","","Returns true if the buffer view can be used as a uniform texel buffer.",15,null],[11,"storage_texel_buffer","","Returns true if the buffer view can be used as a storage texel buffer.",15,null],[11,"storage_texel_buffer_atomic","","Returns true if the buffer view can be used as a storage texel buffer with atomic accesses.",15,null],[11,"internal_object","","",15,null],[11,"drop","","",15,null],[11,"clone","","",14,null],[11,"fmt","","",14,null],[11,"description","","",14,null],[11,"cause","","",14,null],[11,"fmt","","",14,null],[11,"from","","",14,{"inputs":[{"name":"oomerror"}],"output":{"name":"bufferviewcreationerror"}}],[11,"from","","",14,{"inputs":[{"name":"error"}],"output":{"name":"bufferviewcreationerror"}}],[11,"clone","vulkano::buffer","",16,null],[11,"buffer","","Returns the buffer that this slice belongs to.",16,null],[11,"offset","","Returns the offset of that slice within the buffer.",16,null],[11,"size","","Returns the size of that slice in bytes.",16,null],[11,"slice_custom","","Builds a slice that contains an element from inside the buffer.",16,null],[11,"len","","Returns the number of elements in this slice.",16,null],[11,"index","","Reduces the slice to just one element of the array.",16,null],[11,"slice","","Reduces the slice to just a range of the array.",16,null],[11,"from","","",16,{"inputs":[{"name":"arc"}],"output":{"name":"bufferslice"}}],[11,"from","","",16,{"inputs":[{"name":"bufferslice"}],"output":{"name":"bufferslice"}}],[0,"command_buffer","vulkano","Commands that the GPU will execute (includes draw commands).",null,null],[3,"Submission","vulkano::command_buffer","",null,null],[3,"DynamicState","","The dynamic state to use for a draw command.",null,null],[12,"line_width","","",17,null],[12,"viewports","","",17,null],[12,"scissors","","",17,null],[3,"PrimaryCommandBufferBuilder","","A prototype of a primary command buffer.",null,null],[3,"PrimaryCommandBufferBuilderInlineDraw","","Object that you obtain when calling `draw_inline` or `next_subpass_inline`.",null,null],[3,"PrimaryCommandBufferBuilderSecondaryDraw","","Object that you obtain when calling `draw_secondary` or `next_subpass_secondary`.",null,null],[3,"PrimaryCommandBuffer","","Represents a collection of commands to be executed by the GPU.",null,null],[3,"SecondaryGraphicsCommandBufferBuilder","","A prototype of a secondary compute command buffer.",null,null],[3,"SecondaryGraphicsCommandBuffer","","Represents a collection of commands to be executed by the GPU.",null,null],[3,"SecondaryComputeCommandBufferBuilder","","A prototype of a secondary compute command buffer.",null,null],[3,"SecondaryComputeCommandBuffer","","Represents a collection of commands to be executed by the GPU.",null,null],[3,"DrawIndirectCommand","","",null,null],[12,"vertex_count","","",18,null],[12,"instance_count","","",18,null],[12,"first_vertex","","",18,null],[12,"first_instance","","",18,null],[3,"DrawIndexedIndirectCommand","","",null,null],[12,"index_count","","",19,null],[12,"instance_count","","",19,null],[12,"first_index","","",19,null],[12,"vertex_offset","","",19,null],[12,"first_instance","","",19,null],[5,"submit","","Submits the command buffer to a queue so that it is executed.",null,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"result"}}],[11,"fmt","","",20,null],[11,"destroying_would_block","","Returns `true` if destroying this `Submission` object would block the CPU for some time.",20,null],[11,"finished","","Returns `true` if the GPU has finished executing this submission.",20,null],[11,"wait","","Waits until the submission has finished being executed by the device.",20,null],[11,"queue","","Returns the `queue` the command buffers were submitted to.",20,null],[11,"drop","","",20,null],[11,"new","","Builds a new primary command buffer and start recording commands in it.",21,{"inputs":[{"name":"arc"},{"name":"queuefamily"}],"output":{"name":"primarycommandbufferbuilder"}}],[11,"raw","","See the docs of new().",21,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"update_buffer","","Writes data to a buffer.",21,null],[11,"fill_buffer","","Fills a buffer with data.",21,null],[11,"copy_buffer","","",21,null],[11,"copy_buffer_to_color_image","","",21,null],[11,"copy_color_image_to_buffer","","",21,null],[11,"blit","","",21,null],[11,"clear_color_image","","",21,null],[11,"execute_commands","","Executes secondary compute command buffers within this primary command buffer.",21,null],[11,"dispatch","","Executes a compute pipeline.",21,null],[11,"draw_inline","","Start drawing on a framebuffer.\nThis function returns an object that can be used to submit draw commands on the first\nsubpass of the renderpass.",21,null],[11,"draw_secondary","","Start drawing on a framebuffer.\nThis function returns an object that can be used to submit secondary graphics command\nbuffers that will operate on the first subpass of the renderpass.",21,null],[11,"build_raw","","See the docs of build().",21,null],[11,"build","","Finish recording commands and build the command buffer.",21,null],[11,"draw","","Calls `vkCmdDraw`.",22,null],[11,"draw_indexed","","Calls `vkCmdDrawIndexed`.",22,null],[11,"next_subpass_inline","","Switches to the next subpass of the current renderpass.",22,null],[11,"next_subpass_secondary","","Switches to the next subpass of the current renderpass.",22,null],[11,"draw_end","","Finish drawing this renderpass and get back the builder.",22,null],[11,"next_subpass_inline","","Switches to the next subpass of the current renderpass.",23,null],[11,"next_subpass_secondary","","Switches to the next subpass of the current renderpass.",23,null],[11,"execute_commands","","Executes secondary graphics command buffers within this primary command buffer.",23,null],[11,"draw_end","","Finish drawing this renderpass and get back the builder.",23,null],[11,"new","","Builds a new secondary command buffer and start recording commands in it.",24,{"inputs":[{"name":"arc"},{"name":"queuefamily"},{"name":"subpass"},{"name":"option"}],"output":{"name":"secondarygraphicscommandbufferbuilder"}}],[11,"raw","","See the docs of new().",24,{"inputs":[{"name":"p"},{"name":"subpass"},{"name":"option"}],"output":{"name":"result"}}],[11,"draw","","Calls `vkCmdDraw`.",24,null],[11,"draw_indexed","","Calls `vkCmdDrawIndexed`.",24,null],[11,"draw_indirect","","Calls `vkCmdDrawIndirect`.",24,null],[11,"build_raw","","See the docs of build().",24,null],[11,"build","","Finish recording commands and build the command buffer.",24,null],[11,"new","","Builds a new secondary command buffer and start recording commands in it.",25,{"inputs":[{"name":"arc"},{"name":"queuefamily"}],"output":{"name":"secondarycomputecommandbufferbuilder"}}],[11,"raw","","See the docs of new().",25,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"update_buffer","","Writes data to a buffer.",25,null],[11,"fill_buffer","","Fills a buffer with data.",25,null],[11,"build_raw","","See the docs of build().",25,null],[11,"build","","Finish recording commands and build the command buffer.",25,null],[11,"clone","","",17,null],[11,"fmt","","",17,null],[11,"none","","",17,{"inputs":[],"output":{"name":"dynamicstate"}}],[11,"default","","",17,{"inputs":[],"output":{"name":"dynamicstate"}}],[0,"pool","","In the Vulkan API, command buffers must be allocated from *command pools*.",null,null],[3,"StandardCommandPool","vulkano::command_buffer::pool","Standard implementation of a command pool.",null,null],[3,"StandardCommandPoolFinished","","",null,null],[3,"UnsafeCommandPool","","Low-level implementation of a command pool.",null,null],[3,"UnsafeCommandPoolAllocIter","","Iterator for newly-allocated command buffers.",null,null],[3,"AllocatedCommandBuffer","","Opaque type that represents a command buffer allocated from a pool.",null,null],[11,"new","","Builds a new pool.",26,{"inputs":[{"name":"arc"},{"name":"queuefamily"}],"output":{"name":"standardcommandpool"}}],[11,"free","","",27,null],[11,"device","","",27,null],[11,"queue_family","","",27,null],[11,"new","","Creates a new pool.",28,{"inputs":[{"name":"arc"},{"name":"queuefamily"},{"name":"bool"},{"name":"bool"}],"output":{"name":"result"}}],[11,"reset","","Resets the pool, which resets all the command buffers that were allocated from it.",28,null],[11,"alloc_command_buffers","","Allocates `count` command buffers.",28,null],[11,"free_command_buffers","","Frees individual command buffers.",28,null],[11,"device","","Returns the device this command pool was created with.",28,null],[11,"queue_family","","Returns the queue family on which command buffers of this pool can be executed.",28,null],[11,"internal_object","","",28,null],[11,"drop","","",28,null],[11,"next","","",29,null],[11,"size_hint","","",29,null],[8,"CommandPool","","Types that manage the memory of command buffers.",null,null],[16,"Iter","","See `alloc()`.",30,null],[16,"Lock","","See `lock()`.",30,null],[16,"Finished","","See `finish()`.",30,null],[10,"alloc","","Allocates command buffers from this pool.",30,null],[10,"free","","Frees command buffers from this pool.",30,null],[10,"finish","","Once a command buffer has finished being built, it should call this method in order to\nproduce a `Finished` object.",30,null],[10,"lock","","Before any command buffer allocated from this pool can be modified, the pool itself must\nbe locked by calling this method.",30,null],[10,"can_reset_invidual_command_buffers","","Returns true if command buffers can be reset individually. In other words, if the pool\nwas created with `reset_cb` set to true.",30,null],[10,"device","","Returns the device used to create this pool.",30,null],[10,"queue_family","","Returns the queue family that this pool targets.",30,null],[8,"CommandPoolFinished","","See `CommandPool::finish()`.",null,null],[10,"free","","Frees command buffers.",31,null],[10,"device","","Returns the device used to create this pool.",31,null],[10,"queue_family","","Returns the queue family that this pool targets.",31,null],[11,"from","","",32,{"inputs":[{"name":"commandbuffer"}],"output":{"name":"allocatedcommandbuffer"}}],[11,"internal_object","","",32,null],[0,"sys","vulkano::command_buffer","Lowest-level interface for command buffers creation.",null,null],[3,"UnsafeCommandBufferBuilder","vulkano::command_buffer::sys","",null,null],[3,"ImageSubresourcesRange","","Range of an image subresource.",null,null],[12,"first_mipmap_level","","",33,null],[12,"num_mipmap_levels","","",33,null],[12,"first_array_layer","","",33,null],[12,"num_array_layers","","",33,null],[3,"BufferCopyRegion","","A copy between two buffers.",null,null],[12,"source_offset","","Offset of the first byte to read from the source buffer.",34,null],[12,"destination_offset","","Offset of the first byte to write to the destination buffer.",34,null],[12,"size","","Size in bytes of the copy.",34,null],[3,"PipelineBarrierBuilder","","Prototype for a pipeline barrier that&#39;s going to be added to a command buffer builder.",null,null],[3,"UnsafeCommandBuffer","","",null,null],[4,"Kind","","Determines the kind of command buffer that we want to create.",null,null],[13,"Primary","","A primary command buffer can execute all commands and can call secondary command buffers.",35,null],[13,"Secondary","","A secondary command buffer can execute all dispatch and transfer operations, but not\ndrawing operations.",35,null],[13,"SecondaryRenderPass","","A secondary command buffer within a render pass can only call draw operations that can\nbe executed from within a specific subpass.",35,null],[12,"subpass","vulkano::command_buffer::sys::Kind","Which subpass this secondary command buffer can be called from.",35,null],[12,"framebuffer","","The framebuffer object that will be used when calling the command buffer.\nThis parameter is optional and is an optimization hint for the implementation.",35,null],[4,"Flags","vulkano::command_buffer::sys","Flags to pass when creating a command buffer.",null,null],[13,"None","","The command buffer can be used multiple times, but must not execute more than once\nsimultaneously.",36,null],[13,"SimultaneousUse","","The command buffer can be executed multiple times in parallel.",36,null],[13,"OneTimeSubmit","","The command buffer can only be submitted once. Any further submit is forbidden.",36,null],[11,"new","","Creates a new builder.",37,{"inputs":[{"name":"p"},{"name":"kind"},{"name":"flags"}],"output":{"name":"result"}}],[11,"already_allocated","","Creates a new command buffer builder from an already-allocated command buffer.",37,{"inputs":[{"name":"p"},{"name":"allocatedcommandbuffer"},{"name":"kind"},{"name":"flags"}],"output":{"name":"result"}}],[11,"build","","Finishes building the command buffer.",37,null],[11,"pool","","Returns the pool used to create this command buffer builder.",37,null],[11,"device","","Returns the device this command buffer belongs to.",37,null],[11,"is_secondary","","Returns true if this is a secondary command buffer.",37,null],[11,"clear_color_image","","Clears an image with a color format, from outside of a render pass.",37,null],[11,"clear_depth_stencil_image","","Clears an image with a depth, stencil or depth-stencil format, from outside of a\nrender pass.",37,null],[11,"clear_attachments","","Clears attachments of the current render pass.",37,null],[11,"fill_buffer","","Fills a buffer by repeating a 32 bits data.",37,null],[11,"update_buffer","","Fills a buffer with some data.",37,null],[11,"copy_buffer","","Copies data from a source buffer to a destination buffer.",37,null],[11,"pipeline_barrier","","Adds a pipeline barrier to the command buffer.",37,null],[11,"begin_render_pass","","Enters a render pass.",37,null],[11,"next_subpass","","Goes to the next subpass of the render pass.",37,null],[11,"end_render_pass","","Ends the current render pass.",37,null],[11,"internal_object","","",37,null],[11,"drop","","",37,null],[11,"clone","","",35,null],[11,"eq","","",36,null],[11,"clone","","",36,null],[11,"fmt","","",36,null],[11,"hash","","",34,null],[11,"eq","","",34,null],[11,"ne","","",34,null],[11,"clone","","",34,null],[11,"fmt","","",34,null],[11,"new","","Adds a command that adds a pipeline barrier to a command buffer.",38,{"inputs":[],"output":{"name":"pipelinebarrierbuilder"}}],[11,"is_empty","","Returns true if no barrier or execution dependency has been added yet.",38,null],[11,"add_execution_dependency","","Adds an execution dependency. This means that all the stages in `source` of the previous\ncommands must finish before any of the stages in `dest` of the following commands can start.",38,null],[11,"add_memory_barrier","","Adds a memory barrier. This means that all the memory writes by the given source stages\nfor the given source accesses must be visible by the given dest stages for the given dest\naccesses.",38,null],[11,"add_buffer_memory_barrier","","Adds a buffer memory barrier. This means that all the memory writes to the given buffer by\nthe given source stages for the given source accesses must be visible by the given dest\nstages for the given dest accesses.",38,null],[11,"add_image_memory_barrier","","Adds an image memory barrier. This is the equivalent of `add_buffer_memory_barrier` but\nfor images.",38,null],[11,"eq","vulkano::command_buffer","",18,null],[11,"ne","","",18,null],[11,"clone","","",18,null],[11,"fmt","","",18,null],[11,"eq","","",19,null],[11,"ne","","",19,null],[11,"clone","","",19,null],[11,"fmt","","",19,null],[0,"descriptor","vulkano","Provides a way for shaders to access the content of buffers and images, or read arbitrary data.",null,null],[0,"descriptor","vulkano::descriptor","",null,null],[3,"DescriptorDesc","vulkano::descriptor::descriptor","Describes a single descriptor.",null,null],[12,"binding","","Offset of the binding within the descriptor.",39,null],[12,"ty","","Describes the content and layout of each array element of a descriptor.",39,null],[12,"array_count","","How many array elements this descriptor is made of.",39,null],[12,"stages","","Which shader stages are going to access this descriptor.",39,null],[12,"readonly","","True if the attachment is only ever read by the shader. False if it is also written.",39,null],[3,"DescriptorImageDesc","","",null,null],[12,"sampled","","",40,null],[12,"dimensions","","",40,null],[12,"format","","The format of the image, or `None` if the format is unknown.",40,null],[12,"multisampled","","True if the image is multisampled.",40,null],[12,"array_layers","","",40,null],[3,"DescriptorBufferDesc","","",null,null],[12,"dynamic","","",41,null],[12,"storage","","",41,null],[3,"ShaderStages","","Describes which shader stages have access to a descriptor.",null,null],[12,"vertex","","`True` means that the descriptor will be used by the vertex shader.",42,null],[12,"tessellation_control","","`True` means that the descriptor will be used by the tessellation control shader.",42,null],[12,"tessellation_evaluation","","`True` means that the descriptor will be used by the tessellation evaluation shader.",42,null],[12,"geometry","","`True` means that the descriptor will be used by the geometry shader.",42,null],[12,"fragment","","`True` means that the descriptor will be used by the fragment shader.",42,null],[12,"compute","","`True` means that the descriptor will be used by the compute shader.",42,null],[4,"DescriptorDescTy","","Describes the content and layout of each array element of a descriptor.",null,null],[13,"Sampler","","",43,null],[13,"CombinedImageSampler","","",43,null],[13,"Image","","",43,null],[13,"TexelBuffer","","",43,null],[12,"storage","vulkano::descriptor::descriptor::DescriptorDescTy","If `true`, this describes a storage texel buffer.",43,null],[12,"format","","The format of the content, or `None` if the format is unknown. Depending on the\ncontext, it may be invalid to have a `None` value here.",43,null],[13,"InputAttachment","vulkano::descriptor::descriptor","",43,null],[12,"multisampled","vulkano::descriptor::descriptor::DescriptorDescTy","",43,null],[12,"array_layers","","",43,null],[13,"Buffer","vulkano::descriptor::descriptor","",43,null],[4,"DescriptorImageDescArray","","",null,null],[13,"NonArrayed","","",44,null],[13,"Arrayed","","",44,null],[12,"max_layers","vulkano::descriptor::descriptor::DescriptorImageDescArray","",44,null],[4,"DescriptorImageDescDimensions","vulkano::descriptor::descriptor","",null,null],[13,"OneDimensional","","",45,null],[13,"TwoDimensional","","",45,null],[13,"ThreeDimensional","","",45,null],[13,"Cube","","",45,null],[4,"DescriptorType","","Describes what kind of resource may later be bound to a descriptor.",null,null],[13,"Sampler","","",46,null],[13,"CombinedImageSampler","","",46,null],[13,"SampledImage","","",46,null],[13,"StorageImage","","",46,null],[13,"UniformTexelBuffer","","",46,null],[13,"StorageTexelBuffer","","",46,null],[13,"UniformBuffer","","",46,null],[13,"StorageBuffer","","",46,null],[13,"UniformBufferDynamic","","",46,null],[13,"StorageBufferDynamic","","",46,null],[13,"InputAttachment","","",46,null],[11,"clone","","",39,null],[11,"fmt","","",39,null],[11,"is_superset_of","","Checks whether we are a superset of another descriptor.",39,null],[11,"eq","","",43,null],[11,"ne","","",43,null],[11,"clone","","",43,null],[11,"fmt","","",43,null],[11,"ty","","Returns the type of descriptor.",43,null],[11,"is_superset_of","","Checks whether we are a superset of another descriptor type.",43,null],[11,"eq","","",40,null],[11,"ne","","",40,null],[11,"clone","","",40,null],[11,"fmt","","",40,null],[11,"is_superset_of","","Checks whether we are a superset of another image.",40,null],[11,"eq","","",44,null],[11,"ne","","",44,null],[11,"clone","","",44,null],[11,"fmt","","",44,null],[11,"eq","","",45,null],[11,"clone","","",45,null],[11,"fmt","","",45,null],[11,"eq","","",41,null],[11,"ne","","",41,null],[11,"clone","","",41,null],[11,"fmt","","",41,null],[11,"eq","","",46,null],[11,"clone","","",46,null],[11,"fmt","","",46,null],[11,"eq","","",42,null],[11,"ne","","",42,null],[11,"clone","","",42,null],[11,"fmt","","",42,null],[11,"all","","Creates a `ShaderStages` struct will all stages set to `true`.",42,{"inputs":[],"output":{"name":"shaderstages"}}],[11,"none","","Creates a `ShaderStages` struct will all stages set to `false`.",42,{"inputs":[],"output":{"name":"shaderstages"}}],[11,"all_graphics","","Creates a `ShaderStages` struct will all graphics stages set to `true`.",42,{"inputs":[],"output":{"name":"shaderstages"}}],[11,"compute","","Creates a `ShaderStages` struct will the compute stage set to `true`.",42,{"inputs":[],"output":{"name":"shaderstages"}}],[11,"is_superset_of","","Checks whether we have more stages enabled than `other`.",42,null],[0,"descriptor_set","vulkano::descriptor","",null,null],[3,"DescriptorPool","vulkano::descriptor::descriptor_set","Pool from which descriptor sets are allocated from.",null,null],[3,"UnsafeDescriptorSet","","Low-level descriptor set.",null,null],[3,"DescriptorWrite","","Represents a single write entry to a descriptor set.",null,null],[3,"UnsafeDescriptorSetLayout","","Describes to the Vulkan implementation the layout of all descriptors within a descriptor set.",null,null],[11,"raw","","See the docs of new().",47,{"inputs":[{"name":"arc"}],"output":{"name":"result"}}],[11,"new","","Initializes a new pool.",47,{"inputs":[{"name":"arc"}],"output":{"name":"arc"}}],[11,"device","","Returns the device this pool was created from.",47,null],[11,"internal_object_guard","","",47,null],[11,"drop","","",47,null],[11,"uninitialized_raw","","See the docs of uninitialized().",48,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"result"}}],[11,"uninitialized","","Builds a new descriptor set.",48,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"unsafedescriptorset"}}],[11,"write","","Modifies a descriptor set without checking that the writes are correct.",48,null],[11,"layout","","Returns the layout used to create this descriptor set.",48,null],[11,"internal_object","","",48,null],[11,"drop","","",48,null],[11,"storage_image","","",49,{"inputs":[{"name":"u32"},{"name":"arc"}],"output":{"name":"descriptorwrite"}}],[11,"sampler","","",49,{"inputs":[{"name":"u32"},{"name":"arc"}],"output":{"name":"descriptorwrite"}}],[11,"sampled_image","","",49,{"inputs":[{"name":"u32"},{"name":"arc"}],"output":{"name":"descriptorwrite"}}],[11,"combined_image_sampler","","",49,{"inputs":[{"name":"u32"},{"name":"arc"},{"name":"arc"}],"output":{"name":"descriptorwrite"}}],[11,"uniform_texel_buffer","","",49,{"inputs":[{"name":"u32"},{"name":"arc"}],"output":{"name":"descriptorwrite"}}],[11,"storage_texel_buffer","","",49,{"inputs":[{"name":"u32"},{"name":"arc"}],"output":{"name":"descriptorwrite"}}],[11,"uniform_buffer","","",49,{"inputs":[{"name":"u32"},{"name":"s"}],"output":{"name":"descriptorwrite"}}],[11,"unchecked_uniform_buffer","","",49,{"inputs":[{"name":"u32"},{"name":"arc"},{"name":"range"}],"output":{"name":"descriptorwrite"}}],[11,"storage_buffer","","",49,{"inputs":[{"name":"u32"},{"name":"s"}],"output":{"name":"descriptorwrite"}}],[11,"unchecked_storage_buffer","","",49,{"inputs":[{"name":"u32"},{"name":"arc"},{"name":"range"}],"output":{"name":"descriptorwrite"}}],[11,"dynamic_uniform_buffer","","",49,{"inputs":[{"name":"u32"},{"name":"s"}],"output":{"name":"descriptorwrite"}}],[11,"unchecked_dynamic_uniform_buffer","","",49,{"inputs":[{"name":"u32"},{"name":"arc"},{"name":"range"}],"output":{"name":"descriptorwrite"}}],[11,"dynamic_storage_buffer","","",49,{"inputs":[{"name":"u32"},{"name":"s"}],"output":{"name":"descriptorwrite"}}],[11,"unchecked_dynamic_storage_buffer","","",49,{"inputs":[{"name":"u32"},{"name":"arc"},{"name":"range"}],"output":{"name":"descriptorwrite"}}],[11,"input_attachment","","",49,{"inputs":[{"name":"u32"},{"name":"arc"}],"output":{"name":"descriptorwrite"}}],[11,"ty","","Returns the type corresponding to this write.",49,null],[11,"raw","","See the docs of new().",50,{"inputs":[{"name":"p"},{"name":"i"}],"output":{"name":"result"}}],[11,"new","","Builds a new `UnsafeDescriptorSetLayout` with the given descriptors.",50,{"inputs":[{"name":"p"},{"name":"i"}],"output":{"name":"arc"}}],[11,"device","","Returns the device used to create this layout.",50,null],[11,"internal_object","","",50,null],[11,"drop","","",50,null],[8,"DescriptorSetsCollection","","A collection of descriptor set objects.",null,null],[16,"ListIter","","An iterator that produces the list of descriptor set objects contained in this collection.",51,null],[16,"SetsIter","","An iterator that produces the description of the list of sets.",51,null],[16,"DescIter","","An iterator that produces the description of a set.",51,null],[10,"list","","Returns the list of descriptor set objects of this collection.",51,null],[10,"description","","Produces a description of the sets, as if it was a layout.",51,null],[8,"DescriptorSet","","Trait for objects that contain a collection of resources that will be accessible by shaders.",null,null],[10,"inner","","Returns the inner `UnsafeDescriptorSet`.",52,null],[8,"DescriptorSetDesc","","Trait for objects that describe the layout of the descriptors of a set.",null,null],[16,"Iter","","Iterator that describes individual descriptors.",53,null],[10,"desc","","Describes the layout of the descriptors of the pipeline.",53,null],[0,"pipeline_layout","vulkano::descriptor","Describes the layout of descriptors and push constants used by a pipeline.",null,null],[3,"EmptyPipeline","vulkano::descriptor::pipeline_layout","Implementation of `PipelineLayout` for an empty pipeline.",null,null],[3,"EmptyPipelineDesc","","Description of an empty pipeline layout.",null,null],[3,"UnsafePipelineLayout","","Low-level struct that represents the layout of the resources available to your shaders.",null,null],[4,"UnsafePipelineLayoutCreationError","","Error that can happen when creating an instance.",null,null],[13,"OomError","","Not enough memory.",54,null],[13,"MaxDescriptorSetsLimitExceeded","","The maximum number of descriptor sets has been exceeded.",54,null],[13,"MaxPushConstantsSizeExceeded","","The maximum size of push constants has been exceeded.",54,null],[13,"InvalidPushConstant","","One of the push constants range didn&#39;t obey the rules. The list of stages must not be\nempty, the size must not be 0, and the size must be a multiple or 4.",54,null],[0,"custom_pipeline_macro","","",null,null],[3,"UniformBuffer","vulkano::descriptor::pipeline_layout::custom_pipeline_macro","",null,null],[3,"StorageBuffer","","",null,null],[3,"UniformTexelBuffer","","",null,null],[3,"StorageTexelBuffer","","",null,null],[3,"CombinedImageSampler","","",null,null],[3,"SampledImage","","",null,null],[3,"StorageImage","","",null,null],[3,"InputAttachment","","",null,null],[8,"ValidParameter","","",null,null],[10,"write","","",55,null],[8,"DescriptorMarker","","",null,null],[10,"descriptor_type","","",56,{"inputs":[],"output":{"name":"descriptordescty"}}],[11,"descriptor_type","","",57,{"inputs":[],"output":{"name":"descriptordescty"}}],[11,"descriptor_type","","",58,{"inputs":[],"output":{"name":"descriptordescty"}}],[11,"descriptor_type","","",59,{"inputs":[],"output":{"name":"descriptordescty"}}],[11,"descriptor_type","","",60,{"inputs":[],"output":{"name":"descriptordescty"}}],[11,"descriptor_type","","",61,{"inputs":[],"output":{"name":"descriptordescty"}}],[11,"descriptor_type","","",62,{"inputs":[],"output":{"name":"descriptordescty"}}],[11,"descriptor_type","","",63,{"inputs":[],"output":{"name":"descriptordescty"}}],[11,"descriptor_type","","",64,{"inputs":[],"output":{"name":"descriptordescty"}}],[11,"new","vulkano::descriptor::pipeline_layout","Builds a new empty pipeline.",65,{"inputs":[{"name":"arc"}],"output":{"name":"result"}}],[11,"inner","","",65,null],[11,"descriptors_desc","","",65,null],[11,"clone","","",66,null],[11,"fmt","","",66,null],[11,"descriptors_desc","","",66,null],[11,"new","","Creates a new `UnsafePipelineLayout`.",67,{"inputs":[{"name":"arc"},{"name":"i"},{"name":"p"}],"output":{"name":"result"}}],[11,"descriptor_set_layout","","Returns the `UnsafeDescriptorSetLayout` object of the specified set index.",67,null],[11,"device","","Returns the device used to create this pipeline layout.",67,null],[11,"internal_object","","",67,null],[11,"drop","","",67,null],[11,"eq","","",54,null],[11,"ne","","",54,null],[11,"fmt","","",54,null],[11,"clone","","",54,null],[11,"description","","",54,null],[11,"cause","","",54,null],[11,"fmt","","",54,null],[11,"from","","",54,{"inputs":[{"name":"oomerror"}],"output":{"name":"unsafepipelinelayoutcreationerror"}}],[11,"from","","",54,{"inputs":[{"name":"error"}],"output":{"name":"unsafepipelinelayoutcreationerror"}}],[8,"PipelineLayout","","Trait for objects that describe the layout of the descriptors and push constants of a pipeline.",null,null],[10,"inner","","Returns the inner `UnsafePipelineLayout`.",68,null],[8,"PipelineLayoutDesc","","Trait for objects that describe the layout of the descriptors and push constants of a pipeline.",null,null],[16,"SetsIter","","Iterator that describes descriptor sets.",69,null],[16,"DescIter","","Iterator that describes individual descriptors.",69,null],[10,"descriptors_desc","","Describes the layout of the descriptors of the pipeline.",69,null],[8,"PipelineLayoutSuperset","","Traits that allow determining whether a pipeline layout is a superset of another one.",null,null],[10,"is_superset_of","","Returns true if `self` is a superset of `Other`.",70,null],[8,"PipelineLayoutSetsCompatible","","Traits that allow determining whether",null,null],[10,"is_compatible","","Returns true if `Other` can be used with a pipeline that uses `self` as layout.",71,null],[8,"PipelineLayoutPushConstantsCompatible","","Traits that allow determining whether",null,null],[10,"is_compatible","","Returns true if `Pc` can be used with a pipeline that uses `self` as layout.",72,null],[8,"PipelineLayout","vulkano::descriptor","Trait for objects that describe the layout of the descriptors and push constants of a pipeline.",null,null],[10,"inner","","Returns the inner `UnsafePipelineLayout`.",68,null],[0,"device","vulkano","Communication channel with a physical device.",null,null],[3,"DeviceExtensions","vulkano::device","List of extensions that are enabled or available.",null,null],[12,"khr_swapchain","","",73,null],[12,"khr_display_swapchain","","",73,null],[3,"Device","","Represents a Vulkan context.",null,null],[3,"QueuesIter","","Iterator that returns the queues produced when creating a device.",null,null],[3,"Queue","","Represents a queue where commands can be submitted.",null,null],[4,"DeviceCreationError","","Error that can be returned when creating a device.",null,null],[13,"OutOfHostMemory","","There is no memory available on the host (ie. the CPU, RAM, etc.).",74,null],[13,"OutOfDeviceMemory","","There is no memory available on the device (ie. video memory).",74,null],[11,"new","","Builds a new Vulkan device for the given physical device.",75,{"inputs":[{"name":"physicaldevice"},{"name":"features"},{"name":"deviceextensions"},{"name":"i"}],"output":{"name":"result"}}],[11,"wait_raw","","See the docs of wait().",75,null],[11,"wait","","Waits until all work on this device has finished. You should never need to call\nthis function, but it can be useful for debugging or benchmarking purposes.",75,null],[11,"instance","","Returns the instance used to create this device.",75,null],[11,"physical_device","","Returns the physical device that was used to create this device.",75,null],[11,"enabled_features","","Returns the features that are enabled in the device.",75,null],[11,"loaded_extensions","","Returns the list of extensions that have been loaded.",75,null],[11,"standard_pool","","Returns the standard memory pool used by default if you don&#39;t provide any other pool.",75,{"inputs":[{"name":"arc"}],"output":{"name":"arc"}}],[11,"standard_command_pool","","Returns the standard command buffer pool used by default if you don&#39;t provide any other\npool.",75,{"inputs":[{"name":"arc"},{"name":"queuefamily"}],"output":{"name":"arc"}}],[11,"fmt","","",75,null],[11,"internal_object","","",75,null],[11,"drop","","",75,null],[11,"next","","",76,null],[11,"size_hint","","",76,null],[11,"eq","","",74,null],[11,"fmt","","",74,null],[11,"clone","","",74,null],[11,"description","","",74,null],[11,"fmt","","",74,null],[11,"from","","",74,{"inputs":[{"name":"error"}],"output":{"name":"devicecreationerror"}}],[11,"fmt","","",77,null],[11,"device","","Returns the device this queue belongs to.",77,null],[11,"family","","Returns the family this queue belongs to.",77,null],[11,"id_within_family","","Returns the index of this queue within its family.",77,null],[11,"wait_raw","","See the docs of wait().",77,null],[11,"wait","","Waits until all work on this queue has finished.",77,null],[11,"internal_object_guard","","",77,null],[0,"format","vulkano","Declares all the formats of data and images supported by Vulkan.",null,null],[3,"R4G4UnormPack8","vulkano::format","",null,null],[3,"R4G4B4A4UnormPack16","","",null,null],[3,"B4G4R4A4UnormPack16","","",null,null],[3,"R5G6B5UnormPack16","","",null,null],[3,"B5G6R5UnormPack16","","",null,null],[3,"R5G5B5A1UnormPack16","","",null,null],[3,"B5G5R5A1UnormPack16","","",null,null],[3,"A1R5G5B5UnormPack16","","",null,null],[3,"R8Unorm","","",null,null],[3,"R8Snorm","","",null,null],[3,"R8Uscaled","","",null,null],[3,"R8Sscaled","","",null,null],[3,"R8Uint","","",null,null],[3,"R8Sint","","",null,null],[3,"R8Srgb","","",null,null],[3,"R8G8Unorm","","",null,null],[3,"R8G8Snorm","","",null,null],[3,"R8G8Uscaled","","",null,null],[3,"R8G8Sscaled","","",null,null],[3,"R8G8Uint","","",null,null],[3,"R8G8Sint","","",null,null],[3,"R8G8Srgb","","",null,null],[3,"R8G8B8Unorm","","",null,null],[3,"R8G8B8Snorm","","",null,null],[3,"R8G8B8Uscaled","","",null,null],[3,"R8G8B8Sscaled","","",null,null],[3,"R8G8B8Uint","","",null,null],[3,"R8G8B8Sint","","",null,null],[3,"R8G8B8Srgb","","",null,null],[3,"B8G8R8Unorm","","",null,null],[3,"B8G8R8Snorm","","",null,null],[3,"B8G8R8Uscaled","","",null,null],[3,"B8G8R8Sscaled","","",null,null],[3,"B8G8R8Uint","","",null,null],[3,"B8G8R8Sint","","",null,null],[3,"B8G8R8Srgb","","",null,null],[3,"R8G8B8A8Unorm","","",null,null],[3,"R8G8B8A8Snorm","","",null,null],[3,"R8G8B8A8Uscaled","","",null,null],[3,"R8G8B8A8Sscaled","","",null,null],[3,"R8G8B8A8Uint","","",null,null],[3,"R8G8B8A8Sint","","",null,null],[3,"R8G8B8A8Srgb","","",null,null],[3,"B8G8R8A8Unorm","","",null,null],[3,"B8G8R8A8Snorm","","",null,null],[3,"B8G8R8A8Uscaled","","",null,null],[3,"B8G8R8A8Sscaled","","",null,null],[3,"B8G8R8A8Uint","","",null,null],[3,"B8G8R8A8Sint","","",null,null],[3,"B8G8R8A8Srgb","","",null,null],[3,"A8B8G8R8UnormPack32","","",null,null],[3,"A8B8G8R8SnormPack32","","",null,null],[3,"A8B8G8R8UscaledPack32","","",null,null],[3,"A8B8G8R8SscaledPack32","","",null,null],[3,"A8B8G8R8UintPack32","","",null,null],[3,"A8B8G8R8SintPack32","","",null,null],[3,"A8B8G8R8SrgbPack32","","",null,null],[3,"A2R10G10B10UnormPack32","","",null,null],[3,"A2R10G10B10SnormPack32","","",null,null],[3,"A2R10G10B10UscaledPack32","","",null,null],[3,"A2R10G10B10SscaledPack32","","",null,null],[3,"A2R10G10B10UintPack32","","",null,null],[3,"A2R10G10B10SintPack32","","",null,null],[3,"A2B10G10R10UnormPack32","","",null,null],[3,"A2B10G10R10SnormPack32","","",null,null],[3,"A2B10G10R10UscaledPack32","","",null,null],[3,"A2B10G10R10SscaledPack32","","",null,null],[3,"A2B10G10R10UintPack32","","",null,null],[3,"A2B10G10R10SintPack32","","",null,null],[3,"R16Unorm","","",null,null],[3,"R16Snorm","","",null,null],[3,"R16Uscaled","","",null,null],[3,"R16Sscaled","","",null,null],[3,"R16Uint","","",null,null],[3,"R16Sint","","",null,null],[3,"R16Sfloat","","",null,null],[3,"R16G16Unorm","","",null,null],[3,"R16G16Snorm","","",null,null],[3,"R16G16Uscaled","","",null,null],[3,"R16G16Sscaled","","",null,null],[3,"R16G16Uint","","",null,null],[3,"R16G16Sint","","",null,null],[3,"R16G16Sfloat","","",null,null],[3,"R16G16B16Unorm","","",null,null],[3,"R16G16B16Snorm","","",null,null],[3,"R16G16B16Uscaled","","",null,null],[3,"R16G16B16Sscaled","","",null,null],[3,"R16G16B16Uint","","",null,null],[3,"R16G16B16Sint","","",null,null],[3,"R16G16B16Sfloat","","",null,null],[3,"R16G16B16A16Unorm","","",null,null],[3,"R16G16B16A16Snorm","","",null,null],[3,"R16G16B16A16Uscaled","","",null,null],[3,"R16G16B16A16Sscaled","","",null,null],[3,"R16G16B16A16Uint","","",null,null],[3,"R16G16B16A16Sint","","",null,null],[3,"R16G16B16A16Sfloat","","",null,null],[3,"R32Uint","","",null,null],[3,"R32Sint","","",null,null],[3,"R32Sfloat","","",null,null],[3,"R32G32Uint","","",null,null],[3,"R32G32Sint","","",null,null],[3,"R32G32Sfloat","","",null,null],[3,"R32G32B32Uint","","",null,null],[3,"R32G32B32Sint","","",null,null],[3,"R32G32B32Sfloat","","",null,null],[3,"R32G32B32A32Uint","","",null,null],[3,"R32G32B32A32Sint","","",null,null],[3,"R32G32B32A32Sfloat","","",null,null],[3,"R64Uint","","",null,null],[3,"R64Sint","","",null,null],[3,"R64Sfloat","","",null,null],[3,"R64G64Uint","","",null,null],[3,"R64G64Sint","","",null,null],[3,"R64G64Sfloat","","",null,null],[3,"R64G64B64Uint","","",null,null],[3,"R64G64B64Sint","","",null,null],[3,"R64G64B64Sfloat","","",null,null],[3,"R64G64B64A64Uint","","",null,null],[3,"R64G64B64A64Sint","","",null,null],[3,"R64G64B64A64Sfloat","","",null,null],[3,"B10G11R11UfloatPack32","","",null,null],[3,"E5B9G9R9UfloatPack32","","",null,null],[3,"D16Unorm","","",null,null],[3,"X8_D24UnormPack32","","",null,null],[3,"D32Sfloat","","",null,null],[3,"S8Uint","","",null,null],[3,"D16Unorm_S8Uint","","",null,null],[3,"D24Unorm_S8Uint","","",null,null],[3,"D32Sfloat_S8Uint","","",null,null],[3,"BC1_RGBUnormBlock","","",null,null],[3,"BC1_RGBSrgbBlock","","",null,null],[3,"BC1_RGBAUnormBlock","","",null,null],[3,"BC1_RGBASrgbBlock","","",null,null],[3,"BC2UnormBlock","","",null,null],[3,"BC2SrgbBlock","","",null,null],[3,"BC3UnormBlock","","",null,null],[3,"BC3SrgbBlock","","",null,null],[3,"BC4UnormBlock","","",null,null],[3,"BC4SnormBlock","","",null,null],[3,"BC5UnormBlock","","",null,null],[3,"BC5SnormBlock","","",null,null],[3,"BC6HUfloatBlock","","",null,null],[3,"BC6HSfloatBlock","","",null,null],[3,"BC7UnormBlock","","",null,null],[3,"BC7SrgbBlock","","",null,null],[3,"ETC2_R8G8B8UnormBlock","","",null,null],[3,"ETC2_R8G8B8SrgbBlock","","",null,null],[3,"ETC2_R8G8B8A1UnormBlock","","",null,null],[3,"ETC2_R8G8B8A1SrgbBlock","","",null,null],[3,"ETC2_R8G8B8A8UnormBlock","","",null,null],[3,"ETC2_R8G8B8A8SrgbBlock","","",null,null],[3,"EAC_R11UnormBlock","","",null,null],[3,"EAC_R11SnormBlock","","",null,null],[3,"EAC_R11G11UnormBlock","","",null,null],[3,"EAC_R11G11SnormBlock","","",null,null],[3,"ASTC_4x4UnormBlock","","",null,null],[3,"ASTC_4x4SrgbBlock","","",null,null],[3,"ASTC_5x4UnormBlock","","",null,null],[3,"ASTC_5x4SrgbBlock","","",null,null],[3,"ASTC_5x5UnormBlock","","",null,null],[3,"ASTC_5x5SrgbBlock","","",null,null],[3,"ASTC_6x5UnormBlock","","",null,null],[3,"ASTC_6x5SrgbBlock","","",null,null],[3,"ASTC_6x6UnormBlock","","",null,null],[3,"ASTC_6x6SrgbBlock","","",null,null],[3,"ASTC_8x5UnormBlock","","",null,null],[3,"ASTC_8x5SrgbBlock","","",null,null],[3,"ASTC_8x6UnormBlock","","",null,null],[3,"ASTC_8x6SrgbBlock","","",null,null],[3,"ASTC_8x8UnormBlock","","",null,null],[3,"ASTC_8x8SrgbBlock","","",null,null],[3,"ASTC_10x5UnormBlock","","",null,null],[3,"ASTC_10x5SrgbBlock","","",null,null],[3,"ASTC_10x6UnormBlock","","",null,null],[3,"ASTC_10x6SrgbBlock","","",null,null],[3,"ASTC_10x8UnormBlock","","",null,null],[3,"ASTC_10x8SrgbBlock","","",null,null],[3,"ASTC_10x10UnormBlock","","",null,null],[3,"ASTC_10x10SrgbBlock","","",null,null],[3,"ASTC_12x10UnormBlock","","",null,null],[3,"ASTC_12x10SrgbBlock","","",null,null],[3,"ASTC_12x12UnormBlock","","",null,null],[3,"ASTC_12x12SrgbBlock","","",null,null],[4,"Format","","An enumeration of all the possible formats.",null,null],[13,"R4G4UnormPack8","","",78,null],[13,"R4G4B4A4UnormPack16","","",78,null],[13,"B4G4R4A4UnormPack16","","",78,null],[13,"R5G6B5UnormPack16","","",78,null],[13,"B5G6R5UnormPack16","","",78,null],[13,"R5G5B5A1UnormPack16","","",78,null],[13,"B5G5R5A1UnormPack16","","",78,null],[13,"A1R5G5B5UnormPack16","","",78,null],[13,"R8Unorm","","",78,null],[13,"R8Snorm","","",78,null],[13,"R8Uscaled","","",78,null],[13,"R8Sscaled","","",78,null],[13,"R8Uint","","",78,null],[13,"R8Sint","","",78,null],[13,"R8Srgb","","",78,null],[13,"R8G8Unorm","","",78,null],[13,"R8G8Snorm","","",78,null],[13,"R8G8Uscaled","","",78,null],[13,"R8G8Sscaled","","",78,null],[13,"R8G8Uint","","",78,null],[13,"R8G8Sint","","",78,null],[13,"R8G8Srgb","","",78,null],[13,"R8G8B8Unorm","","",78,null],[13,"R8G8B8Snorm","","",78,null],[13,"R8G8B8Uscaled","","",78,null],[13,"R8G8B8Sscaled","","",78,null],[13,"R8G8B8Uint","","",78,null],[13,"R8G8B8Sint","","",78,null],[13,"R8G8B8Srgb","","",78,null],[13,"B8G8R8Unorm","","",78,null],[13,"B8G8R8Snorm","","",78,null],[13,"B8G8R8Uscaled","","",78,null],[13,"B8G8R8Sscaled","","",78,null],[13,"B8G8R8Uint","","",78,null],[13,"B8G8R8Sint","","",78,null],[13,"B8G8R8Srgb","","",78,null],[13,"R8G8B8A8Unorm","","",78,null],[13,"R8G8B8A8Snorm","","",78,null],[13,"R8G8B8A8Uscaled","","",78,null],[13,"R8G8B8A8Sscaled","","",78,null],[13,"R8G8B8A8Uint","","",78,null],[13,"R8G8B8A8Sint","","",78,null],[13,"R8G8B8A8Srgb","","",78,null],[13,"B8G8R8A8Unorm","","",78,null],[13,"B8G8R8A8Snorm","","",78,null],[13,"B8G8R8A8Uscaled","","",78,null],[13,"B8G8R8A8Sscaled","","",78,null],[13,"B8G8R8A8Uint","","",78,null],[13,"B8G8R8A8Sint","","",78,null],[13,"B8G8R8A8Srgb","","",78,null],[13,"A8B8G8R8UnormPack32","","",78,null],[13,"A8B8G8R8SnormPack32","","",78,null],[13,"A8B8G8R8UscaledPack32","","",78,null],[13,"A8B8G8R8SscaledPack32","","",78,null],[13,"A8B8G8R8UintPack32","","",78,null],[13,"A8B8G8R8SintPack32","","",78,null],[13,"A8B8G8R8SrgbPack32","","",78,null],[13,"A2R10G10B10UnormPack32","","",78,null],[13,"A2R10G10B10SnormPack32","","",78,null],[13,"A2R10G10B10UscaledPack32","","",78,null],[13,"A2R10G10B10SscaledPack32","","",78,null],[13,"A2R10G10B10UintPack32","","",78,null],[13,"A2R10G10B10SintPack32","","",78,null],[13,"A2B10G10R10UnormPack32","","",78,null],[13,"A2B10G10R10SnormPack32","","",78,null],[13,"A2B10G10R10UscaledPack32","","",78,null],[13,"A2B10G10R10SscaledPack32","","",78,null],[13,"A2B10G10R10UintPack32","","",78,null],[13,"A2B10G10R10SintPack32","","",78,null],[13,"R16Unorm","","",78,null],[13,"R16Snorm","","",78,null],[13,"R16Uscaled","","",78,null],[13,"R16Sscaled","","",78,null],[13,"R16Uint","","",78,null],[13,"R16Sint","","",78,null],[13,"R16Sfloat","","",78,null],[13,"R16G16Unorm","","",78,null],[13,"R16G16Snorm","","",78,null],[13,"R16G16Uscaled","","",78,null],[13,"R16G16Sscaled","","",78,null],[13,"R16G16Uint","","",78,null],[13,"R16G16Sint","","",78,null],[13,"R16G16Sfloat","","",78,null],[13,"R16G16B16Unorm","","",78,null],[13,"R16G16B16Snorm","","",78,null],[13,"R16G16B16Uscaled","","",78,null],[13,"R16G16B16Sscaled","","",78,null],[13,"R16G16B16Uint","","",78,null],[13,"R16G16B16Sint","","",78,null],[13,"R16G16B16Sfloat","","",78,null],[13,"R16G16B16A16Unorm","","",78,null],[13,"R16G16B16A16Snorm","","",78,null],[13,"R16G16B16A16Uscaled","","",78,null],[13,"R16G16B16A16Sscaled","","",78,null],[13,"R16G16B16A16Uint","","",78,null],[13,"R16G16B16A16Sint","","",78,null],[13,"R16G16B16A16Sfloat","","",78,null],[13,"R32Uint","","",78,null],[13,"R32Sint","","",78,null],[13,"R32Sfloat","","",78,null],[13,"R32G32Uint","","",78,null],[13,"R32G32Sint","","",78,null],[13,"R32G32Sfloat","","",78,null],[13,"R32G32B32Uint","","",78,null],[13,"R32G32B32Sint","","",78,null],[13,"R32G32B32Sfloat","","",78,null],[13,"R32G32B32A32Uint","","",78,null],[13,"R32G32B32A32Sint","","",78,null],[13,"R32G32B32A32Sfloat","","",78,null],[13,"R64Uint","","",78,null],[13,"R64Sint","","",78,null],[13,"R64Sfloat","","",78,null],[13,"R64G64Uint","","",78,null],[13,"R64G64Sint","","",78,null],[13,"R64G64Sfloat","","",78,null],[13,"R64G64B64Uint","","",78,null],[13,"R64G64B64Sint","","",78,null],[13,"R64G64B64Sfloat","","",78,null],[13,"R64G64B64A64Uint","","",78,null],[13,"R64G64B64A64Sint","","",78,null],[13,"R64G64B64A64Sfloat","","",78,null],[13,"B10G11R11UfloatPack32","","",78,null],[13,"E5B9G9R9UfloatPack32","","",78,null],[13,"D16Unorm","","",78,null],[13,"X8_D24UnormPack32","","",78,null],[13,"D32Sfloat","","",78,null],[13,"S8Uint","","",78,null],[13,"D16Unorm_S8Uint","","",78,null],[13,"D24Unorm_S8Uint","","",78,null],[13,"D32Sfloat_S8Uint","","",78,null],[13,"BC1_RGBUnormBlock","","",78,null],[13,"BC1_RGBSrgbBlock","","",78,null],[13,"BC1_RGBAUnormBlock","","",78,null],[13,"BC1_RGBASrgbBlock","","",78,null],[13,"BC2UnormBlock","","",78,null],[13,"BC2SrgbBlock","","",78,null],[13,"BC3UnormBlock","","",78,null],[13,"BC3SrgbBlock","","",78,null],[13,"BC4UnormBlock","","",78,null],[13,"BC4SnormBlock","","",78,null],[13,"BC5UnormBlock","","",78,null],[13,"BC5SnormBlock","","",78,null],[13,"BC6HUfloatBlock","","",78,null],[13,"BC6HSfloatBlock","","",78,null],[13,"BC7UnormBlock","","",78,null],[13,"BC7SrgbBlock","","",78,null],[13,"ETC2_R8G8B8UnormBlock","","",78,null],[13,"ETC2_R8G8B8SrgbBlock","","",78,null],[13,"ETC2_R8G8B8A1UnormBlock","","",78,null],[13,"ETC2_R8G8B8A1SrgbBlock","","",78,null],[13,"ETC2_R8G8B8A8UnormBlock","","",78,null],[13,"ETC2_R8G8B8A8SrgbBlock","","",78,null],[13,"EAC_R11UnormBlock","","",78,null],[13,"EAC_R11SnormBlock","","",78,null],[13,"EAC_R11G11UnormBlock","","",78,null],[13,"EAC_R11G11SnormBlock","","",78,null],[13,"ASTC_4x4UnormBlock","","",78,null],[13,"ASTC_4x4SrgbBlock","","",78,null],[13,"ASTC_5x4UnormBlock","","",78,null],[13,"ASTC_5x4SrgbBlock","","",78,null],[13,"ASTC_5x5UnormBlock","","",78,null],[13,"ASTC_5x5SrgbBlock","","",78,null],[13,"ASTC_6x5UnormBlock","","",78,null],[13,"ASTC_6x5SrgbBlock","","",78,null],[13,"ASTC_6x6UnormBlock","","",78,null],[13,"ASTC_6x6SrgbBlock","","",78,null],[13,"ASTC_8x5UnormBlock","","",78,null],[13,"ASTC_8x5SrgbBlock","","",78,null],[13,"ASTC_8x6UnormBlock","","",78,null],[13,"ASTC_8x6SrgbBlock","","",78,null],[13,"ASTC_8x8UnormBlock","","",78,null],[13,"ASTC_8x8SrgbBlock","","",78,null],[13,"ASTC_10x5UnormBlock","","",78,null],[13,"ASTC_10x5SrgbBlock","","",78,null],[13,"ASTC_10x6UnormBlock","","",78,null],[13,"ASTC_10x6SrgbBlock","","",78,null],[13,"ASTC_10x8UnormBlock","","",78,null],[13,"ASTC_10x8SrgbBlock","","",78,null],[13,"ASTC_10x10UnormBlock","","",78,null],[13,"ASTC_10x10SrgbBlock","","",78,null],[13,"ASTC_12x10UnormBlock","","",78,null],[13,"ASTC_12x10SrgbBlock","","",78,null],[13,"ASTC_12x12UnormBlock","","",78,null],[13,"ASTC_12x12SrgbBlock","","",78,null],[4,"FormatTy","","",null,null],[13,"Float","","",79,null],[13,"Uint","","",79,null],[13,"Sint","","",79,null],[13,"Depth","","",79,null],[13,"Stencil","","",79,null],[13,"DepthStencil","","",79,null],[13,"Compressed","","",79,null],[4,"ClearValue","","Describes a uniform value that will be used to fill an image.",null,null],[13,"None","","Entry for attachments that aren&#39;t cleared.",80,null],[13,"Float","","Value for floating-point attachments, including `Unorm`, `Snorm`, `Sfloat`.",80,null],[13,"Int","","Value for integer attachments, including `Int`.",80,null],[13,"Uint","","Value for unsigned integer attachments, including `Uint`.",80,null],[13,"Depth","","Value for depth attachments.",80,null],[13,"Stencil","","Value for stencil attachments.",80,null],[13,"DepthStencil","","Value for depth and stencil attachments.",80,null],[8,"Data","","Some data whose type must be known by the library.",null,null],[10,"ty","","Returns the type of the data from an enum.",81,{"inputs":[],"output":{"name":"format"}}],[8,"FormatDesc","","",null,null],[16,"ClearValue","","",82,null],[10,"format","","",82,null],[10,"decode_clear_value","","",82,null],[8,"PossibleFloatFormatDesc","","Trait for types that can possibly describe a float attachment.",null,null],[10,"is_float","","Returns true if the format is a float format.",83,null],[8,"PossibleUintFormatDesc","","",null,null],[10,"is_uint","","",84,null],[8,"PossibleSintFormatDesc","","",null,null],[10,"is_sint","","",85,null],[8,"PossibleDepthFormatDesc","","",null,null],[10,"is_depth","","",86,null],[8,"PossibleStencilFormatDesc","","",null,null],[10,"is_stencil","","",87,null],[8,"PossibleDepthStencilFormatDesc","","",null,null],[10,"is_depth_stencil","","",88,null],[8,"PossibleCompressedFormatDesc","","",null,null],[10,"is_compressed","","",89,null],[8,"PossibleFloatOrCompressedFormatDesc","","Trait for types that can possibly describe a float or compressed attachment.",null,null],[10,"is_float_or_compressed","","Returns true if the format is a float or compressed format.",90,null],[8,"StrongStorage","","",null,null],[16,"Pixel","","",91,null],[8,"ClearValuesTuple","","",null,null],[16,"Iter","","",92,null],[10,"iter","","",92,null],[11,"eq","","",78,null],[11,"fmt","","",78,null],[11,"clone","","",78,null],[11,"size","","Returns the size in bytes of an element of this format. Returns `None` if the\nsize is irrelevant (for example for compressed formats).",78,null],[11,"ty","","",78,null],[11,"default","","",93,{"inputs":[],"output":{"name":"r4g4unormpack8"}}],[11,"clone","","",93,null],[11,"fmt","","",93,null],[11,"format","","",93,null],[11,"decode_clear_value","","",93,null],[11,"is_float","","",93,null],[11,"is_float_or_compressed","","",93,null],[11,"default","","",94,{"inputs":[],"output":{"name":"r4g4b4a4unormpack16"}}],[11,"clone","","",94,null],[11,"fmt","","",94,null],[11,"format","","",94,null],[11,"decode_clear_value","","",94,null],[11,"is_float","","",94,null],[11,"is_float_or_compressed","","",94,null],[11,"default","","",95,{"inputs":[],"output":{"name":"b4g4r4a4unormpack16"}}],[11,"clone","","",95,null],[11,"fmt","","",95,null],[11,"format","","",95,null],[11,"decode_clear_value","","",95,null],[11,"is_float","","",95,null],[11,"is_float_or_compressed","","",95,null],[11,"default","","",96,{"inputs":[],"output":{"name":"r5g6b5unormpack16"}}],[11,"clone","","",96,null],[11,"fmt","","",96,null],[11,"format","","",96,null],[11,"decode_clear_value","","",96,null],[11,"is_float","","",96,null],[11,"is_float_or_compressed","","",96,null],[11,"default","","",97,{"inputs":[],"output":{"name":"b5g6r5unormpack16"}}],[11,"clone","","",97,null],[11,"fmt","","",97,null],[11,"format","","",97,null],[11,"decode_clear_value","","",97,null],[11,"is_float","","",97,null],[11,"is_float_or_compressed","","",97,null],[11,"default","","",98,{"inputs":[],"output":{"name":"r5g5b5a1unormpack16"}}],[11,"clone","","",98,null],[11,"fmt","","",98,null],[11,"format","","",98,null],[11,"decode_clear_value","","",98,null],[11,"is_float","","",98,null],[11,"is_float_or_compressed","","",98,null],[11,"default","","",99,{"inputs":[],"output":{"name":"b5g5r5a1unormpack16"}}],[11,"clone","","",99,null],[11,"fmt","","",99,null],[11,"format","","",99,null],[11,"decode_clear_value","","",99,null],[11,"is_float","","",99,null],[11,"is_float_or_compressed","","",99,null],[11,"default","","",100,{"inputs":[],"output":{"name":"a1r5g5b5unormpack16"}}],[11,"clone","","",100,null],[11,"fmt","","",100,null],[11,"format","","",100,null],[11,"decode_clear_value","","",100,null],[11,"is_float","","",100,null],[11,"is_float_or_compressed","","",100,null],[11,"default","","",101,{"inputs":[],"output":{"name":"r8unorm"}}],[11,"clone","","",101,null],[11,"fmt","","",101,null],[11,"format","","",101,null],[11,"decode_clear_value","","",101,null],[11,"is_float","","",101,null],[11,"is_float_or_compressed","","",101,null],[11,"default","","",102,{"inputs":[],"output":{"name":"r8snorm"}}],[11,"clone","","",102,null],[11,"fmt","","",102,null],[11,"format","","",102,null],[11,"decode_clear_value","","",102,null],[11,"is_float","","",102,null],[11,"is_float_or_compressed","","",102,null],[11,"default","","",103,{"inputs":[],"output":{"name":"r8uscaled"}}],[11,"clone","","",103,null],[11,"fmt","","",103,null],[11,"format","","",103,null],[11,"decode_clear_value","","",103,null],[11,"is_float","","",103,null],[11,"is_float_or_compressed","","",103,null],[11,"default","","",104,{"inputs":[],"output":{"name":"r8sscaled"}}],[11,"clone","","",104,null],[11,"fmt","","",104,null],[11,"format","","",104,null],[11,"decode_clear_value","","",104,null],[11,"is_float","","",104,null],[11,"is_float_or_compressed","","",104,null],[11,"default","","",105,{"inputs":[],"output":{"name":"r8uint"}}],[11,"clone","","",105,null],[11,"fmt","","",105,null],[11,"format","","",105,null],[11,"decode_clear_value","","",105,null],[11,"is_uint","","",105,null],[11,"default","","",106,{"inputs":[],"output":{"name":"r8sint"}}],[11,"clone","","",106,null],[11,"fmt","","",106,null],[11,"format","","",106,null],[11,"decode_clear_value","","",106,null],[11,"is_sint","","",106,null],[11,"default","","",107,{"inputs":[],"output":{"name":"r8srgb"}}],[11,"clone","","",107,null],[11,"fmt","","",107,null],[11,"format","","",107,null],[11,"decode_clear_value","","",107,null],[11,"is_float","","",107,null],[11,"is_float_or_compressed","","",107,null],[11,"default","","",108,{"inputs":[],"output":{"name":"r8g8unorm"}}],[11,"clone","","",108,null],[11,"fmt","","",108,null],[11,"format","","",108,null],[11,"decode_clear_value","","",108,null],[11,"is_float","","",108,null],[11,"is_float_or_compressed","","",108,null],[11,"default","","",109,{"inputs":[],"output":{"name":"r8g8snorm"}}],[11,"clone","","",109,null],[11,"fmt","","",109,null],[11,"format","","",109,null],[11,"decode_clear_value","","",109,null],[11,"is_float","","",109,null],[11,"is_float_or_compressed","","",109,null],[11,"default","","",110,{"inputs":[],"output":{"name":"r8g8uscaled"}}],[11,"clone","","",110,null],[11,"fmt","","",110,null],[11,"format","","",110,null],[11,"decode_clear_value","","",110,null],[11,"is_float","","",110,null],[11,"is_float_or_compressed","","",110,null],[11,"default","","",111,{"inputs":[],"output":{"name":"r8g8sscaled"}}],[11,"clone","","",111,null],[11,"fmt","","",111,null],[11,"format","","",111,null],[11,"decode_clear_value","","",111,null],[11,"is_float","","",111,null],[11,"is_float_or_compressed","","",111,null],[11,"default","","",112,{"inputs":[],"output":{"name":"r8g8uint"}}],[11,"clone","","",112,null],[11,"fmt","","",112,null],[11,"format","","",112,null],[11,"decode_clear_value","","",112,null],[11,"is_uint","","",112,null],[11,"default","","",113,{"inputs":[],"output":{"name":"r8g8sint"}}],[11,"clone","","",113,null],[11,"fmt","","",113,null],[11,"format","","",113,null],[11,"decode_clear_value","","",113,null],[11,"is_sint","","",113,null],[11,"default","","",114,{"inputs":[],"output":{"name":"r8g8srgb"}}],[11,"clone","","",114,null],[11,"fmt","","",114,null],[11,"format","","",114,null],[11,"decode_clear_value","","",114,null],[11,"is_float","","",114,null],[11,"is_float_or_compressed","","",114,null],[11,"default","","",115,{"inputs":[],"output":{"name":"r8g8b8unorm"}}],[11,"clone","","",115,null],[11,"fmt","","",115,null],[11,"format","","",115,null],[11,"decode_clear_value","","",115,null],[11,"is_float","","",115,null],[11,"is_float_or_compressed","","",115,null],[11,"default","","",116,{"inputs":[],"output":{"name":"r8g8b8snorm"}}],[11,"clone","","",116,null],[11,"fmt","","",116,null],[11,"format","","",116,null],[11,"decode_clear_value","","",116,null],[11,"is_float","","",116,null],[11,"is_float_or_compressed","","",116,null],[11,"default","","",117,{"inputs":[],"output":{"name":"r8g8b8uscaled"}}],[11,"clone","","",117,null],[11,"fmt","","",117,null],[11,"format","","",117,null],[11,"decode_clear_value","","",117,null],[11,"is_float","","",117,null],[11,"is_float_or_compressed","","",117,null],[11,"default","","",118,{"inputs":[],"output":{"name":"r8g8b8sscaled"}}],[11,"clone","","",118,null],[11,"fmt","","",118,null],[11,"format","","",118,null],[11,"decode_clear_value","","",118,null],[11,"is_float","","",118,null],[11,"is_float_or_compressed","","",118,null],[11,"default","","",119,{"inputs":[],"output":{"name":"r8g8b8uint"}}],[11,"clone","","",119,null],[11,"fmt","","",119,null],[11,"format","","",119,null],[11,"decode_clear_value","","",119,null],[11,"is_uint","","",119,null],[11,"default","","",120,{"inputs":[],"output":{"name":"r8g8b8sint"}}],[11,"clone","","",120,null],[11,"fmt","","",120,null],[11,"format","","",120,null],[11,"decode_clear_value","","",120,null],[11,"is_sint","","",120,null],[11,"default","","",121,{"inputs":[],"output":{"name":"r8g8b8srgb"}}],[11,"clone","","",121,null],[11,"fmt","","",121,null],[11,"format","","",121,null],[11,"decode_clear_value","","",121,null],[11,"is_float","","",121,null],[11,"is_float_or_compressed","","",121,null],[11,"default","","",122,{"inputs":[],"output":{"name":"b8g8r8unorm"}}],[11,"clone","","",122,null],[11,"fmt","","",122,null],[11,"format","","",122,null],[11,"decode_clear_value","","",122,null],[11,"is_float","","",122,null],[11,"is_float_or_compressed","","",122,null],[11,"default","","",123,{"inputs":[],"output":{"name":"b8g8r8snorm"}}],[11,"clone","","",123,null],[11,"fmt","","",123,null],[11,"format","","",123,null],[11,"decode_clear_value","","",123,null],[11,"is_float","","",123,null],[11,"is_float_or_compressed","","",123,null],[11,"default","","",124,{"inputs":[],"output":{"name":"b8g8r8uscaled"}}],[11,"clone","","",124,null],[11,"fmt","","",124,null],[11,"format","","",124,null],[11,"decode_clear_value","","",124,null],[11,"is_float","","",124,null],[11,"is_float_or_compressed","","",124,null],[11,"default","","",125,{"inputs":[],"output":{"name":"b8g8r8sscaled"}}],[11,"clone","","",125,null],[11,"fmt","","",125,null],[11,"format","","",125,null],[11,"decode_clear_value","","",125,null],[11,"is_float","","",125,null],[11,"is_float_or_compressed","","",125,null],[11,"default","","",126,{"inputs":[],"output":{"name":"b8g8r8uint"}}],[11,"clone","","",126,null],[11,"fmt","","",126,null],[11,"format","","",126,null],[11,"decode_clear_value","","",126,null],[11,"is_uint","","",126,null],[11,"default","","",127,{"inputs":[],"output":{"name":"b8g8r8sint"}}],[11,"clone","","",127,null],[11,"fmt","","",127,null],[11,"format","","",127,null],[11,"decode_clear_value","","",127,null],[11,"is_sint","","",127,null],[11,"default","","",128,{"inputs":[],"output":{"name":"b8g8r8srgb"}}],[11,"clone","","",128,null],[11,"fmt","","",128,null],[11,"format","","",128,null],[11,"decode_clear_value","","",128,null],[11,"is_float","","",128,null],[11,"is_float_or_compressed","","",128,null],[11,"default","","",129,{"inputs":[],"output":{"name":"r8g8b8a8unorm"}}],[11,"clone","","",129,null],[11,"fmt","","",129,null],[11,"format","","",129,null],[11,"decode_clear_value","","",129,null],[11,"is_float","","",129,null],[11,"is_float_or_compressed","","",129,null],[11,"default","","",130,{"inputs":[],"output":{"name":"r8g8b8a8snorm"}}],[11,"clone","","",130,null],[11,"fmt","","",130,null],[11,"format","","",130,null],[11,"decode_clear_value","","",130,null],[11,"is_float","","",130,null],[11,"is_float_or_compressed","","",130,null],[11,"default","","",131,{"inputs":[],"output":{"name":"r8g8b8a8uscaled"}}],[11,"clone","","",131,null],[11,"fmt","","",131,null],[11,"format","","",131,null],[11,"decode_clear_value","","",131,null],[11,"is_float","","",131,null],[11,"is_float_or_compressed","","",131,null],[11,"default","","",132,{"inputs":[],"output":{"name":"r8g8b8a8sscaled"}}],[11,"clone","","",132,null],[11,"fmt","","",132,null],[11,"format","","",132,null],[11,"decode_clear_value","","",132,null],[11,"is_float","","",132,null],[11,"is_float_or_compressed","","",132,null],[11,"default","","",133,{"inputs":[],"output":{"name":"r8g8b8a8uint"}}],[11,"clone","","",133,null],[11,"fmt","","",133,null],[11,"format","","",133,null],[11,"decode_clear_value","","",133,null],[11,"is_uint","","",133,null],[11,"default","","",134,{"inputs":[],"output":{"name":"r8g8b8a8sint"}}],[11,"clone","","",134,null],[11,"fmt","","",134,null],[11,"format","","",134,null],[11,"decode_clear_value","","",134,null],[11,"is_sint","","",134,null],[11,"default","","",135,{"inputs":[],"output":{"name":"r8g8b8a8srgb"}}],[11,"clone","","",135,null],[11,"fmt","","",135,null],[11,"format","","",135,null],[11,"decode_clear_value","","",135,null],[11,"is_float","","",135,null],[11,"is_float_or_compressed","","",135,null],[11,"default","","",136,{"inputs":[],"output":{"name":"b8g8r8a8unorm"}}],[11,"clone","","",136,null],[11,"fmt","","",136,null],[11,"format","","",136,null],[11,"decode_clear_value","","",136,null],[11,"is_float","","",136,null],[11,"is_float_or_compressed","","",136,null],[11,"default","","",137,{"inputs":[],"output":{"name":"b8g8r8a8snorm"}}],[11,"clone","","",137,null],[11,"fmt","","",137,null],[11,"format","","",137,null],[11,"decode_clear_value","","",137,null],[11,"is_float","","",137,null],[11,"is_float_or_compressed","","",137,null],[11,"default","","",138,{"inputs":[],"output":{"name":"b8g8r8a8uscaled"}}],[11,"clone","","",138,null],[11,"fmt","","",138,null],[11,"format","","",138,null],[11,"decode_clear_value","","",138,null],[11,"is_float","","",138,null],[11,"is_float_or_compressed","","",138,null],[11,"default","","",139,{"inputs":[],"output":{"name":"b8g8r8a8sscaled"}}],[11,"clone","","",139,null],[11,"fmt","","",139,null],[11,"format","","",139,null],[11,"decode_clear_value","","",139,null],[11,"is_float","","",139,null],[11,"is_float_or_compressed","","",139,null],[11,"default","","",140,{"inputs":[],"output":{"name":"b8g8r8a8uint"}}],[11,"clone","","",140,null],[11,"fmt","","",140,null],[11,"format","","",140,null],[11,"decode_clear_value","","",140,null],[11,"is_uint","","",140,null],[11,"default","","",141,{"inputs":[],"output":{"name":"b8g8r8a8sint"}}],[11,"clone","","",141,null],[11,"fmt","","",141,null],[11,"format","","",141,null],[11,"decode_clear_value","","",141,null],[11,"is_sint","","",141,null],[11,"default","","",142,{"inputs":[],"output":{"name":"b8g8r8a8srgb"}}],[11,"clone","","",142,null],[11,"fmt","","",142,null],[11,"format","","",142,null],[11,"decode_clear_value","","",142,null],[11,"is_float","","",142,null],[11,"is_float_or_compressed","","",142,null],[11,"default","","",143,{"inputs":[],"output":{"name":"a8b8g8r8unormpack32"}}],[11,"clone","","",143,null],[11,"fmt","","",143,null],[11,"format","","",143,null],[11,"decode_clear_value","","",143,null],[11,"is_float","","",143,null],[11,"is_float_or_compressed","","",143,null],[11,"default","","",144,{"inputs":[],"output":{"name":"a8b8g8r8snormpack32"}}],[11,"clone","","",144,null],[11,"fmt","","",144,null],[11,"format","","",144,null],[11,"decode_clear_value","","",144,null],[11,"is_float","","",144,null],[11,"is_float_or_compressed","","",144,null],[11,"default","","",145,{"inputs":[],"output":{"name":"a8b8g8r8uscaledpack32"}}],[11,"clone","","",145,null],[11,"fmt","","",145,null],[11,"format","","",145,null],[11,"decode_clear_value","","",145,null],[11,"is_float","","",145,null],[11,"is_float_or_compressed","","",145,null],[11,"default","","",146,{"inputs":[],"output":{"name":"a8b8g8r8sscaledpack32"}}],[11,"clone","","",146,null],[11,"fmt","","",146,null],[11,"format","","",146,null],[11,"decode_clear_value","","",146,null],[11,"is_float","","",146,null],[11,"is_float_or_compressed","","",146,null],[11,"default","","",147,{"inputs":[],"output":{"name":"a8b8g8r8uintpack32"}}],[11,"clone","","",147,null],[11,"fmt","","",147,null],[11,"format","","",147,null],[11,"decode_clear_value","","",147,null],[11,"is_uint","","",147,null],[11,"default","","",148,{"inputs":[],"output":{"name":"a8b8g8r8sintpack32"}}],[11,"clone","","",148,null],[11,"fmt","","",148,null],[11,"format","","",148,null],[11,"decode_clear_value","","",148,null],[11,"is_sint","","",148,null],[11,"default","","",149,{"inputs":[],"output":{"name":"a8b8g8r8srgbpack32"}}],[11,"clone","","",149,null],[11,"fmt","","",149,null],[11,"format","","",149,null],[11,"decode_clear_value","","",149,null],[11,"is_float","","",149,null],[11,"is_float_or_compressed","","",149,null],[11,"default","","",150,{"inputs":[],"output":{"name":"a2r10g10b10unormpack32"}}],[11,"clone","","",150,null],[11,"fmt","","",150,null],[11,"format","","",150,null],[11,"decode_clear_value","","",150,null],[11,"is_float","","",150,null],[11,"is_float_or_compressed","","",150,null],[11,"default","","",151,{"inputs":[],"output":{"name":"a2r10g10b10snormpack32"}}],[11,"clone","","",151,null],[11,"fmt","","",151,null],[11,"format","","",151,null],[11,"decode_clear_value","","",151,null],[11,"is_float","","",151,null],[11,"is_float_or_compressed","","",151,null],[11,"default","","",152,{"inputs":[],"output":{"name":"a2r10g10b10uscaledpack32"}}],[11,"clone","","",152,null],[11,"fmt","","",152,null],[11,"format","","",152,null],[11,"decode_clear_value","","",152,null],[11,"is_float","","",152,null],[11,"is_float_or_compressed","","",152,null],[11,"default","","",153,{"inputs":[],"output":{"name":"a2r10g10b10sscaledpack32"}}],[11,"clone","","",153,null],[11,"fmt","","",153,null],[11,"format","","",153,null],[11,"decode_clear_value","","",153,null],[11,"is_float","","",153,null],[11,"is_float_or_compressed","","",153,null],[11,"default","","",154,{"inputs":[],"output":{"name":"a2r10g10b10uintpack32"}}],[11,"clone","","",154,null],[11,"fmt","","",154,null],[11,"format","","",154,null],[11,"decode_clear_value","","",154,null],[11,"is_uint","","",154,null],[11,"default","","",155,{"inputs":[],"output":{"name":"a2r10g10b10sintpack32"}}],[11,"clone","","",155,null],[11,"fmt","","",155,null],[11,"format","","",155,null],[11,"decode_clear_value","","",155,null],[11,"is_sint","","",155,null],[11,"default","","",156,{"inputs":[],"output":{"name":"a2b10g10r10unormpack32"}}],[11,"clone","","",156,null],[11,"fmt","","",156,null],[11,"format","","",156,null],[11,"decode_clear_value","","",156,null],[11,"is_float","","",156,null],[11,"is_float_or_compressed","","",156,null],[11,"default","","",157,{"inputs":[],"output":{"name":"a2b10g10r10snormpack32"}}],[11,"clone","","",157,null],[11,"fmt","","",157,null],[11,"format","","",157,null],[11,"decode_clear_value","","",157,null],[11,"is_float","","",157,null],[11,"is_float_or_compressed","","",157,null],[11,"default","","",158,{"inputs":[],"output":{"name":"a2b10g10r10uscaledpack32"}}],[11,"clone","","",158,null],[11,"fmt","","",158,null],[11,"format","","",158,null],[11,"decode_clear_value","","",158,null],[11,"is_float","","",158,null],[11,"is_float_or_compressed","","",158,null],[11,"default","","",159,{"inputs":[],"output":{"name":"a2b10g10r10sscaledpack32"}}],[11,"clone","","",159,null],[11,"fmt","","",159,null],[11,"format","","",159,null],[11,"decode_clear_value","","",159,null],[11,"is_float","","",159,null],[11,"is_float_or_compressed","","",159,null],[11,"default","","",160,{"inputs":[],"output":{"name":"a2b10g10r10uintpack32"}}],[11,"clone","","",160,null],[11,"fmt","","",160,null],[11,"format","","",160,null],[11,"decode_clear_value","","",160,null],[11,"is_uint","","",160,null],[11,"default","","",161,{"inputs":[],"output":{"name":"a2b10g10r10sintpack32"}}],[11,"clone","","",161,null],[11,"fmt","","",161,null],[11,"format","","",161,null],[11,"decode_clear_value","","",161,null],[11,"is_sint","","",161,null],[11,"default","","",162,{"inputs":[],"output":{"name":"r16unorm"}}],[11,"clone","","",162,null],[11,"fmt","","",162,null],[11,"format","","",162,null],[11,"decode_clear_value","","",162,null],[11,"is_float","","",162,null],[11,"is_float_or_compressed","","",162,null],[11,"default","","",163,{"inputs":[],"output":{"name":"r16snorm"}}],[11,"clone","","",163,null],[11,"fmt","","",163,null],[11,"format","","",163,null],[11,"decode_clear_value","","",163,null],[11,"is_float","","",163,null],[11,"is_float_or_compressed","","",163,null],[11,"default","","",164,{"inputs":[],"output":{"name":"r16uscaled"}}],[11,"clone","","",164,null],[11,"fmt","","",164,null],[11,"format","","",164,null],[11,"decode_clear_value","","",164,null],[11,"is_float","","",164,null],[11,"is_float_or_compressed","","",164,null],[11,"default","","",165,{"inputs":[],"output":{"name":"r16sscaled"}}],[11,"clone","","",165,null],[11,"fmt","","",165,null],[11,"format","","",165,null],[11,"decode_clear_value","","",165,null],[11,"is_float","","",165,null],[11,"is_float_or_compressed","","",165,null],[11,"default","","",166,{"inputs":[],"output":{"name":"r16uint"}}],[11,"clone","","",166,null],[11,"fmt","","",166,null],[11,"format","","",166,null],[11,"decode_clear_value","","",166,null],[11,"is_uint","","",166,null],[11,"default","","",167,{"inputs":[],"output":{"name":"r16sint"}}],[11,"clone","","",167,null],[11,"fmt","","",167,null],[11,"format","","",167,null],[11,"decode_clear_value","","",167,null],[11,"is_sint","","",167,null],[11,"default","","",168,{"inputs":[],"output":{"name":"r16sfloat"}}],[11,"clone","","",168,null],[11,"fmt","","",168,null],[11,"format","","",168,null],[11,"decode_clear_value","","",168,null],[11,"is_float","","",168,null],[11,"is_float_or_compressed","","",168,null],[11,"default","","",169,{"inputs":[],"output":{"name":"r16g16unorm"}}],[11,"clone","","",169,null],[11,"fmt","","",169,null],[11,"format","","",169,null],[11,"decode_clear_value","","",169,null],[11,"is_float","","",169,null],[11,"is_float_or_compressed","","",169,null],[11,"default","","",170,{"inputs":[],"output":{"name":"r16g16snorm"}}],[11,"clone","","",170,null],[11,"fmt","","",170,null],[11,"format","","",170,null],[11,"decode_clear_value","","",170,null],[11,"is_float","","",170,null],[11,"is_float_or_compressed","","",170,null],[11,"default","","",171,{"inputs":[],"output":{"name":"r16g16uscaled"}}],[11,"clone","","",171,null],[11,"fmt","","",171,null],[11,"format","","",171,null],[11,"decode_clear_value","","",171,null],[11,"is_float","","",171,null],[11,"is_float_or_compressed","","",171,null],[11,"default","","",172,{"inputs":[],"output":{"name":"r16g16sscaled"}}],[11,"clone","","",172,null],[11,"fmt","","",172,null],[11,"format","","",172,null],[11,"decode_clear_value","","",172,null],[11,"is_float","","",172,null],[11,"is_float_or_compressed","","",172,null],[11,"default","","",173,{"inputs":[],"output":{"name":"r16g16uint"}}],[11,"clone","","",173,null],[11,"fmt","","",173,null],[11,"format","","",173,null],[11,"decode_clear_value","","",173,null],[11,"is_uint","","",173,null],[11,"default","","",174,{"inputs":[],"output":{"name":"r16g16sint"}}],[11,"clone","","",174,null],[11,"fmt","","",174,null],[11,"format","","",174,null],[11,"decode_clear_value","","",174,null],[11,"is_sint","","",174,null],[11,"default","","",175,{"inputs":[],"output":{"name":"r16g16sfloat"}}],[11,"clone","","",175,null],[11,"fmt","","",175,null],[11,"format","","",175,null],[11,"decode_clear_value","","",175,null],[11,"is_float","","",175,null],[11,"is_float_or_compressed","","",175,null],[11,"default","","",176,{"inputs":[],"output":{"name":"r16g16b16unorm"}}],[11,"clone","","",176,null],[11,"fmt","","",176,null],[11,"format","","",176,null],[11,"decode_clear_value","","",176,null],[11,"is_float","","",176,null],[11,"is_float_or_compressed","","",176,null],[11,"default","","",177,{"inputs":[],"output":{"name":"r16g16b16snorm"}}],[11,"clone","","",177,null],[11,"fmt","","",177,null],[11,"format","","",177,null],[11,"decode_clear_value","","",177,null],[11,"is_float","","",177,null],[11,"is_float_or_compressed","","",177,null],[11,"default","","",178,{"inputs":[],"output":{"name":"r16g16b16uscaled"}}],[11,"clone","","",178,null],[11,"fmt","","",178,null],[11,"format","","",178,null],[11,"decode_clear_value","","",178,null],[11,"is_float","","",178,null],[11,"is_float_or_compressed","","",178,null],[11,"default","","",179,{"inputs":[],"output":{"name":"r16g16b16sscaled"}}],[11,"clone","","",179,null],[11,"fmt","","",179,null],[11,"format","","",179,null],[11,"decode_clear_value","","",179,null],[11,"is_float","","",179,null],[11,"is_float_or_compressed","","",179,null],[11,"default","","",180,{"inputs":[],"output":{"name":"r16g16b16uint"}}],[11,"clone","","",180,null],[11,"fmt","","",180,null],[11,"format","","",180,null],[11,"decode_clear_value","","",180,null],[11,"is_uint","","",180,null],[11,"default","","",181,{"inputs":[],"output":{"name":"r16g16b16sint"}}],[11,"clone","","",181,null],[11,"fmt","","",181,null],[11,"format","","",181,null],[11,"decode_clear_value","","",181,null],[11,"is_sint","","",181,null],[11,"default","","",182,{"inputs":[],"output":{"name":"r16g16b16sfloat"}}],[11,"clone","","",182,null],[11,"fmt","","",182,null],[11,"format","","",182,null],[11,"decode_clear_value","","",182,null],[11,"is_float","","",182,null],[11,"is_float_or_compressed","","",182,null],[11,"default","","",183,{"inputs":[],"output":{"name":"r16g16b16a16unorm"}}],[11,"clone","","",183,null],[11,"fmt","","",183,null],[11,"format","","",183,null],[11,"decode_clear_value","","",183,null],[11,"is_float","","",183,null],[11,"is_float_or_compressed","","",183,null],[11,"default","","",184,{"inputs":[],"output":{"name":"r16g16b16a16snorm"}}],[11,"clone","","",184,null],[11,"fmt","","",184,null],[11,"format","","",184,null],[11,"decode_clear_value","","",184,null],[11,"is_float","","",184,null],[11,"is_float_or_compressed","","",184,null],[11,"default","","",185,{"inputs":[],"output":{"name":"r16g16b16a16uscaled"}}],[11,"clone","","",185,null],[11,"fmt","","",185,null],[11,"format","","",185,null],[11,"decode_clear_value","","",185,null],[11,"is_float","","",185,null],[11,"is_float_or_compressed","","",185,null],[11,"default","","",186,{"inputs":[],"output":{"name":"r16g16b16a16sscaled"}}],[11,"clone","","",186,null],[11,"fmt","","",186,null],[11,"format","","",186,null],[11,"decode_clear_value","","",186,null],[11,"is_float","","",186,null],[11,"is_float_or_compressed","","",186,null],[11,"default","","",187,{"inputs":[],"output":{"name":"r16g16b16a16uint"}}],[11,"clone","","",187,null],[11,"fmt","","",187,null],[11,"format","","",187,null],[11,"decode_clear_value","","",187,null],[11,"is_uint","","",187,null],[11,"default","","",188,{"inputs":[],"output":{"name":"r16g16b16a16sint"}}],[11,"clone","","",188,null],[11,"fmt","","",188,null],[11,"format","","",188,null],[11,"decode_clear_value","","",188,null],[11,"is_sint","","",188,null],[11,"default","","",189,{"inputs":[],"output":{"name":"r16g16b16a16sfloat"}}],[11,"clone","","",189,null],[11,"fmt","","",189,null],[11,"format","","",189,null],[11,"decode_clear_value","","",189,null],[11,"is_float","","",189,null],[11,"is_float_or_compressed","","",189,null],[11,"default","","",190,{"inputs":[],"output":{"name":"r32uint"}}],[11,"clone","","",190,null],[11,"fmt","","",190,null],[11,"format","","",190,null],[11,"decode_clear_value","","",190,null],[11,"is_uint","","",190,null],[11,"default","","",191,{"inputs":[],"output":{"name":"r32sint"}}],[11,"clone","","",191,null],[11,"fmt","","",191,null],[11,"format","","",191,null],[11,"decode_clear_value","","",191,null],[11,"is_sint","","",191,null],[11,"default","","",192,{"inputs":[],"output":{"name":"r32sfloat"}}],[11,"clone","","",192,null],[11,"fmt","","",192,null],[11,"format","","",192,null],[11,"decode_clear_value","","",192,null],[11,"is_float","","",192,null],[11,"is_float_or_compressed","","",192,null],[11,"default","","",193,{"inputs":[],"output":{"name":"r32g32uint"}}],[11,"clone","","",193,null],[11,"fmt","","",193,null],[11,"format","","",193,null],[11,"decode_clear_value","","",193,null],[11,"is_uint","","",193,null],[11,"default","","",194,{"inputs":[],"output":{"name":"r32g32sint"}}],[11,"clone","","",194,null],[11,"fmt","","",194,null],[11,"format","","",194,null],[11,"decode_clear_value","","",194,null],[11,"is_sint","","",194,null],[11,"default","","",195,{"inputs":[],"output":{"name":"r32g32sfloat"}}],[11,"clone","","",195,null],[11,"fmt","","",195,null],[11,"format","","",195,null],[11,"decode_clear_value","","",195,null],[11,"is_float","","",195,null],[11,"is_float_or_compressed","","",195,null],[11,"default","","",196,{"inputs":[],"output":{"name":"r32g32b32uint"}}],[11,"clone","","",196,null],[11,"fmt","","",196,null],[11,"format","","",196,null],[11,"decode_clear_value","","",196,null],[11,"is_uint","","",196,null],[11,"default","","",197,{"inputs":[],"output":{"name":"r32g32b32sint"}}],[11,"clone","","",197,null],[11,"fmt","","",197,null],[11,"format","","",197,null],[11,"decode_clear_value","","",197,null],[11,"is_sint","","",197,null],[11,"default","","",198,{"inputs":[],"output":{"name":"r32g32b32sfloat"}}],[11,"clone","","",198,null],[11,"fmt","","",198,null],[11,"format","","",198,null],[11,"decode_clear_value","","",198,null],[11,"is_float","","",198,null],[11,"is_float_or_compressed","","",198,null],[11,"default","","",199,{"inputs":[],"output":{"name":"r32g32b32a32uint"}}],[11,"clone","","",199,null],[11,"fmt","","",199,null],[11,"format","","",199,null],[11,"decode_clear_value","","",199,null],[11,"is_uint","","",199,null],[11,"default","","",200,{"inputs":[],"output":{"name":"r32g32b32a32sint"}}],[11,"clone","","",200,null],[11,"fmt","","",200,null],[11,"format","","",200,null],[11,"decode_clear_value","","",200,null],[11,"is_sint","","",200,null],[11,"default","","",201,{"inputs":[],"output":{"name":"r32g32b32a32sfloat"}}],[11,"clone","","",201,null],[11,"fmt","","",201,null],[11,"format","","",201,null],[11,"decode_clear_value","","",201,null],[11,"is_float","","",201,null],[11,"is_float_or_compressed","","",201,null],[11,"default","","",202,{"inputs":[],"output":{"name":"r64uint"}}],[11,"clone","","",202,null],[11,"fmt","","",202,null],[11,"format","","",202,null],[11,"decode_clear_value","","",202,null],[11,"is_uint","","",202,null],[11,"default","","",203,{"inputs":[],"output":{"name":"r64sint"}}],[11,"clone","","",203,null],[11,"fmt","","",203,null],[11,"format","","",203,null],[11,"decode_clear_value","","",203,null],[11,"is_sint","","",203,null],[11,"default","","",204,{"inputs":[],"output":{"name":"r64sfloat"}}],[11,"clone","","",204,null],[11,"fmt","","",204,null],[11,"format","","",204,null],[11,"decode_clear_value","","",204,null],[11,"is_float","","",204,null],[11,"is_float_or_compressed","","",204,null],[11,"default","","",205,{"inputs":[],"output":{"name":"r64g64uint"}}],[11,"clone","","",205,null],[11,"fmt","","",205,null],[11,"format","","",205,null],[11,"decode_clear_value","","",205,null],[11,"is_uint","","",205,null],[11,"default","","",206,{"inputs":[],"output":{"name":"r64g64sint"}}],[11,"clone","","",206,null],[11,"fmt","","",206,null],[11,"format","","",206,null],[11,"decode_clear_value","","",206,null],[11,"is_sint","","",206,null],[11,"default","","",207,{"inputs":[],"output":{"name":"r64g64sfloat"}}],[11,"clone","","",207,null],[11,"fmt","","",207,null],[11,"format","","",207,null],[11,"decode_clear_value","","",207,null],[11,"is_float","","",207,null],[11,"is_float_or_compressed","","",207,null],[11,"default","","",208,{"inputs":[],"output":{"name":"r64g64b64uint"}}],[11,"clone","","",208,null],[11,"fmt","","",208,null],[11,"format","","",208,null],[11,"decode_clear_value","","",208,null],[11,"is_uint","","",208,null],[11,"default","","",209,{"inputs":[],"output":{"name":"r64g64b64sint"}}],[11,"clone","","",209,null],[11,"fmt","","",209,null],[11,"format","","",209,null],[11,"decode_clear_value","","",209,null],[11,"is_sint","","",209,null],[11,"default","","",210,{"inputs":[],"output":{"name":"r64g64b64sfloat"}}],[11,"clone","","",210,null],[11,"fmt","","",210,null],[11,"format","","",210,null],[11,"decode_clear_value","","",210,null],[11,"is_float","","",210,null],[11,"is_float_or_compressed","","",210,null],[11,"default","","",211,{"inputs":[],"output":{"name":"r64g64b64a64uint"}}],[11,"clone","","",211,null],[11,"fmt","","",211,null],[11,"format","","",211,null],[11,"decode_clear_value","","",211,null],[11,"is_uint","","",211,null],[11,"default","","",212,{"inputs":[],"output":{"name":"r64g64b64a64sint"}}],[11,"clone","","",212,null],[11,"fmt","","",212,null],[11,"format","","",212,null],[11,"decode_clear_value","","",212,null],[11,"is_sint","","",212,null],[11,"default","","",213,{"inputs":[],"output":{"name":"r64g64b64a64sfloat"}}],[11,"clone","","",213,null],[11,"fmt","","",213,null],[11,"format","","",213,null],[11,"decode_clear_value","","",213,null],[11,"is_float","","",213,null],[11,"is_float_or_compressed","","",213,null],[11,"default","","",214,{"inputs":[],"output":{"name":"b10g11r11ufloatpack32"}}],[11,"clone","","",214,null],[11,"fmt","","",214,null],[11,"format","","",214,null],[11,"decode_clear_value","","",214,null],[11,"is_float","","",214,null],[11,"is_float_or_compressed","","",214,null],[11,"default","","",215,{"inputs":[],"output":{"name":"e5b9g9r9ufloatpack32"}}],[11,"clone","","",215,null],[11,"fmt","","",215,null],[11,"format","","",215,null],[11,"decode_clear_value","","",215,null],[11,"is_float","","",215,null],[11,"is_float_or_compressed","","",215,null],[11,"default","","",216,{"inputs":[],"output":{"name":"d16unorm"}}],[11,"clone","","",216,null],[11,"fmt","","",216,null],[11,"format","","",216,null],[11,"decode_clear_value","","",216,null],[11,"is_depth","","",216,null],[11,"default","","",217,{"inputs":[],"output":{"name":"x8_d24unormpack32"}}],[11,"clone","","",217,null],[11,"fmt","","",217,null],[11,"format","","",217,null],[11,"decode_clear_value","","",217,null],[11,"is_depth","","",217,null],[11,"default","","",218,{"inputs":[],"output":{"name":"d32sfloat"}}],[11,"clone","","",218,null],[11,"fmt","","",218,null],[11,"format","","",218,null],[11,"decode_clear_value","","",218,null],[11,"is_depth","","",218,null],[11,"default","","",219,{"inputs":[],"output":{"name":"s8uint"}}],[11,"clone","","",219,null],[11,"fmt","","",219,null],[11,"format","","",219,null],[11,"decode_clear_value","","",219,null],[11,"is_stencil","","",219,null],[11,"default","","",220,{"inputs":[],"output":{"name":"d16unorm_s8uint"}}],[11,"clone","","",220,null],[11,"fmt","","",220,null],[11,"format","","",220,null],[11,"decode_clear_value","","",220,null],[11,"is_depth_stencil","","",220,null],[11,"default","","",221,{"inputs":[],"output":{"name":"d24unorm_s8uint"}}],[11,"clone","","",221,null],[11,"fmt","","",221,null],[11,"format","","",221,null],[11,"decode_clear_value","","",221,null],[11,"is_depth_stencil","","",221,null],[11,"default","","",222,{"inputs":[],"output":{"name":"d32sfloat_s8uint"}}],[11,"clone","","",222,null],[11,"fmt","","",222,null],[11,"format","","",222,null],[11,"decode_clear_value","","",222,null],[11,"is_depth_stencil","","",222,null],[11,"default","","",223,{"inputs":[],"output":{"name":"bc1_rgbunormblock"}}],[11,"clone","","",223,null],[11,"fmt","","",223,null],[11,"format","","",223,null],[11,"decode_clear_value","","",223,null],[11,"is_compressed","","",223,null],[11,"is_float_or_compressed","","",223,null],[11,"default","","",224,{"inputs":[],"output":{"name":"bc1_rgbsrgbblock"}}],[11,"clone","","",224,null],[11,"fmt","","",224,null],[11,"format","","",224,null],[11,"decode_clear_value","","",224,null],[11,"is_compressed","","",224,null],[11,"is_float_or_compressed","","",224,null],[11,"default","","",225,{"inputs":[],"output":{"name":"bc1_rgbaunormblock"}}],[11,"clone","","",225,null],[11,"fmt","","",225,null],[11,"format","","",225,null],[11,"decode_clear_value","","",225,null],[11,"is_compressed","","",225,null],[11,"is_float_or_compressed","","",225,null],[11,"default","","",226,{"inputs":[],"output":{"name":"bc1_rgbasrgbblock"}}],[11,"clone","","",226,null],[11,"fmt","","",226,null],[11,"format","","",226,null],[11,"decode_clear_value","","",226,null],[11,"is_compressed","","",226,null],[11,"is_float_or_compressed","","",226,null],[11,"default","","",227,{"inputs":[],"output":{"name":"bc2unormblock"}}],[11,"clone","","",227,null],[11,"fmt","","",227,null],[11,"format","","",227,null],[11,"decode_clear_value","","",227,null],[11,"is_compressed","","",227,null],[11,"is_float_or_compressed","","",227,null],[11,"default","","",228,{"inputs":[],"output":{"name":"bc2srgbblock"}}],[11,"clone","","",228,null],[11,"fmt","","",228,null],[11,"format","","",228,null],[11,"decode_clear_value","","",228,null],[11,"is_compressed","","",228,null],[11,"is_float_or_compressed","","",228,null],[11,"default","","",229,{"inputs":[],"output":{"name":"bc3unormblock"}}],[11,"clone","","",229,null],[11,"fmt","","",229,null],[11,"format","","",229,null],[11,"decode_clear_value","","",229,null],[11,"is_compressed","","",229,null],[11,"is_float_or_compressed","","",229,null],[11,"default","","",230,{"inputs":[],"output":{"name":"bc3srgbblock"}}],[11,"clone","","",230,null],[11,"fmt","","",230,null],[11,"format","","",230,null],[11,"decode_clear_value","","",230,null],[11,"is_compressed","","",230,null],[11,"is_float_or_compressed","","",230,null],[11,"default","","",231,{"inputs":[],"output":{"name":"bc4unormblock"}}],[11,"clone","","",231,null],[11,"fmt","","",231,null],[11,"format","","",231,null],[11,"decode_clear_value","","",231,null],[11,"is_compressed","","",231,null],[11,"is_float_or_compressed","","",231,null],[11,"default","","",232,{"inputs":[],"output":{"name":"bc4snormblock"}}],[11,"clone","","",232,null],[11,"fmt","","",232,null],[11,"format","","",232,null],[11,"decode_clear_value","","",232,null],[11,"is_compressed","","",232,null],[11,"is_float_or_compressed","","",232,null],[11,"default","","",233,{"inputs":[],"output":{"name":"bc5unormblock"}}],[11,"clone","","",233,null],[11,"fmt","","",233,null],[11,"format","","",233,null],[11,"decode_clear_value","","",233,null],[11,"is_compressed","","",233,null],[11,"is_float_or_compressed","","",233,null],[11,"default","","",234,{"inputs":[],"output":{"name":"bc5snormblock"}}],[11,"clone","","",234,null],[11,"fmt","","",234,null],[11,"format","","",234,null],[11,"decode_clear_value","","",234,null],[11,"is_compressed","","",234,null],[11,"is_float_or_compressed","","",234,null],[11,"default","","",235,{"inputs":[],"output":{"name":"bc6hufloatblock"}}],[11,"clone","","",235,null],[11,"fmt","","",235,null],[11,"format","","",235,null],[11,"decode_clear_value","","",235,null],[11,"is_compressed","","",235,null],[11,"is_float_or_compressed","","",235,null],[11,"default","","",236,{"inputs":[],"output":{"name":"bc6hsfloatblock"}}],[11,"clone","","",236,null],[11,"fmt","","",236,null],[11,"format","","",236,null],[11,"decode_clear_value","","",236,null],[11,"is_compressed","","",236,null],[11,"is_float_or_compressed","","",236,null],[11,"default","","",237,{"inputs":[],"output":{"name":"bc7unormblock"}}],[11,"clone","","",237,null],[11,"fmt","","",237,null],[11,"format","","",237,null],[11,"decode_clear_value","","",237,null],[11,"is_compressed","","",237,null],[11,"is_float_or_compressed","","",237,null],[11,"default","","",238,{"inputs":[],"output":{"name":"bc7srgbblock"}}],[11,"clone","","",238,null],[11,"fmt","","",238,null],[11,"format","","",238,null],[11,"decode_clear_value","","",238,null],[11,"is_compressed","","",238,null],[11,"is_float_or_compressed","","",238,null],[11,"default","","",239,{"inputs":[],"output":{"name":"etc2_r8g8b8unormblock"}}],[11,"clone","","",239,null],[11,"fmt","","",239,null],[11,"format","","",239,null],[11,"decode_clear_value","","",239,null],[11,"is_compressed","","",239,null],[11,"is_float_or_compressed","","",239,null],[11,"default","","",240,{"inputs":[],"output":{"name":"etc2_r8g8b8srgbblock"}}],[11,"clone","","",240,null],[11,"fmt","","",240,null],[11,"format","","",240,null],[11,"decode_clear_value","","",240,null],[11,"is_compressed","","",240,null],[11,"is_float_or_compressed","","",240,null],[11,"default","","",241,{"inputs":[],"output":{"name":"etc2_r8g8b8a1unormblock"}}],[11,"clone","","",241,null],[11,"fmt","","",241,null],[11,"format","","",241,null],[11,"decode_clear_value","","",241,null],[11,"is_compressed","","",241,null],[11,"is_float_or_compressed","","",241,null],[11,"default","","",242,{"inputs":[],"output":{"name":"etc2_r8g8b8a1srgbblock"}}],[11,"clone","","",242,null],[11,"fmt","","",242,null],[11,"format","","",242,null],[11,"decode_clear_value","","",242,null],[11,"is_compressed","","",242,null],[11,"is_float_or_compressed","","",242,null],[11,"default","","",243,{"inputs":[],"output":{"name":"etc2_r8g8b8a8unormblock"}}],[11,"clone","","",243,null],[11,"fmt","","",243,null],[11,"format","","",243,null],[11,"decode_clear_value","","",243,null],[11,"is_compressed","","",243,null],[11,"is_float_or_compressed","","",243,null],[11,"default","","",244,{"inputs":[],"output":{"name":"etc2_r8g8b8a8srgbblock"}}],[11,"clone","","",244,null],[11,"fmt","","",244,null],[11,"format","","",244,null],[11,"decode_clear_value","","",244,null],[11,"is_compressed","","",244,null],[11,"is_float_or_compressed","","",244,null],[11,"default","","",245,{"inputs":[],"output":{"name":"eac_r11unormblock"}}],[11,"clone","","",245,null],[11,"fmt","","",245,null],[11,"format","","",245,null],[11,"decode_clear_value","","",245,null],[11,"is_compressed","","",245,null],[11,"is_float_or_compressed","","",245,null],[11,"default","","",246,{"inputs":[],"output":{"name":"eac_r11snormblock"}}],[11,"clone","","",246,null],[11,"fmt","","",246,null],[11,"format","","",246,null],[11,"decode_clear_value","","",246,null],[11,"is_compressed","","",246,null],[11,"is_float_or_compressed","","",246,null],[11,"default","","",247,{"inputs":[],"output":{"name":"eac_r11g11unormblock"}}],[11,"clone","","",247,null],[11,"fmt","","",247,null],[11,"format","","",247,null],[11,"decode_clear_value","","",247,null],[11,"is_compressed","","",247,null],[11,"is_float_or_compressed","","",247,null],[11,"default","","",248,{"inputs":[],"output":{"name":"eac_r11g11snormblock"}}],[11,"clone","","",248,null],[11,"fmt","","",248,null],[11,"format","","",248,null],[11,"decode_clear_value","","",248,null],[11,"is_compressed","","",248,null],[11,"is_float_or_compressed","","",248,null],[11,"default","","",249,{"inputs":[],"output":{"name":"astc_4x4unormblock"}}],[11,"clone","","",249,null],[11,"fmt","","",249,null],[11,"format","","",249,null],[11,"decode_clear_value","","",249,null],[11,"is_compressed","","",249,null],[11,"is_float_or_compressed","","",249,null],[11,"default","","",250,{"inputs":[],"output":{"name":"astc_4x4srgbblock"}}],[11,"clone","","",250,null],[11,"fmt","","",250,null],[11,"format","","",250,null],[11,"decode_clear_value","","",250,null],[11,"is_compressed","","",250,null],[11,"is_float_or_compressed","","",250,null],[11,"default","","",251,{"inputs":[],"output":{"name":"astc_5x4unormblock"}}],[11,"clone","","",251,null],[11,"fmt","","",251,null],[11,"format","","",251,null],[11,"decode_clear_value","","",251,null],[11,"is_compressed","","",251,null],[11,"is_float_or_compressed","","",251,null],[11,"default","","",252,{"inputs":[],"output":{"name":"astc_5x4srgbblock"}}],[11,"clone","","",252,null],[11,"fmt","","",252,null],[11,"format","","",252,null],[11,"decode_clear_value","","",252,null],[11,"is_compressed","","",252,null],[11,"is_float_or_compressed","","",252,null],[11,"default","","",253,{"inputs":[],"output":{"name":"astc_5x5unormblock"}}],[11,"clone","","",253,null],[11,"fmt","","",253,null],[11,"format","","",253,null],[11,"decode_clear_value","","",253,null],[11,"is_compressed","","",253,null],[11,"is_float_or_compressed","","",253,null],[11,"default","","",254,{"inputs":[],"output":{"name":"astc_5x5srgbblock"}}],[11,"clone","","",254,null],[11,"fmt","","",254,null],[11,"format","","",254,null],[11,"decode_clear_value","","",254,null],[11,"is_compressed","","",254,null],[11,"is_float_or_compressed","","",254,null],[11,"default","","",255,{"inputs":[],"output":{"name":"astc_6x5unormblock"}}],[11,"clone","","",255,null],[11,"fmt","","",255,null],[11,"format","","",255,null],[11,"decode_clear_value","","",255,null],[11,"is_compressed","","",255,null],[11,"is_float_or_compressed","","",255,null],[11,"default","","",256,{"inputs":[],"output":{"name":"astc_6x5srgbblock"}}],[11,"clone","","",256,null],[11,"fmt","","",256,null],[11,"format","","",256,null],[11,"decode_clear_value","","",256,null],[11,"is_compressed","","",256,null],[11,"is_float_or_compressed","","",256,null],[11,"default","","",257,{"inputs":[],"output":{"name":"astc_6x6unormblock"}}],[11,"clone","","",257,null],[11,"fmt","","",257,null],[11,"format","","",257,null],[11,"decode_clear_value","","",257,null],[11,"is_compressed","","",257,null],[11,"is_float_or_compressed","","",257,null],[11,"default","","",258,{"inputs":[],"output":{"name":"astc_6x6srgbblock"}}],[11,"clone","","",258,null],[11,"fmt","","",258,null],[11,"format","","",258,null],[11,"decode_clear_value","","",258,null],[11,"is_compressed","","",258,null],[11,"is_float_or_compressed","","",258,null],[11,"default","","",259,{"inputs":[],"output":{"name":"astc_8x5unormblock"}}],[11,"clone","","",259,null],[11,"fmt","","",259,null],[11,"format","","",259,null],[11,"decode_clear_value","","",259,null],[11,"is_compressed","","",259,null],[11,"is_float_or_compressed","","",259,null],[11,"default","","",260,{"inputs":[],"output":{"name":"astc_8x5srgbblock"}}],[11,"clone","","",260,null],[11,"fmt","","",260,null],[11,"format","","",260,null],[11,"decode_clear_value","","",260,null],[11,"is_compressed","","",260,null],[11,"is_float_or_compressed","","",260,null],[11,"default","","",261,{"inputs":[],"output":{"name":"astc_8x6unormblock"}}],[11,"clone","","",261,null],[11,"fmt","","",261,null],[11,"format","","",261,null],[11,"decode_clear_value","","",261,null],[11,"is_compressed","","",261,null],[11,"is_float_or_compressed","","",261,null],[11,"default","","",262,{"inputs":[],"output":{"name":"astc_8x6srgbblock"}}],[11,"clone","","",262,null],[11,"fmt","","",262,null],[11,"format","","",262,null],[11,"decode_clear_value","","",262,null],[11,"is_compressed","","",262,null],[11,"is_float_or_compressed","","",262,null],[11,"default","","",263,{"inputs":[],"output":{"name":"astc_8x8unormblock"}}],[11,"clone","","",263,null],[11,"fmt","","",263,null],[11,"format","","",263,null],[11,"decode_clear_value","","",263,null],[11,"is_compressed","","",263,null],[11,"is_float_or_compressed","","",263,null],[11,"default","","",264,{"inputs":[],"output":{"name":"astc_8x8srgbblock"}}],[11,"clone","","",264,null],[11,"fmt","","",264,null],[11,"format","","",264,null],[11,"decode_clear_value","","",264,null],[11,"is_compressed","","",264,null],[11,"is_float_or_compressed","","",264,null],[11,"default","","",265,{"inputs":[],"output":{"name":"astc_10x5unormblock"}}],[11,"clone","","",265,null],[11,"fmt","","",265,null],[11,"format","","",265,null],[11,"decode_clear_value","","",265,null],[11,"is_compressed","","",265,null],[11,"is_float_or_compressed","","",265,null],[11,"default","","",266,{"inputs":[],"output":{"name":"astc_10x5srgbblock"}}],[11,"clone","","",266,null],[11,"fmt","","",266,null],[11,"format","","",266,null],[11,"decode_clear_value","","",266,null],[11,"is_compressed","","",266,null],[11,"is_float_or_compressed","","",266,null],[11,"default","","",267,{"inputs":[],"output":{"name":"astc_10x6unormblock"}}],[11,"clone","","",267,null],[11,"fmt","","",267,null],[11,"format","","",267,null],[11,"decode_clear_value","","",267,null],[11,"is_compressed","","",267,null],[11,"is_float_or_compressed","","",267,null],[11,"default","","",268,{"inputs":[],"output":{"name":"astc_10x6srgbblock"}}],[11,"clone","","",268,null],[11,"fmt","","",268,null],[11,"format","","",268,null],[11,"decode_clear_value","","",268,null],[11,"is_compressed","","",268,null],[11,"is_float_or_compressed","","",268,null],[11,"default","","",269,{"inputs":[],"output":{"name":"astc_10x8unormblock"}}],[11,"clone","","",269,null],[11,"fmt","","",269,null],[11,"format","","",269,null],[11,"decode_clear_value","","",269,null],[11,"is_compressed","","",269,null],[11,"is_float_or_compressed","","",269,null],[11,"default","","",270,{"inputs":[],"output":{"name":"astc_10x8srgbblock"}}],[11,"clone","","",270,null],[11,"fmt","","",270,null],[11,"format","","",270,null],[11,"decode_clear_value","","",270,null],[11,"is_compressed","","",270,null],[11,"is_float_or_compressed","","",270,null],[11,"default","","",271,{"inputs":[],"output":{"name":"astc_10x10unormblock"}}],[11,"clone","","",271,null],[11,"fmt","","",271,null],[11,"format","","",271,null],[11,"decode_clear_value","","",271,null],[11,"is_compressed","","",271,null],[11,"is_float_or_compressed","","",271,null],[11,"default","","",272,{"inputs":[],"output":{"name":"astc_10x10srgbblock"}}],[11,"clone","","",272,null],[11,"fmt","","",272,null],[11,"format","","",272,null],[11,"decode_clear_value","","",272,null],[11,"is_compressed","","",272,null],[11,"is_float_or_compressed","","",272,null],[11,"default","","",273,{"inputs":[],"output":{"name":"astc_12x10unormblock"}}],[11,"clone","","",273,null],[11,"fmt","","",273,null],[11,"format","","",273,null],[11,"decode_clear_value","","",273,null],[11,"is_compressed","","",273,null],[11,"is_float_or_compressed","","",273,null],[11,"default","","",274,{"inputs":[],"output":{"name":"astc_12x10srgbblock"}}],[11,"clone","","",274,null],[11,"fmt","","",274,null],[11,"format","","",274,null],[11,"decode_clear_value","","",274,null],[11,"is_compressed","","",274,null],[11,"is_float_or_compressed","","",274,null],[11,"default","","",275,{"inputs":[],"output":{"name":"astc_12x12unormblock"}}],[11,"clone","","",275,null],[11,"fmt","","",275,null],[11,"format","","",275,null],[11,"decode_clear_value","","",275,null],[11,"is_compressed","","",275,null],[11,"is_float_or_compressed","","",275,null],[11,"default","","",276,{"inputs":[],"output":{"name":"astc_12x12srgbblock"}}],[11,"clone","","",276,null],[11,"fmt","","",276,null],[11,"format","","",276,null],[11,"decode_clear_value","","",276,null],[11,"is_compressed","","",276,null],[11,"is_float_or_compressed","","",276,null],[11,"format","","",78,null],[11,"decode_clear_value","","",78,null],[11,"is_float","","",78,null],[11,"is_uint","","",78,null],[11,"is_sint","","",78,null],[11,"is_depth","","",78,null],[11,"is_stencil","","",78,null],[11,"is_depth_stencil","","",78,null],[11,"is_compressed","","",78,null],[11,"is_float_or_compressed","","",78,null],[11,"hash","","",79,null],[11,"eq","","",79,null],[11,"clone","","",79,null],[11,"fmt","","",79,null],[11,"eq","","",80,null],[11,"ne","","",80,null],[11,"clone","","",80,null],[11,"fmt","","",80,null],[11,"from","","",80,null],[11,"from","","",80,null],[11,"from","","",80,null],[11,"from","","",80,null],[11,"from","","",80,null],[11,"from","","",80,null],[11,"from","","",80,null],[11,"from","","",80,null],[11,"from","","",80,null],[11,"from","","",80,null],[11,"from","","",80,null],[11,"from","","",80,null],[11,"from","","",80,{"inputs":[{"name":"f32"}],"output":{"name":"clearvalue"}}],[11,"from","","",80,{"inputs":[{"name":"u32"}],"output":{"name":"clearvalue"}}],[11,"from","","",80,null],[0,"framebuffer","vulkano","Targets on which your draw commands are executed.",null,null],[3,"EmptySinglePassRenderPass","vulkano::framebuffer","Implementation of `RenderPass` with no attachment at all and a single pass.",null,null],[3,"Framebuffer","","Contains the list of images attached to a render pass.",null,null],[3,"UnsafeRenderPass","","Defines the layout of multiple subpasses.",null,null],[3,"LayoutAttachmentDescription","","Describes an attachment that will be used in a render pass.",null,null],[12,"format","","Format of the image that is going to be binded.",277,null],[12,"samples","","Number of samples of the image that is going to be binded.",277,null],[12,"load","","What the implementation should do with that attachment at the start of the renderpass.",277,null],[12,"store","","What the implementation should do with that attachment at the end of the renderpass.",277,null],[12,"initial_layout","","Layout that the image is going to be in at the start of the renderpass.",277,null],[12,"final_layout","","Layout that the image will be transitionned to at the end of the renderpass.",277,null],[3,"LayoutPassDescription","","Describes one of the passes of a render pass.",null,null],[12,"color_attachments","","Indices and layouts of attachments to use as color attachments.",278,null],[12,"depth_stencil","","Index and layout of the attachment to use as depth-stencil attachment.",278,null],[12,"input_attachments","","Indices and layouts of attachments to use as input attachments.",278,null],[12,"resolve_attachments","","If not empty, each color attachment will be resolved into each corresponding entry of\nthis list.",278,null],[12,"preserve_attachments","","Indices of attachments that will be preserved during this pass.",278,null],[3,"LayoutPassDependencyDescription","","Describes a dependency between two passes of a render pass.",null,null],[12,"source_subpass","","Index of the subpass that writes the data that `destination_subpass` is going to use.",279,null],[12,"destination_subpass","","Index of the subpass that reads the data that `source_subpass` wrote.",279,null],[12,"src_stages","","The pipeline stages that must be finished on the previous subpass before the destination\nsubpass can start.",279,null],[12,"dst_stages","","The pipeline stages of the destination subpass that must wait for the source to be finished.\nStages that are earlier of the stages specified here can start before the source is\nfinished.",279,null],[12,"src_access","","The way the source subpass accesses the attachments on which we depend.",279,null],[12,"dst_access","","The way the destination subpass accesses the attachments on which we depend.",279,null],[12,"by_region","","If false, then the whole subpass must be finished for the next one to start. If true, then\nthe implementation can start the new subpass for some given pixels as long as the previous\nsubpass is finished for these given pixels.",279,null],[3,"Subpass","","Represents a subpass within a `RenderPass` object.",null,null],[4,"FramebufferCreationError","","Error that can happen when creating a framebuffer object.",null,null],[13,"OomError","","Out of memory.",280,null],[13,"DimensionsTooLarge","","The requested dimensions exceed the device&#39;s limits.",280,null],[13,"AttachmentNotIdentitySwizzled","","One of the attachments has a component swizzle that is different from identity.",280,null],[13,"AttachmentTooSmall","","One of the attachments is too small compared to the requested framebuffer dimensions.",280,null],[4,"RenderPassCreationError","","Error that can happen when creating a compute pipeline.",null,null],[13,"OomError","","Not enough memory.",281,null],[13,"ColorAttachmentsLimitExceeded","","The maximum number of color attachments has been exceeded.",281,null],[4,"StoreOp","","Describes what the implementation should do with an attachment after all the subpasses have\ncompleted.",null,null],[13,"Store","","The attachment will be stored. This is what you usually want.",282,null],[13,"DontCare","","What happens is implementation-specific.",282,null],[4,"LoadOp","","Describes what the implementation should do with an attachment at the start of the subpass.",null,null],[13,"Load","","The attachment will be loaded. This is what you want if you want to draw over\nsomething existing.",283,null],[13,"Clear","","The attachment will be cleared by the implementation with a uniform value that you must\nprovide when you start drawing.",283,null],[13,"DontCare","","The attachment will have undefined content.",283,null],[11,"raw","","See the docs of new().",284,{"inputs":[{"name":"arc"}],"output":{"name":"result"}}],[11,"new","","Builds the render pass.",284,{"inputs":[{"name":"arc"}],"output":{"name":"arc"}}],[11,"inner","","",284,null],[11,"attachments","","",284,null],[11,"passes","","",284,null],[11,"dependencies","","",284,null],[11,"num_subpasses","","",284,null],[11,"num_color_attachments","","",284,null],[11,"num_samples","","",284,null],[11,"has_depth_stencil_attachment","","",284,null],[11,"has_depth","","",284,null],[11,"has_writable_depth","","",284,null],[11,"has_stencil","","",284,null],[11,"has_writable_stencil","","",284,null],[11,"convert_attachments_list","","",284,null],[11,"convert_clear_values","","",284,null],[11,"new","","Builds a new framebuffer.",285,null],[11,"is_compatible_with","","Returns true if this framebuffer can be used with the specified renderpass.",285,null],[11,"dimensions","","Returns the width, height and layers of this framebuffer.",285,null],[11,"width","","Returns the width of the framebuffer in pixels.",285,null],[11,"height","","Returns the height of the framebuffer in pixels.",285,null],[11,"layers","","Returns the number of layers (or depth) of the framebuffer.",285,null],[11,"device","","Returns the device that was used to create this framebuffer.",285,null],[11,"render_pass","","Returns the renderpass that was used to create this framebuffer.",285,null],[11,"attachments","","Returns all the resources attached to that framebuffer.",285,null],[11,"internal_object","","",285,null],[11,"drop","","",285,null],[11,"eq","","",280,null],[11,"ne","","",280,null],[11,"fmt","","",280,null],[11,"clone","","",280,null],[11,"from","","",280,{"inputs":[{"name":"oomerror"}],"output":{"name":"framebuffercreationerror"}}],[11,"description","","",280,null],[11,"cause","","",280,null],[11,"fmt","","",280,null],[11,"from","","",280,{"inputs":[{"name":"error"}],"output":{"name":"framebuffercreationerror"}}],[11,"new","","Builds a new renderpass.",286,{"inputs":[{"name":"arc"},{"name":"ia"},{"name":"ip"},{"name":"id"}],"output":{"name":"result"}}],[11,"granularity","","Returns the granularity of this render pass.",286,null],[11,"device","","Returns the device that was used to create this render pass.",286,null],[11,"internal_object","","",286,null],[11,"inner","","",286,null],[11,"drop","","",286,null],[11,"eq","","",281,null],[11,"ne","","",281,null],[11,"fmt","","",281,null],[11,"clone","","",281,null],[11,"description","","",281,null],[11,"cause","","",281,null],[11,"fmt","","",281,null],[11,"from","","",281,{"inputs":[{"name":"oomerror"}],"output":{"name":"renderpasscreationerror"}}],[11,"from","","",281,{"inputs":[{"name":"error"}],"output":{"name":"renderpasscreationerror"}}],[11,"clone","","",277,null],[11,"fmt","","",277,null],[11,"is_compatible_with","","Returns true if this attachment is compatible with another attachment, as defined in the\n`Render Pass Compatibility` section of the Vulkan specs.",277,null],[11,"clone","","",278,null],[11,"fmt","","",278,null],[11,"clone","","",279,null],[11,"fmt","","",279,null],[11,"hash","","",282,null],[11,"eq","","",282,null],[11,"clone","","",282,null],[11,"fmt","","",282,null],[11,"hash","","",283,null],[11,"eq","","",283,null],[11,"clone","","",283,null],[11,"fmt","","",283,null],[11,"from","","Returns a handle that represents a subpass of a render pass.",287,{"inputs":[{"name":"arc"},{"name":"u32"}],"output":{"name":"option"}}],[11,"num_color_attachments","","Returns the number of color attachments in this subpass.",287,null],[11,"has_depth","","Returns true if the subpass has a depth attachment or a depth-stencil attachment.",287,null],[11,"has_writable_depth","","Returns true if the subpass has a depth attachment or a depth-stencil attachment whose\nlayout is not `DepthStencilReadOnlyOptimal`.",287,null],[11,"has_stencil","","Returns true if the subpass has a stencil attachment or a depth-stencil attachment.",287,null],[11,"has_writable_stencil","","Returns true if the subpass has a stencil attachment or a depth-stencil attachment whose\nlayout is not `DepthStencilReadOnlyOptimal`.",287,null],[11,"has_color_or_depth_stencil_attachment","","Returns true if the subpass has any color or depth/stencil attachment.",287,null],[11,"num_samples","","Returns the number of samples in the color and/or depth/stencil attachments. Returns `None`\nif there is no such attachment in this subpass.",287,null],[11,"render_pass","","Returns the render pass of this subpass.",287,null],[11,"index","","Returns the index of this subpass within the renderpass.",287,null],[11,"clone","","",287,null],[8,"RenderPass","","Trait for objects that describe a render pass.",null,null],[10,"inner","","Returns the underlying `UnsafeRenderPass`. Used by vulkano&#39;s internals.",288,null],[8,"RenderPassDesc","","",null,null],[16,"AttachmentsIter","","Iterator returned by the `attachments` method.",289,null],[16,"PassesIter","","Iterator returned by the `passes` method.",289,null],[16,"DependenciesIter","","Iterator returned by the `dependencies` method.",289,null],[10,"attachments","","Returns an iterator that describes the list of attachments of this render pass.",289,null],[10,"passes","","Returns an iterator that describes the list of passes of this render pass.",289,null],[10,"dependencies","","Returns an iterator that describes the list of inter-pass dependencies of this render pass.",289,null],[11,"num_subpasses","","Returns the number of subpasses within the render pass.",289,null],[11,"num_color_attachments","","Returns the number of color attachments in a subpass. Returns `None` if out of range.",289,null],[11,"num_samples","","Returns the number of samples of the attachments of a subpass. Returns `None` if out of\nrange or if the subpass has no attachment. TODO: return an enum instead?",289,null],[11,"has_depth_stencil_attachment","","Returns a tuple whose first element is `true` if there&#39;s a depth attachment, and whose\nsecond element is `true` if there&#39;s a stencil attachment. Returns `None` if out of range.",289,null],[11,"has_depth","","Returns true if a subpass has a depth attachment or a depth-stencil attachment.",289,null],[11,"has_writable_depth","","Returns true if a subpass has a depth attachment or a depth-stencil attachment whose\nlayout is not `DepthStencilReadOnlyOptimal`.",289,null],[11,"has_stencil","","Returns true if a subpass has a stencil attachment or a depth-stencil attachment.",289,null],[11,"has_writable_stencil","","Returns true if a subpass has a stencil attachment or a depth-stencil attachment whose\nlayout is not `DepthStencilReadOnlyOptimal`.",289,null],[8,"RenderPassAttachmentsList","","Extension trait for `RenderPass`. Defines which types are allowed as an attachments list.",null,null],[16,"AttachmentsIter","","A decoded `A`.",290,null],[10,"convert_attachments_list","","Decodes a `A` into a list of attachments.",290,null],[8,"RenderPassClearValues","","Extension trait for `RenderPass`. Defines which types are allowed as a list of clear values.",null,null],[16,"ClearValuesIter","","Iterator that produces one clear value per attachment.",291,null],[10,"convert_clear_values","","Decodes a `C` into a list of clear values where each element corresponds\nto an attachment. The size of the returned iterator must be the same as the number of\nattachments.",291,null],[8,"RenderPassCompatible","","Trait implemented on render pass objects to check whether they are compatible\nwith another render pass.",null,null],[10,"is_compatible_with","","Returns `true` if this layout is compatible with the other layout, as defined in the\n`Render Pass Compatibility` section of the Vulkan specs.",292,null],[8,"RenderPassSubpassInterface","","Extension trait for `RenderPass` that checks whether a subpass of this render pass accepts\nthe output of a fragment shader.",null,null],[10,"is_compatible_with","","Returns `true` if this subpass is compatible with the fragment output definition.\nAlso returns `false` if the subpass is out of range.",293,null],[0,"image","vulkano","Images storage (1D, 2D, 3D, arrays, etc.).",null,null],[3,"StorageImage","vulkano::image","General-purpose image in device memory. Can be used for any usage, but will be slower than a\nspecialized image.",null,null],[3,"Swizzle","","Specifies how the components of an image must be swizzled.",null,null],[12,"r","","First component.",294,null],[12,"g","","Second component.",294,null],[12,"b","","Third component.",294,null],[12,"a","","Fourth component.",294,null],[4,"MipmapsCount","","Specifies how many mipmaps must be allocated.",null,null],[13,"Log2","","Allocates the number of mipmaps required to store all the mipmaps of the image where each\nmipmap is half the dimensions of the previous level. Guaranteed to be always supported.",295,null],[13,"One","","Allocate one mipmap (ie. just the main level). Always supported.",295,null],[13,"Specific","","Allocate the given number of mipmaps. May result in an error if the value is out of range\nof what the implementation supports.",295,null],[4,"ComponentSwizzle","","Describes the value that an individual component must return when being accessed.",null,null],[13,"Identity","","Returns the value that this component should normally have.",296,null],[13,"Zero","","Always return zero.",296,null],[13,"One","","Always return one.",296,null],[13,"Red","","Returns the value of the first component.",296,null],[13,"Green","","Returns the value of the second component.",296,null],[13,"Blue","","Returns the value of the third component.",296,null],[13,"Alpha","","Returns the value of the fourth component.",296,null],[0,"attachment","","",null,null],[3,"AttachmentImage","vulkano::image::attachment","Image whose purpose is to be used as a framebuffer attachment.",null,null],[11,"fmt","","",297,null],[11,"new","","Creates a new image with the given dimensions and format.",297,null],[11,"transient","","Same as `new`, except that the image will be transient.",297,null],[11,"dimensions","","Returns the dimensions of the image.",297,null],[11,"inner","","",297,null],[11,"blocks","","",297,null],[11,"block_mipmap_levels_range","","",297,null],[11,"block_array_layers_range","","",297,null],[11,"initial_layout","","",297,null],[11,"final_layout","","",297,null],[11,"needs_fence","","",297,null],[11,"gpu_access","","",297,null],[11,"decode","","",297,null],[11,"matches_format","","",297,null],[11,"parent","","",297,null],[11,"parent_arc","","",297,{"inputs":[{"name":"arc"}],"output":{"name":"arc"}}],[11,"blocks","","",297,null],[11,"inner","","",297,null],[11,"descriptor_set_storage_image_layout","","",297,null],[11,"descriptor_set_combined_image_sampler_layout","","",297,null],[11,"descriptor_set_sampled_image_layout","","",297,null],[11,"descriptor_set_input_attachment_layout","","",297,null],[11,"identity_swizzle","","",297,null],[0,"immutable","vulkano::image","",null,null],[3,"ImmutableImage","vulkano::image::immutable","Image whose purpose is to be used for read-only purposes. You can write to the image once,\nbut then you must only ever read from it. TODO: clarify because of blit operations",null,null],[11,"fmt","","",298,null],[11,"new","","Builds a new immutable image.",298,{"inputs":[{"name":"arc"},{"name":"dimensions"},{"name":"f"},{"name":"i"}],"output":{"name":"result"}}],[11,"dimensions","","Returns the dimensions of the image.",298,null],[11,"inner","","",298,null],[11,"blocks","","",298,null],[11,"block_mipmap_levels_range","","",298,null],[11,"block_array_layers_range","","",298,null],[11,"initial_layout","","",298,null],[11,"final_layout","","",298,null],[11,"needs_fence","","",298,null],[11,"gpu_access","","",298,null],[11,"matches_format","","",298,null],[11,"parent","","",298,null],[11,"parent_arc","","",298,{"inputs":[{"name":"arc"}],"output":{"name":"arc"}}],[11,"blocks","","",298,null],[11,"inner","","",298,null],[11,"descriptor_set_storage_image_layout","","",298,null],[11,"descriptor_set_combined_image_sampler_layout","","",298,null],[11,"descriptor_set_sampled_image_layout","","",298,null],[11,"descriptor_set_input_attachment_layout","","",298,null],[11,"identity_swizzle","","",298,null],[11,"fmt","vulkano::image","",299,null],[11,"new","","Creates a new image with the given dimensions and format.",299,{"inputs":[{"name":"arc"},{"name":"dimensions"},{"name":"f"},{"name":"i"}],"output":{"name":"result"}}],[11,"dimensions","","Returns the dimensions of the image.",299,null],[11,"inner","","",299,null],[11,"blocks","","",299,null],[11,"block_mipmap_levels_range","","",299,null],[11,"block_array_layers_range","","",299,null],[11,"initial_layout","","",299,null],[11,"final_layout","","",299,null],[11,"needs_fence","","",299,null],[11,"gpu_access","","",299,null],[11,"decode","","",299,null],[11,"matches_format","","",299,null],[11,"parent","","",299,null],[11,"parent_arc","","",299,{"inputs":[{"name":"arc"}],"output":{"name":"arc"}}],[11,"blocks","","",299,null],[11,"inner","","",299,null],[11,"descriptor_set_storage_image_layout","","",299,null],[11,"descriptor_set_combined_image_sampler_layout","","",299,null],[11,"descriptor_set_sampled_image_layout","","",299,null],[11,"descriptor_set_input_attachment_layout","","",299,null],[11,"identity_swizzle","","",299,null],[0,"swapchain","","",null,null],[3,"SwapchainImage","vulkano::image::swapchain","An image that is part of a swapchain.",null,null],[11,"from_raw","","Builds a `SwapchainImage` from raw components.",300,{"inputs":[{"name":"unsafeimage"},{"name":"format"},{"name":"arc"},{"name":"u32"}],"output":{"name":"result"}}],[11,"dimensions","","Returns the dimensions of the image.",300,null],[11,"format","","Returns the format of the image.",300,null],[11,"swapchain","","Returns the swapchain this image belongs to.",300,null],[11,"inner","","",300,null],[11,"blocks","","",300,null],[11,"block_mipmap_levels_range","","",300,null],[11,"block_array_layers_range","","",300,null],[11,"initial_layout","","",300,null],[11,"final_layout","","",300,null],[11,"needs_fence","","",300,null],[11,"gpu_access","","",300,null],[11,"matches_format","","",300,null],[11,"parent","","",300,null],[11,"parent_arc","","",300,{"inputs":[{"name":"arc"}],"output":{"name":"arc"}}],[11,"blocks","","",300,null],[11,"inner","","",300,null],[11,"descriptor_set_storage_image_layout","","",300,null],[11,"descriptor_set_combined_image_sampler_layout","","",300,null],[11,"descriptor_set_sampled_image_layout","","",300,null],[11,"descriptor_set_input_attachment_layout","","",300,null],[11,"identity_swizzle","","",300,null],[0,"sys","vulkano::image","Low-level implementation of images and images views.",null,null],[3,"UnsafeImage","vulkano::image::sys","A storage for pixels or arbitrary data.",null,null],[3,"LinearLayout","","Describes the memory layout of an image with linear tiling.",null,null],[12,"offset","","Number of bytes from the start of the memory and the start of the queried subresource.",301,null],[12,"size","","Total number of bytes for the queried subresource. Can be used for a safety check.",301,null],[12,"row_pitch","","Number of bytes between two texels or two blocks in adjacent rows.",301,null],[12,"array_pitch","","Number of bytes between two texels or two blocks in adjacent array layers. This value is\nundefined for images with only one array layer.",301,null],[12,"depth_pitch","","Number of bytes between two texels or two blocks in adjacent depth layers. This value is\nundefined for images that are not three-dimensional.",301,null],[3,"UnsafeImageView","","",null,null],[3,"Usage","","Describes how an image is going to be used. This is **not** an optimization.",null,null],[12,"transfer_source","","Can be used a source for transfers. Includes blits.",302,null],[12,"transfer_dest","","Can be used a destination for transfers. Includes blits.",302,null],[12,"sampled","","Can be sampled from a shader.",302,null],[12,"storage","","Can be used as an image storage in a shader.",302,null],[12,"color_attachment","","Can be attached as a color attachment to a framebuffer.",302,null],[12,"depth_stencil_attachment","","Can be attached as a depth, stencil or depth-stencil attachment to a framebuffer.",302,null],[12,"transient_attachment","","Indicates that this image will only ever be used as a temporary framebuffer attachment.\nAs soon as you leave a render pass, the content of transient images becomes undefined.",302,null],[12,"input_attachment","","Can be used as an input attachment. In other words, you can draw to it in a subpass then\nread from it in a following pass.",302,null],[4,"ImageCreationError","","Error that can happen when creating an instance.",null,null],[13,"OomError","","Not enough memory.",303,null],[13,"InvalidMipmapsCount","","A wrong number of mipmaps was provided.",303,null],[12,"obtained","vulkano::image::sys::ImageCreationError","",303,null],[12,"valid_range","","",303,null],[13,"UnsupportedSamplesCount","vulkano::image::sys","The requeted number of samples is not supported, or is 0.",303,null],[12,"obtained","vulkano::image::sys::ImageCreationError","",303,null],[13,"UnsupportedDimensions","vulkano::image::sys","The dimensions are too large, or one of the dimensions is 0.",303,null],[12,"dimensions","vulkano::image::sys::ImageCreationError","",303,null],[13,"FormatNotSupported","vulkano::image::sys","The requested format is not supported by the Vulkan implementation.",303,null],[13,"UnsupportedUsage","","The format is supported, but at least one of the requested usages is not supported.",303,null],[13,"ShaderStorageImageMultisampleFeatureNotEnabled","","The `shader_storage_image_multisample` feature must be enabled to create such an image.",303,null],[4,"Dimensions","","",null,null],[13,"Dim1d","","",304,null],[12,"width","vulkano::image::sys::Dimensions","",304,null],[13,"Dim1dArray","vulkano::image::sys","",304,null],[12,"width","vulkano::image::sys::Dimensions","",304,null],[12,"array_layers","","",304,null],[13,"Dim2d","vulkano::image::sys","",304,null],[12,"width","vulkano::image::sys::Dimensions","",304,null],[12,"height","","",304,null],[13,"Dim2dArray","vulkano::image::sys","",304,null],[12,"width","vulkano::image::sys::Dimensions","",304,null],[12,"height","","",304,null],[12,"array_layers","","",304,null],[13,"Dim3d","vulkano::image::sys","",304,null],[12,"width","vulkano::image::sys::Dimensions","",304,null],[12,"height","","",304,null],[12,"depth","","",304,null],[4,"Layout","vulkano::image::sys","",null,null],[13,"Undefined","","",305,null],[13,"General","","",305,null],[13,"ColorAttachmentOptimal","","",305,null],[13,"DepthStencilAttachmentOptimal","","",305,null],[13,"DepthStencilReadOnlyOptimal","","",305,null],[13,"ShaderReadOnlyOptimal","","",305,null],[13,"TransferSrcOptimal","","",305,null],[13,"TransferDstOptimal","","",305,null],[13,"Preinitialized","","",305,null],[13,"PresentSrc","","",305,null],[11,"fmt","","",306,null],[11,"new","","Creates a new image and allocates memory for it.",306,{"inputs":[{"name":"arc"},{"name":"usage"},{"name":"format"},{"name":"dimensions"},{"name":"u32"},{"name":"mi"},{"name":"sharing"},{"name":"bool"},{"name":"bool"}],"output":{"name":"result"}}],[11,"from_raw","","Creates an image from a raw handle. The image won&#39;t be destroyed.",306,{"inputs":[{"name":"arc"},{"name":"u64"},{"name":"u32"},{"name":"format"},{"name":"dimensions"},{"name":"u32"},{"name":"u32"}],"output":{"name":"unsafeimage"}}],[11,"bind_memory","","",306,null],[11,"device","","",306,null],[11,"format","","",306,null],[11,"mipmap_levels","","",306,null],[11,"dimensions","","",306,null],[11,"samples","","",306,null],[11,"color_linear_layout","","Queries the layout of an image in memory. Only valid for images with linear tiling.",306,null],[11,"depth_linear_layout","","Same as `color_linear_layout`, except that it retreives the depth component of the image.",306,null],[11,"stencil_linear_layout","","Same as `color_linear_layout`, except that it retreives the stencil component of the image.",306,null],[11,"supports_blit_source","","Returns true if the image can be used as a source for blits.",306,null],[11,"supports_blit_destination","","Returns true if the image can be used as a destination for blits.",306,null],[11,"internal_object","","",306,null],[11,"drop","","",306,null],[11,"eq","","",303,null],[11,"ne","","",303,null],[11,"fmt","","",303,null],[11,"clone","","",303,null],[11,"description","","",303,null],[11,"cause","","",303,null],[11,"fmt","","",303,null],[11,"from","","",303,{"inputs":[{"name":"oomerror"}],"output":{"name":"imagecreationerror"}}],[11,"from","","",303,{"inputs":[{"name":"error"}],"output":{"name":"imagecreationerror"}}],[11,"eq","","",301,null],[11,"ne","","",301,null],[11,"clone","","",301,null],[11,"fmt","","",301,null],[11,"fmt","","",307,null],[11,"raw","","See the docs of new().",307,{"inputs":[{"name":"unsafeimage"},{"name":"range"},{"name":"range"}],"output":{"name":"result"}}],[11,"new","","Creates a new view from an image.",307,{"inputs":[{"name":"unsafeimage"},{"name":"range"},{"name":"range"}],"output":{"name":"unsafeimageview"}}],[11,"format","","",307,null],[11,"usage_transfer_src","","",307,null],[11,"usage_transfer_dest","","",307,null],[11,"usage_sampled","","",307,null],[11,"usage_storage","","",307,null],[11,"usage_color_attachment","","",307,null],[11,"usage_depth_stencil_attachment","","",307,null],[11,"usage_transient_attachment","","",307,null],[11,"usage_input_attachment","","",307,null],[11,"internal_object","","",307,null],[11,"drop","","",307,null],[11,"eq","","",304,null],[11,"ne","","",304,null],[11,"fmt","","",304,null],[11,"clone","","",304,null],[11,"width","","",304,null],[11,"height","","",304,null],[11,"width_height","","",304,null],[11,"depth","","",304,null],[11,"array_layers","","",304,null],[11,"hash","","",302,null],[11,"eq","","",302,null],[11,"ne","","",302,null],[11,"clone","","",302,null],[11,"fmt","","",302,null],[11,"all","","Builds a `Usage` with all values set to true. Note that using the returned value will\nproduce an error because of `transient_attachment` being true.",302,{"inputs":[],"output":{"name":"usage"}}],[11,"none","","Builds a `Usage` with all values set to false. Useful as a default value.",302,{"inputs":[],"output":{"name":"usage"}}],[11,"eq","","",305,null],[11,"clone","","",305,null],[11,"fmt","","",305,null],[0,"traits","vulkano::image","",null,null],[3,"AccessRange","vulkano::image::traits","",null,null],[12,"block","","",308,null],[12,"write","","",308,null],[12,"initial_layout","","",308,null],[12,"final_layout","","",308,null],[3,"GpuAccessResult","","",null,null],[12,"dependencies","","",309,null],[12,"additional_wait_semaphore","","",309,null],[12,"additional_signal_semaphore","","",309,null],[12,"before_transitions","","",309,null],[12,"after_transitions","","",309,null],[3,"Transition","","",null,null],[12,"block","","",310,null],[12,"from","","",310,null],[12,"to","","",310,null],[8,"Image","","Trait for types that represent images.",null,null],[10,"inner","","Returns the inner unsafe image object used by this image.",311,null],[11,"format","","Returns the format of this image.",311,null],[11,"samples","","Returns the number of samples of this image.",311,null],[11,"dimensions","","Returns the dimensions of the image.",311,null],[10,"blocks","","Given a range, returns the list of blocks which each range is contained in.",311,null],[10,"block_mipmap_levels_range","","",311,null],[10,"block_array_layers_range","","",311,null],[10,"initial_layout","","Called when a command buffer that uses this image is being built. Given a block, this\nfunction should return the layout that the block will have when the command buffer is\nsubmitted.",311,null],[10,"final_layout","","Called when a command buffer that uses this image is being built. Given a block, this\nfunction should return the layout that the block must have when the command buffer is\nend.",311,null],[10,"needs_fence","","Returns whether accessing a subresource of that image should signal a fence.",311,null],[10,"gpu_access","","",311,null],[11,"supports_blit_source","","Returns true if the image can be used as a source for blits.",311,null],[11,"supports_blit_destination","","Returns true if the image can be used as a destination for blits.",311,null],[8,"ImageClearValue","","Extension trait for images. Checks whether the value `T` can be used as a clear value for the\ngiven image.",null,null],[10,"decode","","",312,null],[8,"ImageContent","","",null,null],[10,"matches_format","","Checks whether pixels of type `P` match the format of the image.",313,null],[8,"ImageView","","Trait for types that represent image views.",null,null],[10,"parent","","",314,null],[10,"parent_arc","","",314,{"inputs":[{"name":"arc"}],"output":{"name":"arc"}}],[10,"inner","","Returns the inner unsafe image view object used by this image view.",314,null],[10,"blocks","","Returns the blocks of the parent image this image view overlaps.",314,null],[11,"format","","Returns the format of this view. This can be different from the parent&#39;s format.",314,null],[11,"samples","","",314,null],[10,"descriptor_set_storage_image_layout","","Returns the image layout to use in a descriptor with the given subresource.",314,null],[10,"descriptor_set_combined_image_sampler_layout","","Returns the image layout to use in a descriptor with the given subresource.",314,null],[10,"descriptor_set_sampled_image_layout","","Returns the image layout to use in a descriptor with the given subresource.",314,null],[10,"descriptor_set_input_attachment_layout","","Returns the image layout to use in a descriptor with the given subresource.",314,null],[10,"identity_swizzle","","Returns true if the view doesn&#39;t use components swizzling.",314,null],[11,"can_be_sampled","","Returns true if the given sampler can be used with this image view.",314,null],[8,"AttachmentImageView","","",null,null],[10,"accept","","",315,null],[11,"clone","","",308,null],[11,"fmt","","",308,null],[11,"clone","vulkano::image","",295,null],[11,"fmt","","",295,null],[11,"from","","",295,{"inputs":[{"name":"u32"}],"output":{"name":"mipmapscount"}}],[11,"eq","","",294,null],[11,"ne","","",294,null],[11,"default","","",294,{"inputs":[],"output":{"name":"swizzle"}}],[11,"fmt","","",294,null],[11,"clone","","",294,null],[11,"eq","","",296,null],[11,"fmt","","",296,null],[11,"clone","","",296,null],[11,"default","","",296,{"inputs":[],"output":{"name":"componentswizzle"}}],[0,"instance","vulkano","API entry point.",null,null],[3,"Features","vulkano::instance","Represents all the features that are available on a physical device or enabled on\na logical device.",null,null],[12,"robust_buffer_access","","",316,null],[12,"full_draw_index_uint32","","",316,null],[12,"image_cube_array","","",316,null],[12,"independent_blend","","",316,null],[12,"geometry_shader","","",316,null],[12,"tessellation_shader","","",316,null],[12,"sample_rate_shading","","",316,null],[12,"dual_src_blend","","",316,null],[12,"logic_op","","",316,null],[12,"multi_draw_indirect","","",316,null],[12,"draw_indirect_first_instance","","",316,null],[12,"depth_clamp","","",316,null],[12,"depth_bias_clamp","","",316,null],[12,"fill_mode_non_solid","","",316,null],[12,"depth_bounds","","",316,null],[12,"wide_lines","","",316,null],[12,"large_points","","",316,null],[12,"alpha_to_one","","",316,null],[12,"multi_viewport","","",316,null],[12,"sampler_anisotropy","","",316,null],[12,"texture_compression_etc2","","",316,null],[12,"texture_compression_astc_ldr","","",316,null],[12,"texture_compression_bc","","",316,null],[12,"occlusion_query_precise","","",316,null],[12,"pipeline_statistics_query","","",316,null],[12,"vertex_pipeline_stores_and_atomics","","",316,null],[12,"fragment_stores_and_atomics","","",316,null],[12,"shader_tessellation_and_geometry_point_size","","",316,null],[12,"shader_image_gather_extended","","",316,null],[12,"shader_storage_image_extended_formats","","",316,null],[12,"shader_storage_image_multisample","","",316,null],[12,"shader_storage_image_read_without_format","","",316,null],[12,"shader_storage_image_write_without_format","","",316,null],[12,"shader_uniform_buffer_array_dynamic_indexing","","",316,null],[12,"shader_sampled_image_array_dynamic_indexing","","",316,null],[12,"shader_storage_buffer_array_dynamic_indexing","","",316,null],[12,"shader_storage_image_array_dynamic_indexing","","",316,null],[12,"shader_clip_distance","","",316,null],[12,"shader_cull_distance","","",316,null],[12,"shader_f3264","","",316,null],[12,"shader_int64","","",316,null],[12,"shader_int16","","",316,null],[12,"shader_resource_residency","","",316,null],[12,"shader_resource_min_lod","","",316,null],[12,"sparse_binding","","",316,null],[12,"sparse_residency_buffer","","",316,null],[12,"sparse_residency_image2d","","",316,null],[12,"sparse_residency_image3d","","",316,null],[12,"sparse_residency2_samples","","",316,null],[12,"sparse_residency4_samples","","",316,null],[12,"sparse_residency8_samples","","",316,null],[12,"sparse_residency16_samples","","",316,null],[12,"sparse_residency_aliased","","",316,null],[12,"variable_multisample_rate","","",316,null],[12,"inherited_queries","","",316,null],[3,"DeviceExtensions","","List of extensions that are enabled or available.",null,null],[12,"khr_swapchain","","",73,null],[12,"khr_display_swapchain","","",73,null],[3,"InstanceExtensions","","List of extensions that are enabled or available.",null,null],[12,"khr_surface","","",317,null],[12,"khr_display","","",317,null],[12,"khr_xlib_surface","","",317,null],[12,"khr_xcb_surface","","",317,null],[12,"khr_wayland_surface","","",317,null],[12,"khr_mir_surface","","",317,null],[12,"khr_android_surface","","",317,null],[12,"khr_win32_surface","","",317,null],[12,"ext_debug_report","","",317,null],[3,"Instance","","An instance of a Vulkan context. This is the main object that should be created by an\napplication before everything else.",null,null],[3,"ApplicationInfo","","Information that can be given to the Vulkan driver so that it can identify your application.",null,null],[12,"application_name","","Name of the application.",318,null],[12,"application_version","","An opaque number that contains the version number of the application.",318,null],[12,"engine_name","","Name of the engine used to power the application.",318,null],[12,"engine_version","","An opaque number that contains the version number of the engine.",318,null],[3,"PhysicalDevice","","Represents one of the available devices on this machine.",null,null],[3,"PhysicalDevicesIter","","Iterator for all the physical devices available on hardware.",null,null],[3,"QueueFamiliesIter","","Iterator for all the queue families available on a physical device.",null,null],[3,"QueueFamily","","Represents a queue family in a physical device.",null,null],[3,"MemoryTypesIter","","Iterator for all the memory types available on a physical device.",null,null],[3,"MemoryType","","Represents a memory type in a physical device.",null,null],[3,"MemoryHeapsIter","","Iterator for all the memory heaps available on a physical device.",null,null],[3,"MemoryHeap","","Represents a memory heap in a physical device.",null,null],[3,"Limits","","Limits of a physical device.",null,null],[3,"LayerProperties","","Properties of an available layer.",null,null],[3,"LayersIterator","","Iterator that produces the list of layers that are available.",null,null],[4,"InstanceCreationError","","Error that can happen when creating an instance.",null,null],[13,"OomError","","Not enough memory.",319,null],[13,"InitializationFailed","","Failed to initialize for an implementation-specific reason.",319,null],[13,"LayerNotPresent","","One of the requested layers is missing.",319,null],[13,"ExtensionNotPresent","","One of the requested extensions is missing.",319,null],[13,"IncompatibleDriver","","The version requested is not supported by the implementation.",319,null],[4,"PhysicalDeviceType","","Type of a physical device.",null,null],[13,"IntegratedGpu","","The device is an integrated GPU.",320,null],[13,"DiscreteGpu","","The device is a discrete GPU.",320,null],[13,"VirtualGpu","","The device is a virtual GPU.",320,null],[13,"Cpu","","The device is a CPU.",320,null],[13,"Other","","The device is something else.",320,null],[4,"LoadingError","","Error that can happen when loading the Vulkan loader.",null,null],[13,"LibraryLoadFailure","","Failed to load the Vulkan shared library.",321,null],[13,"MissingEntryPoint","","One of the entry points required to be supported by the Vulkan implementation is missing.",321,null],[5,"layers_list","","Queries the list of layers that are available when creating an instance.",null,{"inputs":[],"output":{"name":"result"}}],[0,"debug","","Debug callback called by validation layers.",null,null],[3,"DebugCallback","vulkano::instance::debug","Registration of a callback called by validation layers.",null,null],[3,"Message","","A message received by the callback.",null,null],[12,"ty","","Type of message.",322,null],[12,"layer_prefix","","Prefix of the layer that reported this message.",322,null],[12,"description","","Description of the message.",322,null],[3,"MessageTypes","","Type of message.",null,null],[12,"error","","An error that may cause undefined results, including an application crash.",323,null],[12,"warning","","An unexpected use.",323,null],[12,"performance_warning","","A potential non-optimal use.",323,null],[12,"information","","An informational message that may be handy when debugging an application.",323,null],[12,"debug","","Diagnostic information from the loader and layers.",323,null],[4,"DebugCallbackCreationError","","Error that can happen when creating a debug callback.",null,null],[13,"MissingExtension","","The `EXT_debug_report` extension was not enabled.",324,null],[11,"new","","Initializes a debug callback.",325,{"inputs":[{"name":"arc"},{"name":"messagetypes"},{"name":"f"}],"output":{"name":"result"}}],[11,"errors_and_warnings","","Initializes a debug callback with errors and warnings.",325,{"inputs":[{"name":"arc"},{"name":"f"}],"output":{"name":"result"}}],[11,"drop","","",325,null],[11,"hash","","",323,null],[11,"eq","","",323,null],[11,"ne","","",323,null],[11,"clone","","",323,null],[11,"fmt","","",323,null],[11,"errors","","Builds a `MessageTypes` with all fields set to `false` expect `error`.",323,{"inputs":[],"output":{"name":"messagetypes"}}],[11,"errors_and_warnings","","Builds a `MessageTypes` with all fields set to `false` expect `error`, `warning`\nand `performance_warning`.",323,{"inputs":[],"output":{"name":"messagetypes"}}],[11,"none","","Builds a `MessageTypes` with all fields set to `false`.",323,{"inputs":[],"output":{"name":"messagetypes"}}],[11,"eq","","",324,null],[11,"fmt","","",324,null],[11,"clone","","",324,null],[11,"description","","",324,null],[11,"fmt","","",324,null],[11,"from","","",324,{"inputs":[{"name":"error"}],"output":{"name":"debugcallbackcreationerror"}}],[11,"eq","vulkano::instance","",317,null],[11,"ne","","",317,null],[11,"clone","","",317,null],[11,"fmt","","",317,null],[11,"none","","Returns an `Extensions` object with all members set to `false`.",317,{"inputs":[],"output":{"name":"instanceextensions"}}],[11,"build_extensions_list","","Builds a Vec containing the list of extensions.",317,null],[11,"intersection","","Returns the intersection of this list and another list.",317,null],[11,"supported_by_core_raw","","See the docs of supported_by_core().",317,{"inputs":[],"output":{"name":"result"}}],[11,"supported_by_core","","Returns an `Extensions` object with extensions supported by the core driver.",317,{"inputs":[],"output":{"name":"instanceextensions"}}],[11,"eq","vulkano::device","",73,null],[11,"ne","","",73,null],[11,"clone","","",73,null],[11,"fmt","","",73,null],[11,"none","","Returns an `Extensions` object with all members set to `false`.",73,{"inputs":[],"output":{"name":"deviceextensions"}}],[11,"build_extensions_list","","Builds a Vec containing the list of extensions.",73,null],[11,"intersection","","Returns the intersection of this list and another list.",73,null],[11,"new","vulkano::instance","Initializes a new instance of Vulkan.",326,{"inputs":[{"name":"option"},{"name":"instanceextensions"},{"name":"l"}],"output":{"name":"result"}}],[11,"loaded_extensions","","Returns the list of extensions that have been loaded.",326,null],[11,"fmt","","",326,null],[11,"internal_object","","",326,null],[11,"drop","","",326,null],[11,"clone","","",318,null],[11,"fmt","","",318,null],[11,"from_cargo_toml","","Builds an `ApplicationInfo` from the information gathered by Cargo.",318,{"inputs":[],"output":{"name":"applicationinfo"}}],[11,"default","","",318,{"inputs":[],"output":{"name":"applicationinfo"}}],[11,"eq","","",319,null],[11,"ne","","",319,null],[11,"fmt","","",319,null],[11,"clone","","",319,null],[11,"description","","",319,null],[11,"cause","","",319,null],[11,"fmt","","",319,null],[11,"from","","",319,{"inputs":[{"name":"oomerror"}],"output":{"name":"instancecreationerror"}}],[11,"from","","",319,{"inputs":[{"name":"error"}],"output":{"name":"instancecreationerror"}}],[11,"clone","","",327,null],[11,"fmt","","",327,null],[11,"enumerate","","Returns an iterator that enumerates the physical devices available.",327,{"inputs":[{"name":"arc"}],"output":{"name":"physicaldevicesiter"}}],[11,"from_index","","Returns a physical device from its index. Returns `None` if out of range.",327,{"inputs":[{"name":"arc"},{"name":"usize"}],"output":{"name":"option"}}],[11,"instance","","Returns the instance corresponding to this physical device.",327,null],[11,"index","","Returns the index of the physical device in the physical devices list.",327,null],[11,"name","","Returns the human-readable name of the device.",327,null],[11,"ty","","Returns the type of the device.",327,null],[11,"api_version","","Returns the version of Vulkan supported by this device.",327,null],[11,"supported_features","","Returns the Vulkan features that are supported by this physical device.",327,null],[11,"queue_families","","Builds an iterator that enumerates all the queue families on this physical device.",327,null],[11,"queue_family_by_id","","Returns the queue family with the given index, or `None` if out of range.",327,null],[11,"memory_types","","Builds an iterator that enumerates all the memory types on this physical device.",327,null],[11,"memory_type_by_id","","Returns the memory type with the given index, or `None` if out of range.",327,null],[11,"memory_heaps","","Builds an iterator that enumerates all the memory heaps on this physical device.",327,null],[11,"memory_heap_by_id","","Returns the memory heap with the given index, or `None` if out of range.",327,null],[11,"limits","","Gives access to the limits of the physical device.",327,null],[11,"driver_version","","Returns an opaque number representing the version of the driver of this device.",327,null],[11,"pci_device_id","","Returns the PCI ID of the device.",327,null],[11,"pci_vendor_id","","Returns the PCI ID of the vendor.",327,null],[11,"uuid","","Returns a unique identifier for the device.",327,null],[11,"internal_object","","",327,null],[11,"clone","","",328,null],[11,"fmt","","",328,null],[11,"next","","",328,null],[11,"hash","","",320,null],[11,"eq","","",320,null],[11,"clone","","",320,null],[11,"fmt","","",320,null],[11,"clone","","",329,null],[11,"fmt","","",329,null],[11,"physical_device","","Returns the physical device associated to this queue family.",329,null],[11,"id","","Returns the identifier of this queue family within the physical device.",329,null],[11,"queues_count","","Returns the number of queues that belong to this family.",329,null],[11,"supports_graphics","","Returns true if queues of this family can execute graphics operations.",329,null],[11,"supports_compute","","Returns true if queues of this family can execute compute operations.",329,null],[11,"supports_transfers","","Returns true if queues of this family can execute transfer operations.",329,null],[11,"supports_sparse_binding","","Returns true if queues of this family can execute sparse resources binding operations.",329,null],[11,"clone","","",330,null],[11,"fmt","","",330,null],[11,"next","","",330,null],[11,"size_hint","","",330,null],[11,"clone","","",331,null],[11,"fmt","","",331,null],[11,"physical_device","","Returns the physical device associated to this memory type.",331,null],[11,"id","","Returns the identifier of this memory type within the physical device.",331,null],[11,"heap","","Returns the heap that corresponds to this memory type.",331,null],[11,"is_device_local","","Returns true if the memory type is located on the device, which means that it&#39;s the most\nefficient for GPU accesses.",331,null],[11,"is_host_visible","","Returns true if the memory type can be accessed by the host.",331,null],[11,"is_host_coherent","","Returns true if modifications made by the host or the GPU on this memory type are\ninstantaneously visible to the other party. False means that changes have to be flushed.",331,null],[11,"is_host_cached","","Returns true if memory of this memory type is cached by the host. Host memory accesses to\ncached memory is faster than for uncached memory. However you are not guaranteed that it\nis coherent.",331,null],[11,"is_lazily_allocated","","Returns true if allocations made to this memory type is lazy.",331,null],[11,"clone","","",332,null],[11,"fmt","","",332,null],[11,"next","","",332,null],[11,"size_hint","","",332,null],[11,"clone","","",333,null],[11,"fmt","","",333,null],[11,"physical_device","","Returns the physical device associated to this memory heap.",333,null],[11,"id","","Returns the identifier of this memory heap within the physical device.",333,null],[11,"size","","Returns the size in bytes on this heap.",333,null],[11,"is_device_local","","Returns true if the heap is local to the GPU.",333,null],[11,"clone","","",334,null],[11,"fmt","","",334,null],[11,"next","","",334,null],[11,"size_hint","","",334,null],[11,"max_image_dimension_1d","","",335,null],[11,"max_image_dimension_2d","","",335,null],[11,"max_image_dimension_3d","","",335,null],[11,"max_image_dimension_cube","","",335,null],[11,"max_image_array_layers","","",335,null],[11,"max_texel_buffer_elements","","",335,null],[11,"max_uniform_buffer_range","","",335,null],[11,"max_storage_buffer_range","","",335,null],[11,"max_push_constants_size","","",335,null],[11,"max_memory_allocation_count","","",335,null],[11,"max_sampler_allocation_count","","",335,null],[11,"buffer_image_granularity","","",335,null],[11,"sparse_address_space_size","","",335,null],[11,"max_bound_descriptor_sets","","",335,null],[11,"max_per_stage_descriptor_samplers","","",335,null],[11,"max_per_stage_descriptor_uniform_buffers","","",335,null],[11,"max_per_stage_descriptor_storage_buffers","","",335,null],[11,"max_per_stage_descriptor_sampled_images","","",335,null],[11,"max_per_stage_descriptor_storage_images","","",335,null],[11,"max_per_stage_descriptor_input_attachments","","",335,null],[11,"max_per_stage_resources","","",335,null],[11,"max_descriptor_set_samplers","","",335,null],[11,"max_descriptor_set_uniform_buffers","","",335,null],[11,"max_descriptor_set_uniform_buffers_dynamic","","",335,null],[11,"max_descriptor_set_storage_buffers","","",335,null],[11,"max_descriptor_set_storage_buffers_dynamic","","",335,null],[11,"max_descriptor_set_sampled_images","","",335,null],[11,"max_descriptor_set_storage_images","","",335,null],[11,"max_descriptor_set_input_attachments","","",335,null],[11,"max_vertex_input_attributes","","",335,null],[11,"max_vertex_input_bindings","","",335,null],[11,"max_vertex_input_attribute_offset","","",335,null],[11,"max_vertex_input_binding_stride","","",335,null],[11,"max_vertex_output_components","","",335,null],[11,"max_tessellation_generation_level","","",335,null],[11,"max_tessellation_patch_size","","",335,null],[11,"max_tessellation_control_per_vertex_input_components","","",335,null],[11,"max_tessellation_control_per_vertex_output_components","","",335,null],[11,"max_tessellation_control_per_patch_output_components","","",335,null],[11,"max_tessellation_control_total_output_components","","",335,null],[11,"max_tessellation_evaluation_input_components","","",335,null],[11,"max_tessellation_evaluation_output_components","","",335,null],[11,"max_geometry_shader_invocations","","",335,null],[11,"max_geometry_input_components","","",335,null],[11,"max_geometry_output_components","","",335,null],[11,"max_geometry_output_vertices","","",335,null],[11,"max_geometry_total_output_components","","",335,null],[11,"max_fragment_input_components","","",335,null],[11,"max_fragment_output_attachments","","",335,null],[11,"max_fragment_dual_src_attachments","","",335,null],[11,"max_fragment_combined_output_resources","","",335,null],[11,"max_compute_shared_memory_size","","",335,null],[11,"max_compute_work_group_count","","",335,null],[11,"max_compute_work_group_invocations","","",335,null],[11,"max_compute_work_group_size","","",335,null],[11,"sub_pixel_precision_bits","","",335,null],[11,"sub_texel_precision_bits","","",335,null],[11,"mipmap_precision_bits","","",335,null],[11,"max_draw_indexed_index_value","","",335,null],[11,"max_draw_indirect_count","","",335,null],[11,"max_sampler_lod_bias","","",335,null],[11,"max_sampler_anisotropy","","",335,null],[11,"max_viewports","","",335,null],[11,"max_viewport_dimensions","","",335,null],[11,"viewport_bounds_range","","",335,null],[11,"viewport_sub_pixel_bits","","",335,null],[11,"min_memory_map_alignment","","",335,null],[11,"min_texel_buffer_offset_alignment","","",335,null],[11,"min_uniform_buffer_offset_alignment","","",335,null],[11,"min_storage_buffer_offset_alignment","","",335,null],[11,"min_texel_offset","","",335,null],[11,"max_texel_offset","","",335,null],[11,"min_texel_gather_offset","","",335,null],[11,"max_texel_gather_offset","","",335,null],[11,"min_interpolation_offset","","",335,null],[11,"max_interpolation_offset","","",335,null],[11,"sub_pixel_interpolation_offset_bits","","",335,null],[11,"max_framebuffer_width","","",335,null],[11,"max_framebuffer_height","","",335,null],[11,"max_framebuffer_layers","","",335,null],[11,"framebuffer_color_sample_counts","","",335,null],[11,"framebuffer_depth_sample_counts","","",335,null],[11,"framebuffer_stencil_sample_counts","","",335,null],[11,"framebuffer_no_attachments_sample_counts","","",335,null],[11,"max_color_attachments","","",335,null],[11,"sampled_image_color_sample_counts","","",335,null],[11,"sampled_image_integer_sample_counts","","",335,null],[11,"sampled_image_depth_sample_counts","","",335,null],[11,"sampled_image_stencil_sample_counts","","",335,null],[11,"storage_image_sample_counts","","",335,null],[11,"max_sample_mask_words","","",335,null],[11,"timestamp_compute_and_graphics","","",335,null],[11,"timestamp_period","","",335,null],[11,"max_clip_distances","","",335,null],[11,"max_cull_distances","","",335,null],[11,"max_combined_clip_and_cull_distances","","",335,null],[11,"discrete_queue_priorities","","",335,null],[11,"point_size_range","","",335,null],[11,"line_width_range","","",335,null],[11,"point_size_granularity","","",335,null],[11,"line_width_granularity","","",335,null],[11,"strict_lines","","",335,null],[11,"standard_sample_locations","","",335,null],[11,"optimal_buffer_copy_offset_alignment","","",335,null],[11,"optimal_buffer_copy_row_pitch_alignment","","",335,null],[11,"non_coherent_atom_size","","",335,null],[11,"name","","Returns the name of the layer.",336,null],[11,"description","","Returns a description of the layer.",336,null],[11,"vulkan_version","","Returns the version of Vulkan supported by this layer.",336,null],[11,"implementation_version","","Returns an implementation-specific version number for this layer.",336,null],[11,"next","","",337,null],[11,"size_hint","","",337,null],[11,"clone","","",321,null],[11,"fmt","","",321,null],[11,"description","","",321,null],[11,"fmt","","",321,null],[0,"memory","vulkano","Device memory allocation and memory pools.",null,null],[3,"CpuAccess","vulkano::memory","Object that can be used to read or write the content of a `MappedDeviceMemory`.",null,null],[3,"DeviceMemory","","Represents memory that has been allocated.",null,null],[3,"MappedDeviceMemory","","Represents memory that has been allocated and mapped in CPU accessible space.",null,null],[3,"MemoryRequirements","","Represents requirements expressed by the Vulkan implementation.",null,null],[12,"size","","Number of bytes of memory required.",338,null],[12,"alignment","","Alignment of the requirement buffer. The base memory address must be a multiple\nof this value.",338,null],[12,"memory_type_bits","","Indicates which memory types can be used. Each bit that is set to 1 means that the memory\ntype whose index is the same as the position of the bit can be used.",338,null],[11,"fmt","","",339,null],[11,"alloc","","Allocates a chunk of memory from the device.",339,{"inputs":[{"name":"d"},{"name":"memorytype"},{"name":"usize"}],"output":{"name":"result"}}],[11,"alloc_and_map","","Allocates a chunk of memory and maps it.",339,{"inputs":[{"name":"d"},{"name":"memorytype"},{"name":"usize"}],"output":{"name":"result"}}],[11,"memory_type","","Returns the memory type this chunk was allocated on.",339,null],[11,"size","","Returns the size in bytes of that memory chunk.",339,null],[11,"device","","Returns the device associated with this allocation.",339,null],[11,"internal_object","","",339,null],[11,"drop","","",339,null],[11,"fmt","","",340,null],[11,"memory","","Returns the underlying `DeviceMemory`.",340,null],[11,"read_write","","Gives access to the content of the memory.",340,null],[11,"drop","","",340,null],[11,"map","","Makes a new `CpuAccess` to access a sub-part of the current `CpuAccess`.",341,null],[11,"deref","","",341,null],[11,"deref_mut","","",341,null],[11,"drop","","",341,null],[0,"pool","","",null,null],[3,"StdMemoryPool","vulkano::memory::pool","",null,null],[3,"StdMemoryPoolAlloc","","",null,null],[3,"StdHostVisibleMemoryTypePool","","Memory pool that operates on a given memory type.",null,null],[3,"StdHostVisibleMemoryTypePoolAlloc","","",null,null],[3,"StdNonHostVisibleMemoryTypePool","","Memory pool that operates on a given memory type.",null,null],[3,"StdNonHostVisibleMemoryTypePoolAlloc","","",null,null],[4,"AllocLayout","","Layout of the object being allocated.",null,null],[13,"Linear","","The object has a linear layout.",342,null],[13,"Optimal","","The object has an optimal layout.",342,null],[11,"fmt","","",343,null],[11,"new","","Creates a new pool that will operate on the given memory type.",343,{"inputs":[{"name":"arc"},{"name":"memorytype"}],"output":{"name":"arc"}}],[11,"alloc","","Allocates memory from the pool.",343,{"inputs":[{"name":"arc"},{"name":"usize"},{"name":"usize"}],"output":{"name":"result"}}],[11,"device","","Returns the device this pool operates on.",343,null],[11,"memory_type","","Returns the memory type this pool operates on.",343,null],[11,"fmt","","",344,null],[11,"memory","","",344,null],[11,"offset","","",344,null],[11,"size","","",344,null],[11,"drop","","",344,null],[11,"fmt","","",345,null],[11,"new","","Creates a new pool that will operate on the given memory type.",345,{"inputs":[{"name":"arc"},{"name":"memorytype"}],"output":{"name":"arc"}}],[11,"alloc","","Allocates memory from the pool.",345,{"inputs":[{"name":"arc"},{"name":"usize"},{"name":"usize"}],"output":{"name":"result"}}],[11,"device","","Returns the device this pool operates on.",345,null],[11,"memory_type","","Returns the memory type this pool operates on.",345,null],[11,"fmt","","",346,null],[11,"memory","","",346,null],[11,"offset","","",346,null],[11,"size","","",346,null],[11,"drop","","",346,null],[11,"fmt","","",347,null],[11,"new","","Creates a new pool.",347,{"inputs":[{"name":"arc"}],"output":{"name":"arc"}}],[11,"fmt","","",348,null],[11,"size","","",348,null],[11,"memory","","",348,null],[11,"mapped_memory","","",348,null],[11,"offset","","",348,null],[8,"MemoryPool","","Pool of GPU-visible memory that can be allocated from.",null,null],[16,"Alloc","","Object that represents a single allocation. Its destructor should free the chunk.",349,null],[10,"alloc","","Allocates memory from the pool.",349,null],[8,"MemoryPoolAlloc","","Object that represents a single allocation. Its destructor should free the chunk.",null,null],[10,"mapped_memory","","Returns the memory object from which this is allocated. Returns `None` if the memory is\nnot mapped.",350,null],[10,"memory","","Returns the memory object from which this is allocated.",350,null],[10,"offset","","Returns the offset at the start of the memory where the first byte of this allocation\nresides.",350,null],[11,"hash","","",342,null],[11,"eq","","",342,null],[11,"clone","","",342,null],[11,"fmt","","",342,null],[8,"Content","vulkano::memory","Trait for types of data that can be mapped.",null,null],[10,"ref_from_ptr","","Builds a pointer to this type from a raw pointer.",351,null],[10,"is_size_suitable","","Returns true if the size is suitable to store a type like this.",351,{"inputs":[{"name":"usize"}],"output":{"name":"bool"}}],[10,"indiv_size","","Returns the size of an individual element.",351,{"inputs":[],"output":{"name":"usize"}}],[11,"clone","","",338,null],[11,"fmt","","",338,null],[0,"pipeline","vulkano","Describes a graphical or compute operation.",null,null],[3,"ComputePipeline","vulkano::pipeline","A pipeline object that describes to the Vulkan implementation how it should perform compute\noperations.",null,null],[3,"GraphicsPipeline","","Defines how the implementation should perform a draw operation.",null,null],[3,"GraphicsPipelineParams","","Description of a `GraphicsPipeline`.",null,null],[12,"vertex_input","","Describes the layout of the vertex input.",352,null],[12,"vertex_shader","","The entry point of the vertex shader that will be run on the vertex input.",352,null],[12,"input_assembly","","Describes how vertices should be assembled into primitives. Essentially contains the type\nof primitives.",352,null],[12,"tessellation","","Parameters of the tessellation stage. `None` if you don&#39;t want to use tessellation.\nIf you use tessellation, you must enable the `tessellation_shader` feature on the device.",352,null],[12,"geometry_shader","","The entry point of the geometry shader. `None` if you don&#39;t want a geometry shader.\nIf you use a geometry shader, you must enable the `geometry_shader` feature on the device.",352,null],[12,"viewport","","Describes the subsection of the framebuffer attachments where the scene will be drawn.\nYou can use one or multiple viewports, but using multiple viewports is only relevant with\na geometry shader.",352,null],[12,"raster","","Describes how the implementation determines which pixels are covered by the shape.",352,null],[12,"multisample","","",352,null],[12,"fragment_shader","","The entry point of the fragment shader that will be run on the pixels.",352,null],[12,"depth_stencil","","Describes how the implementation should perform the depth and stencil tests.",352,null],[12,"blend","","Describes how the implementation should merge the color output of the fragment shader with\nthe existing value in the attachments.",352,null],[12,"layout","","Describes the list of descriptors and push constants that the various shaders are going to\nuse.",352,null],[12,"render_pass","","Which subpass of which render pass this pipeline will run on. It is an error to run a\ngraphics pipeline on a different subpass.",352,null],[3,"GraphicsPipelineParamsTess","","Additional parameters if you use tessellation.",null,null],[12,"tessellation_control_shader","","The entry point of the tessellation control shader.",353,null],[12,"tessellation_evaluation_shader","","The entry point of the tessellation evaluation shader.",353,null],[4,"GraphicsPipelineCreationError","","Error that can happen when creating a graphics pipeline.",null,null],[13,"OomError","","Not enough memory.",354,null],[13,"IncompatiblePipelineLayout","","The pipeline layout is not compatible with what the shaders expect.",354,null],[13,"VertexGeometryStagesMismatch","","The interface between the vertex shader and the geometry shader mismatches.",354,null],[13,"VertexTessControlStagesMismatch","","The interface between the vertex shader and the tessellation control shader mismatches.",354,null],[13,"VertexFragmentStagesMismatch","","The interface between the vertex shader and the fragment shader mismatches.",354,null],[13,"TessControlTessEvalStagesMismatch","","The interface between the tessellation control shader and the tessellation evaluation\nshader mismatches.",354,null],[13,"TessEvalGeometryStagesMismatch","","The interface between the tessellation evaluation shader and the geometry shader\nmismatches.",354,null],[13,"TessEvalFragmentStagesMismatch","","The interface between the tessellation evaluation shader and the fragment shader\nmismatches.",354,null],[13,"GeometryFragmentStagesMismatch","","The interface between the geometry shader and the fragment shader mismatches.",354,null],[13,"FragmentShaderRenderPassIncompatible","","The output of the fragment shader is not compatible with what the render pass subpass\nexpects.",354,null],[13,"IncompatibleVertexDefinition","","The vertex definition is not compatible with the input of the vertex shader.",354,null],[13,"MaxVertexInputBindingStrideExceeded","","The maximum stride value for vertex input (ie. the distance between two vertex elements)\nhas been exceeded.",354,null],[12,"binding","vulkano::pipeline::GraphicsPipelineCreationError","Index of the faulty binding.",354,null],[12,"max","","Maximum allowed value.",354,null],[12,"obtained","","Value that was passed.",354,null],[13,"MaxVertexInputBindingsExceeded","vulkano::pipeline","The maximum number of vertex sources has been exceeded.",354,null],[12,"max","vulkano::pipeline::GraphicsPipelineCreationError","Maximum allowed value.",354,null],[12,"obtained","","Value that was passed.",354,null],[13,"MaxVertexInputAttributeOffsetExceeded","vulkano::pipeline","The maximum offset for a vertex attribute has been exceeded. This means that your vertex\nstruct is too large.",354,null],[12,"max","vulkano::pipeline::GraphicsPipelineCreationError","Maximum allowed value.",354,null],[12,"obtained","","Value that was passed.",354,null],[13,"MaxVertexInputAttributesExceeded","vulkano::pipeline","The maximum number of vertex attributes has been exceeded.",354,null],[12,"max","vulkano::pipeline::GraphicsPipelineCreationError","Maximum allowed value.",354,null],[12,"obtained","","Value that was passed.",354,null],[13,"PrimitiveDoesntSupportPrimitiveRestart","vulkano::pipeline","The user requested to use primitive restart, but the primitive topology doesn&#39;t support it.",354,null],[12,"primitive","vulkano::pipeline::GraphicsPipelineCreationError","The topology that doesn&#39;t support primitive restart.",354,null],[13,"MultiViewportFeatureNotEnabled","vulkano::pipeline","The `multi_viewport` feature must be enabled in order to use multiple viewports at once.",354,null],[13,"MaxViewportsExceeded","","The maximum number of viewports has been exceeded.",354,null],[12,"max","vulkano::pipeline::GraphicsPipelineCreationError","Maximum allowed value.",354,null],[12,"obtained","","Value that was passed.",354,null],[13,"MaxViewportDimensionsExceeded","vulkano::pipeline","The maximum dimensions of viewports has been exceeded.",354,null],[13,"ViewportBoundsExceeded","","The minimum or maximum bounds of viewports have been exceeded.",354,null],[13,"WideLinesFeatureNotEnabled","","The `wide_lines` feature must be enabled in order to use a line width superior to 1.0.",354,null],[13,"DepthClampFeatureNotEnabled","","The `depth_clamp` feature must be enabled in order to use depth clamping.",354,null],[13,"DepthBiasClampFeatureNotEnabled","","The `depth_bias_clamp` feature must be enabled in order to use a depth bias clamp different\nfrom 0.0.",354,null],[13,"FillModeNonSolidFeatureNotEnabled","","The `fill_mode_non_solid` feature must be enabled in order to use a polygon mode different\nfrom `Fill`.",354,null],[13,"DepthBoundsFeatureNotEnabled","","The `depth_bounds` feature must be enabled in order to use depth bounds testing.",354,null],[13,"WrongStencilState","","The requested stencil test is invalid.",354,null],[13,"TopologyNotMatchingGeometryShader","","The primitives topology does not match what the geometry shader expects.",354,null],[13,"GeometryShaderFeatureNotEnabled","","The `geometry_shader` feature must be enabled in order to use geometry shaders.",354,null],[13,"TessellationShaderFeatureNotEnabled","","The `tessellation_shader` feature must be enabled in order to use tessellation shaders.",354,null],[13,"MismatchBlendingAttachmentsCount","","The number of attachments specified in the blending does not match the number of\nattachments in the subpass.",354,null],[13,"IndependentBlendFeatureNotEnabled","","The `independent_blend` feature must be enabled in order to use different blending\noperations per attachment.",354,null],[13,"LogicOpFeatureNotEnabled","","The `logic_op` feature must be enabled in order to use logic operations.",354,null],[13,"NoDepthAttachment","","The depth test requires a depth attachment but render pass has no depth attachment, or\ndepth writing is enabled and the depth attachment is read-only.",354,null],[13,"NoStencilAttachment","","The stencil test requires a stencil attachment but render pass has no stencil attachment, or\nstencil writing is enabled and the stencil attachment is read-only.",354,null],[13,"InvalidPrimitiveTopology","","Tried to use a patch list without a tessellation shader, or a non-patch-list with a\ntessellation shader.",354,null],[13,"MaxTessellationPatchSizeExceeded","","The `maxTessellationPatchSize` limit was exceeded.",354,null],[11,"new","","Builds a new `ComputePipeline`.",355,{"inputs":[{"name":"arc"},{"name":"arc"},{"name":"computeshaderentrypoint"},{"name":"css"}],"output":{"name":"result"}}],[11,"device","","Returns the `Device` this compute pipeline was created with.",355,null],[11,"layout","","Returns the pipeline layout used in this compute pipeline.",355,null],[11,"internal_object","","",355,null],[11,"drop","","",355,null],[11,"new","","Builds a new graphics pipeline object.",356,{"inputs":[{"name":"arc"},{"name":"graphicspipelineparams"}],"output":{"name":"result"}}],[11,"with_geometry_shader","","Builds a new graphics pipeline object with a geometry shader.",356,{"inputs":[{"name":"arc"},{"name":"graphicspipelineparams"}],"output":{"name":"result"}}],[11,"with_tessellation","","Builds a new graphics pipeline object with tessellation shaders.",356,{"inputs":[{"name":"arc"},{"name":"graphicspipelineparams"}],"output":{"name":"result"}}],[11,"vertex_definition","","Returns the vertex definition used in the constructor.",356,null],[11,"layout","","Returns the pipeline layout used in the constructor.",356,null],[11,"render_pass","","Returns the render pass used in the constructor.",356,null],[11,"subpass","","Returns the pass used in the constructor.",356,null],[11,"has_dynamic_line_width","","Returns true if the line width used by this pipeline is dynamic.",356,null],[11,"num_viewports","","Returns the number of viewports and scissors of this pipeline.",356,null],[11,"has_dynamic_viewports","","Returns true if the viewports used by this pipeline are dynamic.",356,null],[11,"has_dynamic_scissors","","Returns true if the scissors used by this pipeline are dynamic.",356,null],[11,"has_dynamic_depth_bounds","","Returns true if the depth bounds used by this pipeline are dynamic.",356,null],[11,"has_dynamic_stencil_compare_mask","","Returns true if the stencil compare masks used by this pipeline are dynamic.",356,null],[11,"has_dynamic_stencil_write_mask","","Returns true if the stencil write masks used by this pipeline are dynamic.",356,null],[11,"has_dynamic_stencil_reference","","Returns true if the stencil references used by this pipeline are dynamic.",356,null],[11,"internal_object","","",356,null],[11,"drop","","",356,null],[11,"eq","","",354,null],[11,"ne","","",354,null],[11,"fmt","","",354,null],[11,"clone","","",354,null],[11,"description","","",354,null],[11,"cause","","",354,null],[11,"fmt","","",354,null],[11,"from","","",354,{"inputs":[{"name":"oomerror"}],"output":{"name":"graphicspipelinecreationerror"}}],[11,"from","","",354,{"inputs":[{"name":"incompatiblevertexdefinitionerror"}],"output":{"name":"graphicspipelinecreationerror"}}],[11,"from","","",354,{"inputs":[{"name":"error"}],"output":{"name":"graphicspipelinecreationerror"}}],[0,"blend","","Defines how the color output of the fragment shader is written to the attachment.",null,null],[3,"Blend","vulkano::pipeline::blend","Describes how the color output of the fragment shader is written to the attachment. See the\ndocumentation of the `blend` module for more info.",null,null],[12,"logic_op","","",357,null],[12,"attachments","","",357,null],[12,"blend_constants","","The constant color to use for the `Constant*` blending operation.",357,null],[3,"AttachmentBlend","","Describes how the blending system should behave for an individual attachment.",null,null],[12,"enabled","","If false, blending is ignored and the output is directly written to the attachment.",358,null],[12,"color_op","","",358,null],[12,"color_src","","",358,null],[12,"color_dst","","",358,null],[12,"alpha_op","","",358,null],[12,"alpha_src","","",358,null],[12,"alpha_dst","","",358,null],[12,"mask_red","","",358,null],[12,"mask_green","","",358,null],[12,"mask_blue","","",358,null],[12,"mask_alpha","","",358,null],[4,"AttachmentsBlend","","Describes how the blending system should behave.",null,null],[13,"Collective","","All the framebuffer attachments will use the same blending.",359,null],[13,"Individual","","Each attachment will behave differently. Note that this requires enabling the\n`independent_blend` feature.",359,null],[4,"LogicOp","","Which logical operation to apply to the output values.",null,null],[13,"Clear","","Returns `0`.",360,null],[13,"And","","Returns `src &amp; dest`.",360,null],[13,"AndReverse","","Returns `src &amp; !dest`.",360,null],[13,"Copy","","Returns `src`.",360,null],[13,"AndInverted","","Returns `!src &amp; dest`.",360,null],[13,"Noop","","Returns `dest`.",360,null],[13,"Xor","","Returns `src ^ dest`.",360,null],[13,"Or","","Returns `src | dest`.",360,null],[13,"Nor","","Returns `!(src | dest)`.",360,null],[13,"Equivalent","","Returns `!(src ^ dest)`.",360,null],[13,"Invert","","Returns `!dest`.",360,null],[13,"OrReverse","","Returns `src | !dest.",360,null],[13,"CopyInverted","","Returns `!src`.",360,null],[13,"OrInverted","","Returns `!src | dest`.",360,null],[13,"Nand","","Returns `!(src &amp; dest)`.",360,null],[13,"Set","","Returns `!0` (all bits set to 1).",360,null],[4,"BlendOp","","",null,null],[13,"Add","","",361,null],[13,"Subtract","","",361,null],[13,"ReverseSubtract","","",361,null],[13,"Min","","",361,null],[13,"Max","","",361,null],[4,"BlendFactor","","",null,null],[13,"Zero","","",362,null],[13,"One","","",362,null],[13,"SrcColor","","",362,null],[13,"OneMinusSrcColor","","",362,null],[13,"DstColor","","",362,null],[13,"OneMinusDstColor","","",362,null],[13,"SrcAlpha","","",362,null],[13,"OneMinusSrcAlpha","","",362,null],[13,"DstAlpha","","",362,null],[13,"OneMinusDstAlpha","","",362,null],[13,"ConstantColor","","",362,null],[13,"OneMinusConstantColor","","",362,null],[13,"ConstantAlpha","","",362,null],[13,"OneMinusConstantAlpha","","",362,null],[13,"SrcAlphaSaturate","","",362,null],[13,"Src1Color","","",362,null],[13,"OneMinusSrc1Color","","",362,null],[13,"Src1Alpha","","",362,null],[13,"OneMinusSrc1Alpha","","",362,null],[11,"eq","","",357,null],[11,"ne","","",357,null],[11,"clone","","",357,null],[11,"fmt","","",357,null],[11,"pass_through","","Returns a `Blend` object that directly writes colors and alpha on the surface.",357,{"inputs":[],"output":{"name":"blend"}}],[11,"alpha_blending","","Returns a `Blend` object that adds transparent objects over others.",357,{"inputs":[],"output":{"name":"blend"}}],[11,"eq","","",359,null],[11,"ne","","",359,null],[11,"clone","","",359,null],[11,"fmt","","",359,null],[11,"eq","","",358,null],[11,"ne","","",358,null],[11,"clone","","",358,null],[11,"fmt","","",358,null],[11,"pass_through","","Builds an `AttachmentBlend` where blending is disabled.",358,{"inputs":[],"output":{"name":"attachmentblend"}}],[11,"ignore_source","","Builds an `AttachmentBlend` where the output of the fragment shader is ignored and the\ndestination is untouched.",358,{"inputs":[],"output":{"name":"attachmentblend"}}],[11,"alpha_blending","","Builds an `AttachmentBlend` where the output will be merged with the existing value\nbased on the alpha of the source.",358,{"inputs":[],"output":{"name":"attachmentblend"}}],[11,"eq","","",360,null],[11,"clone","","",360,null],[11,"fmt","","",360,null],[11,"default","","",360,{"inputs":[],"output":{"name":"logicop"}}],[11,"eq","","",361,null],[11,"clone","","",361,null],[11,"fmt","","",361,null],[11,"eq","","",362,null],[11,"clone","","",362,null],[11,"fmt","","",362,null],[0,"cache","vulkano::pipeline","Cache the pipeline objects to disk for faster reloads.",null,null],[3,"PipelineCache","vulkano::pipeline::cache","Opaque cache that contains pipeline objects.",null,null],[11,"with_data","","Builds a new pipeline cache from existing data.",363,null],[11,"empty","","Builds a new empty pipeline cache.",363,{"inputs":[{"name":"arc"}],"output":{"name":"result"}}],[11,"merge","","Merges other pipeline caches into this one.",363,null],[11,"get_data","","Obtains the data from the cache.",363,null],[11,"internal_object","","",363,null],[11,"drop","","",363,null],[0,"depth_stencil","vulkano::pipeline","Depth and stencil operations description.",null,null],[3,"DepthStencil","vulkano::pipeline::depth_stencil","Configuration of the depth and stencil tests.",null,null],[12,"depth_compare","","Comparison to use between the depth value of each fragment and the depth value currently\nin the depth buffer.",364,null],[12,"depth_write","","If `true`, then the value in the depth buffer will be updated when the depth test succeeds.",364,null],[12,"depth_bounds_test","","Allows you to ask the GPU to exclude fragments that are outside of a certain range. This is\ndone in addition to the regular depth test.",364,null],[12,"stencil_front","","Stencil operations to use for points, lines and triangles whose front is facing the user.",364,null],[12,"stencil_back","","Stencil operations to use for triangles whose back is facing the user.",364,null],[3,"Stencil","","Configuration of a stencil test.",null,null],[12,"compare","","The comparison to perform between the existing stencil value in the stencil buffer, and\nthe reference value (given by `reference`).",365,null],[12,"pass_op","","The operation to perform when both the depth test and the stencil test passed.",365,null],[12,"fail_op","","The operation to perform when the stencil test failed.",365,null],[12,"depth_fail_op","","The operation to perform when the stencil test passed but the depth test failed.",365,null],[12,"compare_mask","","Selects the bits of the unsigned integer stencil values participating in the stencil test.",365,null],[12,"write_mask","","Selects the bits of the unsigned integer stencil values updated by the stencil test in the\nstencil framebuffer attachment.",365,null],[12,"reference","","Reference value that is used in the unsigned stencil comparison.",365,null],[4,"StencilOp","","Operation to perform after the depth and stencil tests.",null,null],[13,"Keep","","",366,null],[13,"Zero","","",366,null],[13,"Replace","","",366,null],[13,"IncrementAndClamp","","",366,null],[13,"DecrementAndClamp","","",366,null],[13,"Invert","","",366,null],[13,"IncrementAndWrap","","",366,null],[13,"DecrementAndWrap","","",366,null],[4,"DepthBounds","","Allows you to ask the GPU to exclude fragments that are outside of a certain range.",null,null],[13,"Disabled","","The test is disabled. All fragments pass the depth bounds test.",367,null],[13,"Fixed","","Fragments that are within the given range do pass the test. Values are depth values\nbetween 0.0 and 1.0.",367,null],[13,"Dynamic","","The depth bounds test is enabled, but the range will need to specified when you submit\na draw command.",367,null],[4,"Compare","","Specifies how two values should be compared to decide whether a test passes or fails.",null,null],[13,"Never","","The test never passes.",368,null],[13,"Less","","The test passes if `value &lt; reference_value`.",368,null],[13,"Equal","","The test passes if `value == reference_value`.",368,null],[13,"LessOrEqual","","The test passes if `value &lt;= reference_value`.",368,null],[13,"Greater","","The test passes if `value &gt; reference_value`.",368,null],[13,"NotEqual","","The test passes if `value != reference_value`.",368,null],[13,"GreaterOrEqual","","The test passes if `value &gt;= reference_value`.",368,null],[13,"Always","","The test always passes.",368,null],[11,"clone","","",364,null],[11,"fmt","","",364,null],[11,"disabled","","Creates a `DepthStencil` where both the depth and stencil tests are disabled and have\nno effect.",364,{"inputs":[],"output":{"name":"depthstencil"}}],[11,"simple_depth_test","","Creates a `DepthStencil` with a `Less` depth test, `depth_write` set to true, and stencil\ntesting disabled.",364,{"inputs":[],"output":{"name":"depthstencil"}}],[11,"default","","",364,{"inputs":[],"output":{"name":"depthstencil"}}],[11,"clone","","",365,null],[11,"fmt","","",365,null],[11,"always_keep","","Returns true if the stencil operation will always result in `Keep`.",365,null],[11,"default","","",365,{"inputs":[],"output":{"name":"stencil"}}],[11,"eq","","",366,null],[11,"clone","","",366,null],[11,"fmt","","",366,null],[11,"eq","","",367,null],[11,"ne","","",367,null],[11,"clone","","",367,null],[11,"fmt","","",367,null],[11,"is_dynamic","","Returns true if equal to `DepthBounds::Dynamic`.",367,null],[11,"eq","","",368,null],[11,"clone","","",368,null],[11,"fmt","","",368,null],[0,"input_assembly","vulkano::pipeline","Assembling vertices into primitives.",null,null],[3,"InputAssembly","vulkano::pipeline::input_assembly","How the input assembly stage should behave.",null,null],[12,"topology","","The type of primitives.",369,null],[12,"primitive_restart_enable","","If true, then the special index value `0xffff` or `0xffffffff` will tell the GPU that it is\nthe end of the current primitive. A new primitive will restart at the next index.",369,null],[4,"PrimitiveTopology","","Describes how vertices must be grouped together to form primitives.",null,null],[13,"PointList","","",370,null],[13,"LineList","","",370,null],[13,"LineStrip","","",370,null],[13,"TriangleList","","",370,null],[13,"TriangleStrip","","",370,null],[13,"TriangleFan","","",370,null],[13,"LineListWithAdjacency","","",370,null],[13,"LineStripWithAdjacency","","",370,null],[13,"TriangleListWithAdjancecy","","",370,null],[13,"TriangleStripWithAdjacency","","",370,null],[13,"PatchList","","",370,null],[12,"vertices_per_patch","vulkano::pipeline::input_assembly::PrimitiveTopology","",370,null],[4,"IndexType","vulkano::pipeline::input_assembly","An enumeration of all valid index types.",null,null],[13,"U16","","",371,null],[13,"U32","","",371,null],[8,"Index","","Trait for types that can be used as indices by the GPU.",null,null],[10,"ty","","Returns the type of data.",372,{"inputs":[],"output":{"name":"indextype"}}],[11,"fmt","","",369,null],[11,"clone","","",369,null],[11,"triangle_list","","Builds an `InputAssembly` struct with the `TriangleList` topology.",369,{"inputs":[],"output":{"name":"inputassembly"}}],[11,"eq","","",370,null],[11,"ne","","",370,null],[11,"fmt","","",370,null],[11,"clone","","",370,null],[11,"into","","",370,null],[11,"supports_primitive_restart","","Returns true if this primitive topology supports using primitives restart.",370,null],[11,"fmt","","",371,null],[11,"clone","","",371,null],[0,"multisample","vulkano::pipeline","State of multisampling.",null,null],[3,"Multisample","vulkano::pipeline::multisample","State of the multisampling.",null,null],[12,"rasterization_samples","","",373,null],[12,"sample_mask","","",373,null],[12,"sample_shading","","",373,null],[12,"alpha_to_coverage","","",373,null],[12,"alpha_to_one","","",373,null],[11,"disabled","","",373,{"inputs":[],"output":{"name":"multisample"}}],[0,"raster","vulkano::pipeline","Stage when triangles are turned into pixels.",null,null],[3,"Rasterization","vulkano::pipeline::raster","State of the rasterizer.",null,null],[12,"depth_clamp","","If true, then the depth value of the vertices will be clamped to [0.0 ; 1.0]. If false,\nfragments whose depth is outside of this range will be discarded.",374,null],[12,"rasterizer_discard","","If true, all the fragments will be discarded. This is usually used when your vertex shader\nhas some side effects and you don&#39;t need to run the fragment shader.",374,null],[12,"polygon_mode","","This setting can ask the rasterizer to downgrade triangles into lines or points, or lines\ninto points.",374,null],[12,"cull_mode","","Specifies whether front faces or back faces should be discarded, or none, or both.",374,null],[12,"front_face","","Specifies which triangle orientation corresponds to the front or the triangle.",374,null],[12,"line_width","","Width, in pixels, of lines when drawing lines.",374,null],[12,"depth_bias","","",374,null],[3,"DepthBias","","",null,null],[12,"constant_factor","","",375,null],[12,"clamp","","Requires the `depth_bias_clamp` feature to be enabled.",375,null],[12,"slope_factor","","",375,null],[4,"DepthBiasControl","","",null,null],[13,"Disabled","","",376,null],[13,"Dynamic","","",376,null],[13,"Static","","",376,null],[4,"CullMode","","Specifies the culling mode.",null,null],[13,"None","","No culling.",377,null],[13,"Front","","The faces facing the front of the screen (ie. facing the user) will be removed.",377,null],[13,"Back","","The faces facing the back of the screen will be removed.",377,null],[13,"FrontAndBack","","All faces will be removed.",377,null],[4,"FrontFace","","Specifies which triangle orientation corresponds to the front or the triangle.",null,null],[13,"CounterClockwise","","Triangles whose vertices are oriented counter-clockwise on the screen will be considered\nas facing their front. Otherwise they will be considered as facing their back.",378,null],[13,"Clockwise","","Triangles whose vertices are oriented clockwise on the screen will be considered\nas facing their front. Otherwise they will be considered as facing their back.",378,null],[4,"PolygonMode","","",null,null],[13,"Fill","","",379,null],[13,"Line","","",379,null],[13,"Point","","",379,null],[11,"fmt","","",374,null],[11,"clone","","",374,null],[11,"default","","",374,{"inputs":[],"output":{"name":"rasterization"}}],[11,"fmt","","",376,null],[11,"clone","","",376,null],[11,"is_dynamic","","",376,null],[11,"fmt","","",375,null],[11,"clone","","",375,null],[11,"fmt","","",377,null],[11,"clone","","",377,null],[11,"default","","",377,{"inputs":[],"output":{"name":"cullmode"}}],[11,"fmt","","",378,null],[11,"clone","","",378,null],[11,"default","","",378,{"inputs":[],"output":{"name":"frontface"}}],[11,"eq","","",379,null],[11,"fmt","","",379,null],[11,"clone","","",379,null],[11,"default","","",379,{"inputs":[],"output":{"name":"polygonmode"}}],[0,"shader","vulkano::pipeline","Stage of a graphics pipeline.",null,null],[3,"ShaderModule","vulkano::pipeline::shader","Contains SPIR-V code with one or more entry points.",null,null],[3,"VertexShaderEntryPoint","","Represents the entry point of a vertex shader in a shader module.",null,null],[3,"TessControlShaderEntryPoint","","Represents the entry point of a tessellation control shader in a shader module.",null,null],[3,"TessEvaluationShaderEntryPoint","","Represents the entry point of a tessellation evaluation shader in a shader module.",null,null],[3,"GeometryShaderEntryPoint","","Represents the entry point of a geometry shader in a shader module.",null,null],[3,"FragmentShaderEntryPoint","","Represents the entry point of a fragment shader in a shader module.",null,null],[3,"ComputeShaderEntryPoint","","Represents the entry point of a compute shader in a shader module.",null,null],[3,"ShaderInterfaceDefEntry","","Entry of a shader interface definition.",null,null],[12,"location","","Range of locations covered by the element.",380,null],[12,"format","","Format of a each location of the element.",380,null],[12,"name","","Name of the element, or `None` if the name is unknown.",380,null],[3,"EmptyShaderInterfaceDef","","Description of an empty shader interface.",null,null],[3,"SpecializationMapEntry","","Describes an indiviual constant to set in the shader. Also a field in the struct.",null,null],[12,"constant_id","","Identifier of the constant in the shader that corresponds to this field.",381,null],[12,"offset","","Offset within this struct for the data.",381,null],[12,"size","","Size of the data in bytes.",381,null],[4,"ShaderInterfaceMismatchError","","Error that can happen when the interface mismatches between two shader stages.",null,null],[13,"ElementsCountMismatch","","",382,null],[13,"MissingElement","","",382,null],[12,"location","vulkano::pipeline::shader::ShaderInterfaceMismatchError","",382,null],[13,"FormatMismatch","vulkano::pipeline::shader","",382,null],[8,"ShaderInterfaceDef","","Types that contain the definition of an interface between two shader stages, or between\nthe outside and a shader stage.",null,null],[16,"Iter","","Iterator returned by `elements`.",383,null],[10,"elements","","Iterates over the elements of the interface.",383,null],[8,"ShaderInterfaceDefMatch","","Extension trait for `ShaderInterfaceDef` that specifies that the interface is potentially\ncompatible with another one.",null,null],[10,"matches","","Returns `Ok` if the two definitions match.",384,null],[8,"SpecializationConstants","","Trait for types that contain specialization data for shaders.",null,null],[10,"descriptors","","Returns descriptors of the struct&#39;s layout.",385,null],[11,"fmt","","",386,null],[11,"new","","Builds a new shader module from SPIR-V.",386,null],[11,"vertex_shader_entry_point","","Gets access to an entry point contained in this module.",386,null],[11,"tess_control_shader_entry_point","","Gets access to an entry point contained in this module.",386,null],[11,"tess_evaluation_shader_entry_point","","Gets access to an entry point contained in this module.",386,null],[11,"geometry_shader_entry_point","","Gets access to an entry point contained in this module.",386,null],[11,"fragment_shader_entry_point","","Gets access to an entry point contained in this module.",386,null],[11,"compute_shader_entry_point","","Gets access to an entry point contained in this module.",386,null],[11,"internal_object","","",386,null],[11,"drop","","",386,null],[11,"clone","","",387,null],[11,"fmt","","",387,null],[11,"module","","Returns the module this entry point comes from.",387,null],[11,"name","","Returns the name of the entry point.",387,null],[11,"layout","","Returns the pipeline layout used by the shader stage.",387,null],[11,"input_definition","","Returns the input attributes used by the shader stage.",387,null],[11,"output","","Returns the output attributes used by the shader stage.",387,null],[11,"clone","","",388,null],[11,"fmt","","",388,null],[11,"module","","Returns the module this entry point comes from.",388,null],[11,"name","","Returns the name of the entry point.",388,null],[11,"layout","","Returns the pipeline layout used by the shader stage.",388,null],[11,"input","","Returns the input attributes used by the shader stage.",388,null],[11,"output","","Returns the output attributes used by the shader stage.",388,null],[11,"clone","","",389,null],[11,"fmt","","",389,null],[11,"module","","Returns the module this entry point comes from.",389,null],[11,"name","","Returns the name of the entry point.",389,null],[11,"layout","","Returns the pipeline layout used by the shader stage.",389,null],[11,"input","","Returns the input attributes used by the shader stage.",389,null],[11,"output","","Returns the output attributes used by the shader stage.",389,null],[11,"clone","","",390,null],[11,"fmt","","",390,null],[11,"module","","Returns the module this entry point comes from.",390,null],[11,"name","","Returns the name of the entry point.",390,null],[11,"primitives","","Returns the kind of primitives expected by the geometry shader.",390,null],[11,"layout","","Returns the pipeline layout used by the shader stage.",390,null],[11,"input","","Returns the input attributes used by the shader stage.",390,null],[11,"output","","Returns the output attributes used by the shader stage.",390,null],[11,"clone","","",391,null],[11,"fmt","","",391,null],[11,"module","","Returns the module this entry point comes from.",391,null],[11,"name","","Returns the name of the entry point.",391,null],[11,"layout","","Returns the pipeline layout used by the shader stage.",391,null],[11,"input","","Returns the input attributes used by the shader stage.",391,null],[11,"output","","Returns the output attributes used by the shader stage.",391,null],[11,"clone","","",392,null],[11,"fmt","","",392,null],[11,"module","","Returns the module this entry point comes from.",392,null],[11,"name","","Returns the name of the entry point.",392,null],[11,"layout","","Returns the pipeline layout used by the shader stage.",392,null],[11,"clone","","",380,null],[11,"fmt","","",380,null],[11,"clone","","",393,null],[11,"fmt","","",393,null],[11,"elements","","",393,null],[11,"eq","","",382,null],[11,"ne","","",382,null],[11,"fmt","","",382,null],[11,"clone","","",382,null],[11,"description","","",382,null],[11,"fmt","","",382,null],[0,"vertex","vulkano::pipeline","# Vertex sources definition",null,null],[3,"VertexMemberInfo","vulkano::pipeline::vertex","Information about a member of a vertex struct.",null,null],[12,"offset","","Offset of the member in bytes from the start of the struct.",394,null],[12,"ty","","Type of data. This is used to check that the interface is matching.",394,null],[12,"array_size","","Number of consecutive elements of that type.",394,null],[3,"AttributeInfo","","Information about a single attribute within a vertex.\nTODO: change that API",null,null],[12,"offset","","Number of bytes between the start of a vertex and the location of attribute.",395,null],[12,"format","","VertexMember type of the attribute.",395,null],[3,"SingleBufferDefinition","","Implementation of `Definition` for a single vertex buffer.",null,null],[12,"0","","",396,null],[3,"TwoBuffersDefinition","","Unstable.",null,null],[12,"0","","",397,null],[3,"OneVertexOneInstanceDefinition","","Unstable.",null,null],[12,"0","","",398,null],[4,"InputRate","","How the vertex source should be unrolled.",null,null],[13,"Vertex","","Each element of the source corresponds to a vertex.",399,null],[13,"Instance","","Each element of the source corresponds to an instance.",399,null],[4,"VertexMemberTy","","Type of a member of a vertex struct.",null,null],[13,"I8","","",400,null],[13,"U8","","",400,null],[13,"I16","","",400,null],[13,"U16","","",400,null],[13,"I32","","",400,null],[13,"U32","","",400,null],[13,"F32","","",400,null],[13,"F64","","",400,null],[4,"IncompatibleVertexDefinitionError","","Error that can happen when the vertex definition doesn&#39;t match the input of the vertex shader.",null,null],[13,"MissingAttribute","","An attribute of the vertex shader is missing in the vertex source.",401,null],[12,"attribute","vulkano::pipeline::vertex::IncompatibleVertexDefinitionError","Name of the missing attribute.",401,null],[13,"FormatMismatch","vulkano::pipeline::vertex","The format of an attribute does not match.",401,null],[12,"attribute","vulkano::pipeline::vertex::IncompatibleVertexDefinitionError","Name of the attribute.",401,null],[12,"shader","","The format in the vertex shader.",401,null],[12,"definition","","The format in the vertex definition.",401,null],[8,"Vertex","vulkano::pipeline::vertex","Describes an individual `Vertex`. In other words a collection of attributes that can be read\nfrom a vertex shader.",null,null],[10,"member","","Returns the characteristics of a vertex member by its name.",402,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[8,"Definition","","Trait for types that describe the definition of the vertex input used by a graphics pipeline.",null,null],[16,"BuffersIter","","Iterator that returns the offset, the stride (in bytes) and input rate of each buffer.",403,null],[16,"AttribsIter","","Iterator that returns the attribute location, buffer id, and infos.",403,null],[10,"definition","","Builds the vertex definition to use to link this definition to a vertex shader&#39;s input\ninterface.",403,null],[8,"Source","","Extension trait of `Definition`. The `L` parameter is an acceptable vertex source for this\nvertex definition.",null,null],[16,"Iter","","Iterator used by `decode`.",404,null],[10,"decode","","Checks and returns the list of buffers, number of vertices and number of instances.",404,null],[8,"VertexMember","","Trait for data types that can be used as vertex members. Used by the `impl_vertex!` macro.",null,null],[10,"format","","Returns the format and array size of the member.",405,null],[11,"fmt","","",399,null],[11,"clone","","",399,null],[11,"eq","","",400,null],[11,"clone","","",400,null],[11,"fmt","","",400,null],[11,"matches","","Returns true if a combination of `(type, array_size)` matches a format.",400,null],[11,"eq","","",401,null],[11,"ne","","",401,null],[11,"fmt","","",401,null],[11,"clone","","",401,null],[11,"description","","",401,null],[11,"fmt","","",401,null],[11,"new","","",396,{"inputs":[],"output":{"name":"singlebufferdefinition"}}],[11,"definition","","",396,null],[11,"decode","","",396,null],[11,"new","","",397,{"inputs":[],"output":{"name":"twobuffersdefinition"}}],[11,"definition","","",397,null],[11,"decode","","",397,null],[11,"new","","",398,{"inputs":[],"output":{"name":"onevertexoneinstancedefinition"}}],[11,"definition","","",398,null],[11,"decode","","",398,null],[0,"viewport","vulkano::pipeline","Viewports and scissor boxes.",null,null],[3,"Viewport","vulkano::pipeline::viewport","State of a single viewport.",null,null],[12,"origin","","Coordinates in pixels of the top-left hand corner of the viewport.",406,null],[12,"dimensions","","Dimensions in pixels of the viewport.",406,null],[12,"depth_range","","Minimum and maximum values of the depth.",406,null],[3,"Scissor","","State of a single scissor box.",null,null],[12,"origin","","Coordinates in pixels of the top-left hand corner of the box.",407,null],[12,"dimensions","","Dimensions in pixels of the box.",407,null],[4,"ViewportsState","","List of viewports and scissors that are used when creating a graphics pipeline object.",null,null],[13,"Fixed","","The state is known in advance.",408,null],[12,"data","vulkano::pipeline::viewport::ViewportsState","State of the viewports and scissors.",408,null],[13,"DynamicViewports","vulkano::pipeline::viewport","The state of scissors is known in advance, but the state of viewports is dynamic and will\nbet set when drawing.",408,null],[12,"scissors","vulkano::pipeline::viewport::ViewportsState","State of the scissors.",408,null],[13,"DynamicScissors","vulkano::pipeline::viewport","The state of viewports is known in advance, but the state of scissors is dynamic and will\nbet set when drawing.",408,null],[12,"viewports","vulkano::pipeline::viewport::ViewportsState","State of the viewports",408,null],[13,"Dynamic","vulkano::pipeline::viewport","The state of both the viewports and scissors is dynamic and will be set when drawing.",408,null],[12,"num","vulkano::pipeline::viewport::ViewportsState","Number of viewports and scissors.",408,null],[11,"clone","vulkano::pipeline::viewport","",408,null],[11,"fmt","","",408,null],[11,"dynamic_viewports","","Returns true if the state of the viewports is dynamic.",408,null],[11,"dynamic_scissors","","Returns true if the state of the scissors is dynamic.",408,null],[11,"num_viewports","","Returns the number of viewports and scissors.",408,null],[11,"clone","","",406,null],[11,"fmt","","",406,null],[11,"clone","","",407,null],[11,"fmt","","",407,null],[11,"irrelevant","","Defines a scissor box that it outside of the image.",407,{"inputs":[],"output":{"name":"scissor"}}],[11,"default","","",407,{"inputs":[],"output":{"name":"scissor"}}],[0,"query","vulkano","This module provides support for query pools.",null,null],[3,"OcclusionQueriesPool","vulkano::query","",null,null],[11,"raw","","See the docs of new().",409,{"inputs":[{"name":"arc"},{"name":"u32"}],"output":{"name":"result"}}],[11,"new","","Builds a new query pool.",409,{"inputs":[{"name":"arc"},{"name":"u32"}],"output":{"name":"arc"}}],[11,"num_slots","","Returns the number of slots of that query pool.",409,null],[11,"device","","Returns the device that was used to create this pool.",409,null],[11,"drop","","",409,null],[0,"sampler","vulkano","How to retrieve data from an image within a shader.",null,null],[3,"Sampler","vulkano::sampler","Describes how to retrieve data from an image within a shader.",null,null],[4,"Filter","","Describes how the color of each pixel should be determined.",null,null],[13,"Linear","","The four pixels whose center surround the requested coordinates are taken, then their\nvalues are interpolated.",410,null],[13,"Nearest","","The pixel whose center is nearest to the requested coordinates is taken from the source\nand its value is returned as-is.",410,null],[4,"MipmapMode","","Describes which mipmap from the source to use.",null,null],[13,"Nearest","","Use the mipmap whose dimensions are the nearest to the dimensions of the destination.",411,null],[13,"Linear","","Take the two mipmaps whose dimensions are immediately inferior and superior to the\ndimensions of the destination, calculate the value for both, and interpolate them.",411,null],[4,"SamplerAddressMode","","How the sampler should behave when it needs to access a pixel that is out of range of the\ntexture.",null,null],[13,"Repeat","","Repeat the texture. In other words, the pixel at coordinate `x + 1.0` is the same as the\none at coordinate `x`.",412,null],[13,"MirroredRepeat","","Repeat the texture but mirror it at every repetition. In other words, the pixel at\ncoordinate `x + 1.0` is the same as the one at coordinate `1.0 - x`.",412,null],[13,"ClampToEdge","","The coordinates are clamped to the valid range. Coordinates below 0.0 have the same value\nas coordinate 0.0. Coordinates over 1.0 have the same value as coordinate 1.0.",412,null],[13,"ClampToBorder","","Any pixel out of range is considered to be part of the &quot;border&quot; of the image, which has a\nspecific color of your choice.",412,null],[13,"MirrorClampToEdge","","Similar to `MirroredRepeat`, except that coordinates are clamped to the range\n`[-1.0, 1.0]`.",412,null],[4,"UnnormalizedSamplerAddressMode","","How the sampler should behave when it needs to access a pixel that is out of range of the\ntexture.",null,null],[13,"ClampToEdge","","The coordinates are clamped to the valid range. Coordinates below 0 have the same value\nas coordinate 0. Coordinates over *size of texture* have the same value as coordinate\n*size of texture*.",413,null],[13,"ClampToBorder","","Any pixel out of range is considered to be part of the &quot;border&quot; of the image, which has a\nspecific color of your choice.",413,null],[4,"BorderColor","","The color to use for the border of an image.",null,null],[13,"FloatTransparentBlack","","The value `(0.0, 0.0, 0.0, 0.0)`. Can only be used with floating-point images.",414,null],[13,"IntTransparentBlack","","The value `(0, 0, 0, 0)`. Can only be used with integer images.",414,null],[13,"FloatOpaqueBlack","","The value `(0.0, 0.0, 0.0, 1.0)`. Can only be used with floating-point identity-swizzled\nimages.",414,null],[13,"IntOpaqueBlack","","The value `(0, 0, 0, 1)`. Can only be used with integer identity-swizzled images.",414,null],[13,"FloatOpaqueWhite","","The value `(1.0, 1.0, 1.0, 1.0)`. Can only be used with floating-point images.",414,null],[13,"IntOpaqueWhite","","The value `(1, 1, 1, 1)`. Can only be used with integer images.",414,null],[4,"SamplerCreationError","","Error that can happen when creating an instance.",null,null],[13,"OomError","","Not enough memory.",415,null],[13,"TooManyObjects","","Too many sampler objects have been created. You must destroy some before creating new ones.\nNote the specs guarantee that at least 4000 samplers can exist simultaneously.",415,null],[13,"SamplerAnisotropyFeatureNotEnabled","","Using an anisotropy superior to 1.0 requires enabling the `sampler_anisotropy` feature when\ncreating the device.",415,null],[13,"AnisotropyLimitExceeded","","The requested anisotropy level exceeds the device&#39;s limits.",415,null],[12,"requested","vulkano::sampler::SamplerCreationError","The value that was requested.",415,null],[12,"maximum","","The maximum supported value.",415,null],[13,"MipLodBiasLimitExceeded","vulkano::sampler","The requested mip lod bias exceeds the device&#39;s limits.",415,null],[12,"requested","vulkano::sampler::SamplerCreationError","The value that was requested.",415,null],[12,"maximum","","The maximum supported value.",415,null],[11,"simple_repeat_linear","vulkano::sampler","Shortcut for creating a sampler with linear sampling, linear mipmaps, and with the repeat\nmode for borders.",416,{"inputs":[{"name":"arc"}],"output":{"name":"arc"}}],[11,"simple_repeat_linear_no_mipmap","","Shortcut for creating a sampler with linear sampling, that only uses the main level of\nimages, and with the repeat mode for borders.",416,{"inputs":[{"name":"arc"}],"output":{"name":"arc"}}],[11,"new","","Creates a new `Sampler` with the given behavior.",416,{"inputs":[{"name":"arc"},{"name":"filter"},{"name":"filter"},{"name":"mipmapmode"},{"name":"sampleraddressmode"},{"name":"sampleraddressmode"},{"name":"sampleraddressmode"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"result"}}],[11,"compare","","Creates a new `Sampler` with the given behavior.",416,{"inputs":[{"name":"arc"},{"name":"filter"},{"name":"filter"},{"name":"mipmapmode"},{"name":"sampleraddressmode"},{"name":"sampleraddressmode"},{"name":"sampleraddressmode"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"compare"}],"output":{"name":"result"}}],[11,"unnormalized","","Creates a sampler with unnormalized coordinates. This means that texture coordinates won&#39;t\nrange between `0.0` and `1.0` but use plain pixel offsets.",416,{"inputs":[{"name":"arc"},{"name":"filter"},{"name":"unnormalizedsampleraddressmode"},{"name":"unnormalizedsampleraddressmode"}],"output":{"name":"result"}}],[11,"compare_mode","","Returns true if the sampler is a compare-mode sampler.",416,null],[11,"is_unnormalized","","Returns true if the sampler is unnormalized.",416,null],[11,"usable_with_float_formats","","Returns true if the sampler can be used with floating-point image views. See the\ndocumentation of the `sampler` module for more info.",416,null],[11,"usable_with_int_formats","","Returns true if the sampler can be used with integer image views. See the documentation of\nthe `sampler` module for more info.",416,null],[11,"usable_with_swizzling","","Returns true if the sampler can be used with image views that have non-identity swizzling.\nSee the documentation of the `sampler` module for more info.",416,null],[11,"internal_object","","",416,null],[11,"drop","","",416,null],[11,"hash","","",410,null],[11,"eq","","",410,null],[11,"clone","","",410,null],[11,"fmt","","",410,null],[11,"hash","","",411,null],[11,"eq","","",411,null],[11,"clone","","",411,null],[11,"fmt","","",411,null],[11,"hash","","",412,null],[11,"eq","","",412,null],[11,"ne","","",412,null],[11,"clone","","",412,null],[11,"fmt","","",412,null],[11,"hash","","",413,null],[11,"eq","","",413,null],[11,"ne","","",413,null],[11,"clone","","",413,null],[11,"fmt","","",413,null],[11,"hash","","",414,null],[11,"eq","","",414,null],[11,"clone","","",414,null],[11,"fmt","","",414,null],[11,"eq","","",415,null],[11,"ne","","",415,null],[11,"fmt","","",415,null],[11,"clone","","",415,null],[11,"description","","",415,null],[11,"cause","","",415,null],[11,"fmt","","",415,null],[11,"from","","",415,{"inputs":[{"name":"oomerror"}],"output":{"name":"samplercreationerror"}}],[11,"from","","",415,{"inputs":[{"name":"error"}],"output":{"name":"samplercreationerror"}}],[0,"swapchain","vulkano","Link between Vulkan and a window and/or the screen.",null,null],[3,"Capabilities","vulkano::swapchain","The capabilities of a surface when used by a physical device.",null,null],[12,"min_image_count","","Minimum number of images that must be present in the swapchain.",417,null],[12,"max_image_count","","Maximum number of images that must be present in the swapchain, or `None` if there is no\nmaximum value. Note that &quot;no maximum&quot; doesn&#39;t mean that you can set a very high value, as\nyou may still get out of memory errors.",417,null],[12,"current_extent","","The current dimensions of the surface. `None` means that the surface&#39;s dimensions will\ndepend on the dimensions of the swapchain that you are going to create.",417,null],[12,"min_image_extent","","Minimum width and height of a swapchain that uses this surface.",417,null],[12,"max_image_extent","","Maximum width and height of a swapchain that uses this surface.",417,null],[12,"max_image_array_layers","","Maximum number of image layers if you create an image array. The minimum is 1.",417,null],[12,"supported_transforms","","List of transforms supported for the swapchain.",417,null],[12,"current_transform","","Current transform used by the surface.",417,null],[12,"supported_composite_alpha","","List of composite alpha modes supports for the swapchain.",417,null],[12,"supported_usage_flags","","List of image usages that are supported for images of the swapchain. Only\nthe `color_attachment` usage is guaranteed to be supported.",417,null],[12,"supported_formats","","List of formats supported for the swapchain.",417,null],[12,"present_modes","","List of present modes that are supported. `Fifo` is always guaranteed to be supported.",417,null],[3,"Surface","","Represents a surface on the screen.",null,null],[3,"Swapchain","","Contains the swapping system and the images that can be shown on a surface.",null,null],[4,"PresentMode","","The way presenting a swapchain is accomplished.",null,null],[13,"Immediate","","Immediately shows the image to the user. May result in visible tearing.",418,null],[13,"Mailbox","","The action of presenting an image puts it in wait. When the next vertical blanking period\nhappens, the waiting image is effectively shown to the user. If an image is presented while\nanother one is waiting, it is replaced.",418,null],[13,"Fifo","","The action of presenting an image adds it to a queue of images. At each vertical blanking\nperiod, the queue is poped and an image is presented.",418,null],[13,"Relaxed","","Same as `Fifo`, except that if the queue was empty during the previous vertical blanking\nperiod then it is equivalent to `Immediate`.",418,null],[4,"SurfaceTransform","","A transformation to apply to the image before showing it on the screen.",null,null],[13,"Identity","","Don&#39;t transform the image.",419,null],[13,"Rotate90","","Rotate 90 degrees.",419,null],[13,"Rotate180","","Rotate 180 degrees.",419,null],[13,"Rotate270","","Rotate 270 degrees.",419,null],[13,"HorizontalMirror","","Mirror the image horizontally.",419,null],[13,"HorizontalMirrorRotate90","","Mirror the image horizontally and rotate 90 degrees.",419,null],[13,"HorizontalMirrorRotate180","","Mirror the image horizontally and rotate 180 degrees.",419,null],[13,"HorizontalMirrorRotate270","","Mirror the image horizontally and rotate 270 degrees.",419,null],[13,"Inherit","","Let the operating system or driver implementation choose.",419,null],[4,"CompositeAlpha","","How the alpha values of the pixels of the window are treated.",null,null],[13,"Opaque","","The alpha channel of the image is ignored. All the pixels are considered as if they have a\nvalue of 1.0.",420,null],[13,"PreMultiplied","","The alpha channel of the image is respected. The color channels are expected to have\nalready been multiplied by the alpha value.",420,null],[13,"PostMultiplied","","The alpha channel of the image is respected. The color channels will be multiplied by the\nalpha value by the compositor before being added to what is behind.",420,null],[13,"Inherit","","Let the operating system or driver implementation choose.",420,null],[4,"ColorSpace","","How the presentation engine should interpret the data.",null,null],[13,"SrgbNonLinear","","Interpret it as sRGB.",421,null],[4,"SurfaceCreationError","","Error that can happen when creating a debug callback.",null,null],[13,"OomError","","Not enough memory.",422,null],[13,"MissingExtension","","The extension required for this function was not enabled.",422,null],[12,"name","vulkano::swapchain::SurfaceCreationError","Name of the missing extension.",422,null],[4,"AcquireError","vulkano::swapchain","Error that can happen when calling `acquire_next_image`.",null,null],[13,"OomError","","Not enough memory.",423,null],[13,"DeviceLost","","The connection to the device has been lost.",423,null],[13,"Timeout","","The timeout of the function has been reached before an image was available.",423,null],[13,"SurfaceLost","","The surface is no longer accessible and must be recreated.",423,null],[13,"OutOfDate","","The surface has changed in a way that makes the swapchain unusable. You must query the\nsurface&#39;s new properties and recreate a new swapchain if you want to continue drawing.",423,null],[4,"PresentError","","Error that can happen when calling `acquire_next_image`.",null,null],[13,"OomError","","Not enough memory.",424,null],[13,"DeviceLost","","The connection to the device has been lost.",424,null],[13,"SurfaceLost","","The surface is no longer accessible and must be recreated.",424,null],[13,"OutOfDate","","The surface has changed in a way that makes the swapchain unusable. You must query the\nsurface&#39;s new properties and recreate a new swapchain if you want to continue drawing.",424,null],[0,"display","","Allows you to create surfaces that fill a whole display, outside of the windowing system.",null,null],[3,"DisplayPlane","vulkano::swapchain::display","?",null,null],[3,"Display","","Represents a monitor connected to a physical device.",null,null],[3,"DisplayMode","","Represents a mode on a specific display.",null,null],[11,"enumerate_raw","","See the docs of enumerate().",425,{"inputs":[{"name":"physicaldevice"}],"output":{"name":"result"}}],[11,"enumerate","","Enumerates all the display planes that are available on a given physical device.",425,{"inputs":[{"name":"physicaldevice"}],"output":{"name":"intoiter"}}],[11,"physical_device","","Returns the physical device that was used to create this display.",425,null],[11,"supports","","Returns true if this plane supports the given display.",425,null],[11,"clone","","",426,null],[11,"enumerate_raw","","See the docs of enumerate().",426,{"inputs":[{"name":"physicaldevice"}],"output":{"name":"result"}}],[11,"enumerate","","Enumerates all the displays that are available on a given physical device.",426,{"inputs":[{"name":"physicaldevice"}],"output":{"name":"intoiter"}}],[11,"name","","Returns the name of the display.",426,null],[11,"physical_device","","Returns the physical device that was used to create this display.",426,null],[11,"physical_resolution","","Returns the physical resolution of the display.",426,null],[11,"display_modes_raw","","See the docs of display_modes().",426,null],[11,"display_modes","","Returns a list of all modes available on this display.",426,null],[11,"internal_object","","",426,null],[11,"display","","Returns the display corresponding to this mode.",427,null],[11,"visible_region","","Returns the dimensions of the region that is visible on the monitor.",427,null],[11,"refresh_rate","","Returns the refresh rate of this mode.",427,null],[11,"internal_object","","",427,null],[11,"fmt","vulkano::swapchain","",428,null],[11,"from_display_mode","","Creates a `Surface` that covers a display mode.",428,{"inputs":[{"name":"displaymode"},{"name":"displayplane"}],"output":{"name":"result"}}],[11,"from_hwnd","","Creates a `Surface` from a Win32 window.",428,null],[11,"from_xcb","","Creates a `Surface` from an XCB window.",428,null],[11,"from_xlib","","Creates a `Surface` from an Xlib window.",428,null],[11,"from_wayland","","Creates a `Surface` from a Wayland window.",428,null],[11,"from_mir","","Creates a `Surface` from a MIR window.",428,null],[11,"from_anativewindow","","Creates a `Surface` from an Android window.",428,null],[11,"is_supported","","Returns true if the given queue family can draw on this surface.",428,null],[11,"get_capabilities","","Retreives the capabilities of a surface when used by a certain device.",428,null],[11,"internal_object","","",428,null],[11,"drop","","",428,null],[11,"eq","","",422,null],[11,"ne","","",422,null],[11,"fmt","","",422,null],[11,"clone","","",422,null],[11,"description","","",422,null],[11,"cause","","",422,null],[11,"fmt","","",422,null],[11,"from","","",422,{"inputs":[{"name":"oomerror"}],"output":{"name":"surfacecreationerror"}}],[11,"from","","",422,{"inputs":[{"name":"error"}],"output":{"name":"surfacecreationerror"}}],[11,"fmt","","",417,null],[11,"clone","","",417,null],[11,"eq","","",418,null],[11,"fmt","","",418,null],[11,"clone","","",418,null],[11,"eq","","",419,null],[11,"fmt","","",419,null],[11,"clone","","",419,null],[11,"default","","",419,{"inputs":[],"output":{"name":"surfacetransform"}}],[11,"eq","","",420,null],[11,"fmt","","",420,null],[11,"clone","","",420,null],[11,"eq","","",421,null],[11,"fmt","","",421,null],[11,"clone","","",421,null],[11,"new","","Builds a new swapchain. Allocates images who content can be made visible on a surface.",429,null],[11,"acquire_next_image","","Tries to take ownership of an image in order to draw on it.",429,null],[11,"present","","Presents an image on the screen.",429,null],[11,"drop","","",429,null],[11,"eq","","",423,null],[11,"ne","","",423,null],[11,"fmt","","",423,null],[11,"clone","","",423,null],[11,"description","","",423,null],[11,"cause","","",423,null],[11,"fmt","","",423,null],[11,"from","","",423,{"inputs":[{"name":"error"}],"output":{"name":"acquireerror"}}],[11,"eq","","",424,null],[11,"ne","","",424,null],[11,"fmt","","",424,null],[11,"clone","","",424,null],[11,"description","","",424,null],[11,"cause","","",424,null],[11,"fmt","","",424,null],[11,"from","","",424,{"inputs":[{"name":"error"}],"output":{"name":"presenterror"}}],[0,"sync","vulkano","Synchronization primitives for Vulkan objects.",null,null],[3,"Event","vulkano::sync","Used to block the GPU execution until an event on the CPU occurs.",null,null],[3,"Fence","","A fence is used to know when a command buffer submission has finished its execution.",null,null],[3,"Semaphore","","Used to provide synchronization between command buffers during their execution.",null,null],[3,"PipelineStages","","",null,null],[12,"top_of_pipe","","",430,null],[12,"draw_indirect","","",430,null],[12,"vertex_input","","",430,null],[12,"vertex_shader","","",430,null],[12,"tessellation_control_shader","","",430,null],[12,"tessellation_evaluation_shader","","",430,null],[12,"geometry_shader","","",430,null],[12,"fragment_shader","","",430,null],[12,"early_fragment_tests","","",430,null],[12,"late_fragment_tests","","",430,null],[12,"color_attachment_output","","",430,null],[12,"compute_shader","","",430,null],[12,"transfer","","",430,null],[12,"bottom_of_pipe","","",430,null],[12,"host","","",430,null],[12,"all_graphics","","",430,null],[12,"all_commands","","",430,null],[3,"AccessFlagBits","","",null,null],[12,"indirect_command_read","","",431,null],[12,"index_read","","",431,null],[12,"vertex_attribute_read","","",431,null],[12,"uniform_read","","",431,null],[12,"input_attachment_read","","",431,null],[12,"shader_read","","",431,null],[12,"shader_write","","",431,null],[12,"color_attachment_read","","",431,null],[12,"color_attachment_write","","",431,null],[12,"depth_stencil_attachment_read","","",431,null],[12,"depth_stencil_attachment_write","","",431,null],[12,"transfer_read","","",431,null],[12,"transfer_write","","",431,null],[12,"host_read","","",431,null],[12,"host_write","","",431,null],[12,"memory_read","","",431,null],[12,"memory_write","","",431,null],[4,"FenceWaitError","","Error that can be returned when waiting on a fence.",null,null],[13,"OomError","","Not enough memory to complete the wait.",432,null],[13,"Timeout","","The specified timeout wasn&#39;t long enough.",432,null],[13,"DeviceLostError","","The device has been lost.",432,null],[4,"SharingMode","","Declares in which queue(s) a resource can be used.",null,null],[13,"Exclusive","","The resource is used is only one queue family.",433,null],[13,"Concurrent","","The resource is used in multiple queue families. Can be slower than `Exclusive`.",433,null],[4,"Sharing","","Declares in which queue(s) a resource can be used.",null,null],[13,"Exclusive","","The resource is used is only one queue family.",434,null],[13,"Concurrent","","The resource is used in multiple queue families. Can be slower than `Exclusive`.",434,null],[11,"fmt","","",435,null],[11,"raw","","See the docs of new().",435,{"inputs":[{"name":"arc"}],"output":{"name":"result"}}],[11,"new","","Builds a new event.",435,{"inputs":[{"name":"arc"}],"output":{"name":"arc"}}],[11,"signaled","","Returns true if the event is signaled.",435,null],[11,"set_raw","","See the docs of set().",435,null],[11,"set","","Changes the `Event` to the signaled state.",435,null],[11,"reset_raw","","See the docs of reset().",435,null],[11,"reset","","Changes the `Event` to the unsignaled state.",435,null],[11,"internal_object_guard","","",435,null],[11,"drop","","",435,null],[11,"fmt","","",436,null],[11,"raw","","See the docs of new().",436,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"new","","Builds a new fence.",436,{"inputs":[{"name":"d"}],"output":{"name":"arc"}}],[11,"signaled_raw","","See the docs of signaled().",436,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"signaled","","Builds a new fence already in the &quot;signaled&quot; state.",436,{"inputs":[{"name":"d"}],"output":{"name":"arc"}}],[11,"ready","","Returns true if the fence is signaled.",436,null],[11,"wait","","Waits until the fence is signaled, or at least until the number of nanoseconds of the\ntimeout has elapsed.",436,null],[11,"multi_wait","","Waits for multiple fences at once.",436,{"inputs":[{"name":"i"},{"name":"duration"}],"output":{"name":"result"}}],[11,"reset","","Resets the fence.",436,null],[11,"multi_reset","","Resets multiple fences at once.",436,{"inputs":[{"name":"i"}],"output":null}],[11,"internal_object","","",436,null],[11,"drop","","",436,null],[11,"eq","","",432,null],[11,"ne","","",432,null],[11,"fmt","","",432,null],[11,"clone","","",432,null],[11,"description","","",432,null],[11,"cause","","",432,null],[11,"fmt","","",432,null],[11,"from","","",432,{"inputs":[{"name":"error"}],"output":{"name":"fencewaiterror"}}],[11,"fmt","","",437,null],[11,"raw","","See the docs of new().",437,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"new","","Builds a new semaphore.",437,{"inputs":[{"name":"d"}],"output":{"name":"arc"}}],[11,"internal_object","","",437,null],[11,"drop","","",437,null],[8,"Resource","","Base trait for objects that can be used as resources and must be synchronized.",null,null],[10,"sharing_mode","","Returns in which queue family or families this resource can be used.",438,null],[11,"requires_fence","","Returns true if the `gpu_access` function should be passed a fence.",438,null],[11,"requires_semaphore","","Returns true if the `gpu_access` function should be passed a semaphore.",438,null],[11,"eq","","",433,null],[11,"ne","","",433,null],[11,"clone","","",433,null],[11,"fmt","","",433,null],[11,"from","","",433,{"inputs":[{"name":"arc"}],"output":{"name":"sharingmode"}}],[11,"from","","",433,null],[11,"eq","","",434,null],[11,"ne","","",434,null],[11,"clone","","",434,null],[11,"fmt","","",434,null],[11,"clone","","",430,null],[11,"fmt","","",430,null],[11,"none","","Builds an `PipelineStages` struct with none of the stages set.",430,{"inputs":[],"output":{"name":"pipelinestages"}}],[11,"clone","","",431,null],[11,"fmt","","",431,null],[11,"all","","Builds an `AccessFlagBits` struct with all bits set.",431,{"inputs":[],"output":{"name":"accessflagbits"}}],[11,"none","","Builds an `AccessFlagBits` struct with none of the bits set.",431,{"inputs":[],"output":{"name":"accessflagbits"}}],[8,"SafeDeref","vulkano","Alternative to the `Deref` trait. Contrary to `Deref`, must always return the same object.",null,null],[8,"VulkanObject","","Gives access to the internal identifier of an object.",null,null],[16,"Object","","The type of the object.",439,null],[10,"internal_object","","Returns a reference to the object.",439,null],[8,"SynchronizedVulkanObject","","Gives access to the internal identifier of an object.",null,null],[16,"Object","","The type of the object.",440,null],[10,"internal_object_guard","","Returns a reference to the object.",440,null],[11,"eq","","",0,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"description","","",0,null],[11,"fmt","","",0,null],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"oomerror"}}],[14,"buffer_slice_field!","","Takes a `BufferSlice` that points to a struct, and returns a `BufferSlice` that points to\na specific field of that struct.",null,null],[14,"pipeline_layout!","","Call this macro with the layout of a pipeline to generate some helper structs that wrap around\nvulkano&#39;s unsafe APIs.",null,null],[14,"single_pass_renderpass!","","Builds a `CustomRenderPass` object that provides a safe wrapper around `UnsafeRenderPass`.",null,null],[14,"ordered_passes_renderpass!","","Builds a `CustomRenderPass` object that provides a safe wrapper around `UnsafeRenderPass`.",null,null],[14,"impl_vertex!","","Implements the `Vertex` trait on a struct.",null,null],[11,"hash","vulkano::instance","",316,null],[11,"eq","","",316,null],[11,"ne","","",316,null],[11,"clone","","",316,null],[11,"fmt","","",316,null],[11,"none","","Builds a `Features` object with all values to false.",316,{"inputs":[],"output":{"name":"features"}}],[11,"superset_of","","Returns true if `self` is a superset of the parameter.",316,null],[11,"intersection","","Builds a `Features` that is the intersection of `self` and another `Features`\nobject.",316,null],[11,"num_subpasses","vulkano::framebuffer","Returns the number of subpasses within the render pass.",289,null],[11,"num_color_attachments","","Returns the number of color attachments in a subpass. Returns `None` if out of range.",289,null],[11,"num_samples","","Returns the number of samples of the attachments of a subpass. Returns `None` if out of\nrange or if the subpass has no attachment. TODO: return an enum instead?",289,null],[11,"has_depth_stencil_attachment","","Returns a tuple whose first element is `true` if there&#39;s a depth attachment, and whose\nsecond element is `true` if there&#39;s a stencil attachment. Returns `None` if out of range.",289,null],[11,"has_depth","","Returns true if a subpass has a depth attachment or a depth-stencil attachment.",289,null],[11,"has_writable_depth","","Returns true if a subpass has a depth attachment or a depth-stencil attachment whose\nlayout is not `DepthStencilReadOnlyOptimal`.",289,null],[11,"has_stencil","","Returns true if a subpass has a stencil attachment or a depth-stencil attachment.",289,null],[11,"has_writable_stencil","","Returns true if a subpass has a stencil attachment or a depth-stencil attachment whose\nlayout is not `DepthStencilReadOnlyOptimal`.",289,null]],"paths":[[4,"OomError"],[3,"CpuAccessibleBuffer"],[3,"ReadLock"],[3,"WriteLock"],[3,"DeviceLocalBuffer"],[3,"ImmutableBuffer"],[3,"SparseLevel"],[3,"Usage"],[4,"BufferCreationError"],[3,"UnsafeBuffer"],[3,"AccessRange"],[3,"GpuAccessResult"],[8,"Buffer"],[8,"TypedBuffer"],[4,"BufferViewCreationError"],[3,"BufferView"],[3,"BufferSlice"],[3,"DynamicState"],[3,"DrawIndirectCommand"],[3,"DrawIndexedIndirectCommand"],[3,"Submission"],[3,"PrimaryCommandBufferBuilder"],[3,"PrimaryCommandBufferBuilderInlineDraw"],[3,"PrimaryCommandBufferBuilderSecondaryDraw"],[3,"SecondaryGraphicsCommandBufferBuilder"],[3,"SecondaryComputeCommandBufferBuilder"],[3,"StandardCommandPool"],[3,"StandardCommandPoolFinished"],[3,"UnsafeCommandPool"],[3,"UnsafeCommandPoolAllocIter"],[8,"CommandPool"],[8,"CommandPoolFinished"],[3,"AllocatedCommandBuffer"],[3,"ImageSubresourcesRange"],[3,"BufferCopyRegion"],[4,"Kind"],[4,"Flags"],[3,"UnsafeCommandBufferBuilder"],[3,"PipelineBarrierBuilder"],[3,"DescriptorDesc"],[3,"DescriptorImageDesc"],[3,"DescriptorBufferDesc"],[3,"ShaderStages"],[4,"DescriptorDescTy"],[4,"DescriptorImageDescArray"],[4,"DescriptorImageDescDimensions"],[4,"DescriptorType"],[3,"DescriptorPool"],[3,"UnsafeDescriptorSet"],[3,"DescriptorWrite"],[3,"UnsafeDescriptorSetLayout"],[8,"DescriptorSetsCollection"],[8,"DescriptorSet"],[8,"DescriptorSetDesc"],[4,"UnsafePipelineLayoutCreationError"],[8,"ValidParameter"],[8,"DescriptorMarker"],[3,"UniformBuffer"],[3,"StorageBuffer"],[3,"UniformTexelBuffer"],[3,"StorageTexelBuffer"],[3,"CombinedImageSampler"],[3,"SampledImage"],[3,"StorageImage"],[3,"InputAttachment"],[3,"EmptyPipeline"],[3,"EmptyPipelineDesc"],[3,"UnsafePipelineLayout"],[8,"PipelineLayout"],[8,"PipelineLayoutDesc"],[8,"PipelineLayoutSuperset"],[8,"PipelineLayoutSetsCompatible"],[8,"PipelineLayoutPushConstantsCompatible"],[3,"DeviceExtensions"],[4,"DeviceCreationError"],[3,"Device"],[3,"QueuesIter"],[3,"Queue"],[4,"Format"],[4,"FormatTy"],[4,"ClearValue"],[8,"Data"],[8,"FormatDesc"],[8,"PossibleFloatFormatDesc"],[8,"PossibleUintFormatDesc"],[8,"PossibleSintFormatDesc"],[8,"PossibleDepthFormatDesc"],[8,"PossibleStencilFormatDesc"],[8,"PossibleDepthStencilFormatDesc"],[8,"PossibleCompressedFormatDesc"],[8,"PossibleFloatOrCompressedFormatDesc"],[8,"StrongStorage"],[8,"ClearValuesTuple"],[3,"R4G4UnormPack8"],[3,"R4G4B4A4UnormPack16"],[3,"B4G4R4A4UnormPack16"],[3,"R5G6B5UnormPack16"],[3,"B5G6R5UnormPack16"],[3,"R5G5B5A1UnormPack16"],[3,"B5G5R5A1UnormPack16"],[3,"A1R5G5B5UnormPack16"],[3,"R8Unorm"],[3,"R8Snorm"],[3,"R8Uscaled"],[3,"R8Sscaled"],[3,"R8Uint"],[3,"R8Sint"],[3,"R8Srgb"],[3,"R8G8Unorm"],[3,"R8G8Snorm"],[3,"R8G8Uscaled"],[3,"R8G8Sscaled"],[3,"R8G8Uint"],[3,"R8G8Sint"],[3,"R8G8Srgb"],[3,"R8G8B8Unorm"],[3,"R8G8B8Snorm"],[3,"R8G8B8Uscaled"],[3,"R8G8B8Sscaled"],[3,"R8G8B8Uint"],[3,"R8G8B8Sint"],[3,"R8G8B8Srgb"],[3,"B8G8R8Unorm"],[3,"B8G8R8Snorm"],[3,"B8G8R8Uscaled"],[3,"B8G8R8Sscaled"],[3,"B8G8R8Uint"],[3,"B8G8R8Sint"],[3,"B8G8R8Srgb"],[3,"R8G8B8A8Unorm"],[3,"R8G8B8A8Snorm"],[3,"R8G8B8A8Uscaled"],[3,"R8G8B8A8Sscaled"],[3,"R8G8B8A8Uint"],[3,"R8G8B8A8Sint"],[3,"R8G8B8A8Srgb"],[3,"B8G8R8A8Unorm"],[3,"B8G8R8A8Snorm"],[3,"B8G8R8A8Uscaled"],[3,"B8G8R8A8Sscaled"],[3,"B8G8R8A8Uint"],[3,"B8G8R8A8Sint"],[3,"B8G8R8A8Srgb"],[3,"A8B8G8R8UnormPack32"],[3,"A8B8G8R8SnormPack32"],[3,"A8B8G8R8UscaledPack32"],[3,"A8B8G8R8SscaledPack32"],[3,"A8B8G8R8UintPack32"],[3,"A8B8G8R8SintPack32"],[3,"A8B8G8R8SrgbPack32"],[3,"A2R10G10B10UnormPack32"],[3,"A2R10G10B10SnormPack32"],[3,"A2R10G10B10UscaledPack32"],[3,"A2R10G10B10SscaledPack32"],[3,"A2R10G10B10UintPack32"],[3,"A2R10G10B10SintPack32"],[3,"A2B10G10R10UnormPack32"],[3,"A2B10G10R10SnormPack32"],[3,"A2B10G10R10UscaledPack32"],[3,"A2B10G10R10SscaledPack32"],[3,"A2B10G10R10UintPack32"],[3,"A2B10G10R10SintPack32"],[3,"R16Unorm"],[3,"R16Snorm"],[3,"R16Uscaled"],[3,"R16Sscaled"],[3,"R16Uint"],[3,"R16Sint"],[3,"R16Sfloat"],[3,"R16G16Unorm"],[3,"R16G16Snorm"],[3,"R16G16Uscaled"],[3,"R16G16Sscaled"],[3,"R16G16Uint"],[3,"R16G16Sint"],[3,"R16G16Sfloat"],[3,"R16G16B16Unorm"],[3,"R16G16B16Snorm"],[3,"R16G16B16Uscaled"],[3,"R16G16B16Sscaled"],[3,"R16G16B16Uint"],[3,"R16G16B16Sint"],[3,"R16G16B16Sfloat"],[3,"R16G16B16A16Unorm"],[3,"R16G16B16A16Snorm"],[3,"R16G16B16A16Uscaled"],[3,"R16G16B16A16Sscaled"],[3,"R16G16B16A16Uint"],[3,"R16G16B16A16Sint"],[3,"R16G16B16A16Sfloat"],[3,"R32Uint"],[3,"R32Sint"],[3,"R32Sfloat"],[3,"R32G32Uint"],[3,"R32G32Sint"],[3,"R32G32Sfloat"],[3,"R32G32B32Uint"],[3,"R32G32B32Sint"],[3,"R32G32B32Sfloat"],[3,"R32G32B32A32Uint"],[3,"R32G32B32A32Sint"],[3,"R32G32B32A32Sfloat"],[3,"R64Uint"],[3,"R64Sint"],[3,"R64Sfloat"],[3,"R64G64Uint"],[3,"R64G64Sint"],[3,"R64G64Sfloat"],[3,"R64G64B64Uint"],[3,"R64G64B64Sint"],[3,"R64G64B64Sfloat"],[3,"R64G64B64A64Uint"],[3,"R64G64B64A64Sint"],[3,"R64G64B64A64Sfloat"],[3,"B10G11R11UfloatPack32"],[3,"E5B9G9R9UfloatPack32"],[3,"D16Unorm"],[3,"X8_D24UnormPack32"],[3,"D32Sfloat"],[3,"S8Uint"],[3,"D16Unorm_S8Uint"],[3,"D24Unorm_S8Uint"],[3,"D32Sfloat_S8Uint"],[3,"BC1_RGBUnormBlock"],[3,"BC1_RGBSrgbBlock"],[3,"BC1_RGBAUnormBlock"],[3,"BC1_RGBASrgbBlock"],[3,"BC2UnormBlock"],[3,"BC2SrgbBlock"],[3,"BC3UnormBlock"],[3,"BC3SrgbBlock"],[3,"BC4UnormBlock"],[3,"BC4SnormBlock"],[3,"BC5UnormBlock"],[3,"BC5SnormBlock"],[3,"BC6HUfloatBlock"],[3,"BC6HSfloatBlock"],[3,"BC7UnormBlock"],[3,"BC7SrgbBlock"],[3,"ETC2_R8G8B8UnormBlock"],[3,"ETC2_R8G8B8SrgbBlock"],[3,"ETC2_R8G8B8A1UnormBlock"],[3,"ETC2_R8G8B8A1SrgbBlock"],[3,"ETC2_R8G8B8A8UnormBlock"],[3,"ETC2_R8G8B8A8SrgbBlock"],[3,"EAC_R11UnormBlock"],[3,"EAC_R11SnormBlock"],[3,"EAC_R11G11UnormBlock"],[3,"EAC_R11G11SnormBlock"],[3,"ASTC_4x4UnormBlock"],[3,"ASTC_4x4SrgbBlock"],[3,"ASTC_5x4UnormBlock"],[3,"ASTC_5x4SrgbBlock"],[3,"ASTC_5x5UnormBlock"],[3,"ASTC_5x5SrgbBlock"],[3,"ASTC_6x5UnormBlock"],[3,"ASTC_6x5SrgbBlock"],[3,"ASTC_6x6UnormBlock"],[3,"ASTC_6x6SrgbBlock"],[3,"ASTC_8x5UnormBlock"],[3,"ASTC_8x5SrgbBlock"],[3,"ASTC_8x6UnormBlock"],[3,"ASTC_8x6SrgbBlock"],[3,"ASTC_8x8UnormBlock"],[3,"ASTC_8x8SrgbBlock"],[3,"ASTC_10x5UnormBlock"],[3,"ASTC_10x5SrgbBlock"],[3,"ASTC_10x6UnormBlock"],[3,"ASTC_10x6SrgbBlock"],[3,"ASTC_10x8UnormBlock"],[3,"ASTC_10x8SrgbBlock"],[3,"ASTC_10x10UnormBlock"],[3,"ASTC_10x10SrgbBlock"],[3,"ASTC_12x10UnormBlock"],[3,"ASTC_12x10SrgbBlock"],[3,"ASTC_12x12UnormBlock"],[3,"ASTC_12x12SrgbBlock"],[3,"LayoutAttachmentDescription"],[3,"LayoutPassDescription"],[3,"LayoutPassDependencyDescription"],[4,"FramebufferCreationError"],[4,"RenderPassCreationError"],[4,"StoreOp"],[4,"LoadOp"],[3,"EmptySinglePassRenderPass"],[3,"Framebuffer"],[3,"UnsafeRenderPass"],[3,"Subpass"],[8,"RenderPass"],[8,"RenderPassDesc"],[8,"RenderPassAttachmentsList"],[8,"RenderPassClearValues"],[8,"RenderPassCompatible"],[8,"RenderPassSubpassInterface"],[3,"Swizzle"],[4,"MipmapsCount"],[4,"ComponentSwizzle"],[3,"AttachmentImage"],[3,"ImmutableImage"],[3,"StorageImage"],[3,"SwapchainImage"],[3,"LinearLayout"],[3,"Usage"],[4,"ImageCreationError"],[4,"Dimensions"],[4,"Layout"],[3,"UnsafeImage"],[3,"UnsafeImageView"],[3,"AccessRange"],[3,"GpuAccessResult"],[3,"Transition"],[8,"Image"],[8,"ImageClearValue"],[8,"ImageContent"],[8,"ImageView"],[8,"AttachmentImageView"],[3,"Features"],[3,"InstanceExtensions"],[3,"ApplicationInfo"],[4,"InstanceCreationError"],[4,"PhysicalDeviceType"],[4,"LoadingError"],[3,"Message"],[3,"MessageTypes"],[4,"DebugCallbackCreationError"],[3,"DebugCallback"],[3,"Instance"],[3,"PhysicalDevice"],[3,"PhysicalDevicesIter"],[3,"QueueFamily"],[3,"QueueFamiliesIter"],[3,"MemoryType"],[3,"MemoryTypesIter"],[3,"MemoryHeap"],[3,"MemoryHeapsIter"],[3,"Limits"],[3,"LayerProperties"],[3,"LayersIterator"],[3,"MemoryRequirements"],[3,"DeviceMemory"],[3,"MappedDeviceMemory"],[3,"CpuAccess"],[4,"AllocLayout"],[3,"StdHostVisibleMemoryTypePool"],[3,"StdHostVisibleMemoryTypePoolAlloc"],[3,"StdNonHostVisibleMemoryTypePool"],[3,"StdNonHostVisibleMemoryTypePoolAlloc"],[3,"StdMemoryPool"],[3,"StdMemoryPoolAlloc"],[8,"MemoryPool"],[8,"MemoryPoolAlloc"],[8,"Content"],[3,"GraphicsPipelineParams"],[3,"GraphicsPipelineParamsTess"],[4,"GraphicsPipelineCreationError"],[3,"ComputePipeline"],[3,"GraphicsPipeline"],[3,"Blend"],[3,"AttachmentBlend"],[4,"AttachmentsBlend"],[4,"LogicOp"],[4,"BlendOp"],[4,"BlendFactor"],[3,"PipelineCache"],[3,"DepthStencil"],[3,"Stencil"],[4,"StencilOp"],[4,"DepthBounds"],[4,"Compare"],[3,"InputAssembly"],[4,"PrimitiveTopology"],[4,"IndexType"],[8,"Index"],[3,"Multisample"],[3,"Rasterization"],[3,"DepthBias"],[4,"DepthBiasControl"],[4,"CullMode"],[4,"FrontFace"],[4,"PolygonMode"],[3,"ShaderInterfaceDefEntry"],[3,"SpecializationMapEntry"],[4,"ShaderInterfaceMismatchError"],[8,"ShaderInterfaceDef"],[8,"ShaderInterfaceDefMatch"],[8,"SpecializationConstants"],[3,"ShaderModule"],[3,"VertexShaderEntryPoint"],[3,"TessControlShaderEntryPoint"],[3,"TessEvaluationShaderEntryPoint"],[3,"GeometryShaderEntryPoint"],[3,"FragmentShaderEntryPoint"],[3,"ComputeShaderEntryPoint"],[3,"EmptyShaderInterfaceDef"],[3,"VertexMemberInfo"],[3,"AttributeInfo"],[3,"SingleBufferDefinition"],[3,"TwoBuffersDefinition"],[3,"OneVertexOneInstanceDefinition"],[4,"InputRate"],[4,"VertexMemberTy"],[4,"IncompatibleVertexDefinitionError"],[8,"Vertex"],[8,"Definition"],[8,"Source"],[8,"VertexMember"],[3,"Viewport"],[3,"Scissor"],[4,"ViewportsState"],[3,"OcclusionQueriesPool"],[4,"Filter"],[4,"MipmapMode"],[4,"SamplerAddressMode"],[4,"UnnormalizedSamplerAddressMode"],[4,"BorderColor"],[4,"SamplerCreationError"],[3,"Sampler"],[3,"Capabilities"],[4,"PresentMode"],[4,"SurfaceTransform"],[4,"CompositeAlpha"],[4,"ColorSpace"],[4,"SurfaceCreationError"],[4,"AcquireError"],[4,"PresentError"],[3,"DisplayPlane"],[3,"Display"],[3,"DisplayMode"],[3,"Surface"],[3,"Swapchain"],[3,"PipelineStages"],[3,"AccessFlagBits"],[4,"FenceWaitError"],[4,"SharingMode"],[4,"Sharing"],[3,"Event"],[3,"Fence"],[3,"Semaphore"],[8,"Resource"],[8,"VulkanObject"],[8,"SynchronizedVulkanObject"]]};
searchIndex["shared_library"] = {"doc":"","items":[[4,"LoadingError","shared_library","Error that can happen while loading the shared library.",null,null],[13,"LibraryNotFound","","",0,null],[12,"descr","shared_library::LoadingError","",0,null],[13,"SymbolNotFound","shared_library","One of the symbols could not be found in the library.",0,null],[12,"symbol","shared_library::LoadingError","The symbol.",0,null],[0,"dynamic_library","shared_library","Dynamic library facilities.",null,null],[3,"DynamicLibrary","shared_library::dynamic_library","",null,null],[11,"drop","","",1,null],[11,"open","","Lazily open a dynamic library. When passed None it gives a\nhandle to the calling process",1,{"inputs":[{"name":"option"}],"output":{"name":"result"}}],[11,"prepend_search_path","","Prepends a path to this process&#39;s search path for dynamic libraries",1,{"inputs":[{"name":"path"}],"output":null}],[11,"create_path","","From a slice of paths, create a new vector which is suitable to be an\nenvironment variable for this platforms dylib search path.",1,null],[11,"envvar","","Returns the environment variable for this process&#39;s dynamic library\nsearch path",1,{"inputs":[],"output":{"name":"str"}}],[11,"search_path","","Returns the current search path for dynamic libraries being used by this\nprocess",1,{"inputs":[],"output":{"name":"vec"}}],[11,"symbol","","Access the value at the symbol of the dynamic library",1,null],[11,"clone","shared_library","",0,null],[11,"fmt","","",0,null],[14,"shared_library!","","",null,null]],"paths":[[4,"LoadingError"],[3,"DynamicLibrary"]]};
searchIndex["libc"] = {"doc":"Crate docs","items":[[3,"utimbuf","libc","",null,null],[12,"actime","","",0,null],[12,"modtime","","",0,null],[3,"timeval","","",null,null],[12,"tv_sec","","",1,null],[12,"tv_usec","","",1,null],[3,"timespec","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_nsec","","",2,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",3,null],[12,"rlim_max","","",3,null],[3,"rusage","","",null,null],[12,"ru_utime","","",4,null],[12,"ru_stime","","",4,null],[12,"ru_maxrss","","",4,null],[12,"ru_ixrss","","",4,null],[12,"ru_idrss","","",4,null],[12,"ru_isrss","","",4,null],[12,"ru_minflt","","",4,null],[12,"ru_majflt","","",4,null],[12,"ru_nswap","","",4,null],[12,"ru_inblock","","",4,null],[12,"ru_oublock","","",4,null],[12,"ru_msgsnd","","",4,null],[12,"ru_msgrcv","","",4,null],[12,"ru_nsignals","","",4,null],[12,"ru_nvcsw","","",4,null],[12,"ru_nivcsw","","",4,null],[3,"in_addr","","",null,null],[12,"s_addr","","",5,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",6,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",7,null],[12,"imr_interface","","",7,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",8,null],[12,"ipv6mr_interface","","",8,null],[3,"hostent","","",null,null],[12,"h_name","","",9,null],[12,"h_aliases","","",9,null],[12,"h_addrtype","","",9,null],[12,"h_length","","",9,null],[12,"h_addr_list","","",9,null],[3,"iovec","","",null,null],[12,"iov_base","","",10,null],[12,"iov_len","","",10,null],[3,"pollfd","","",null,null],[12,"fd","","",11,null],[12,"events","","",11,null],[12,"revents","","",11,null],[3,"winsize","","",null,null],[12,"ws_row","","",12,null],[12,"ws_col","","",12,null],[12,"ws_xpixel","","",12,null],[12,"ws_ypixel","","",12,null],[3,"linger","","",null,null],[12,"l_onoff","","",13,null],[12,"l_linger","","",13,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",14,null],[12,"sa_data","","",14,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",15,null],[12,"sin_port","","",15,null],[12,"sin_addr","","",15,null],[12,"sin_zero","","",15,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",16,null],[12,"sin6_port","","",16,null],[12,"sin6_flowinfo","","",16,null],[12,"sin6_addr","","",16,null],[12,"sin6_scope_id","","",16,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",17,null],[12,"sun_path","","",17,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",18,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",19,null],[12,"ai_family","","",19,null],[12,"ai_socktype","","",19,null],[12,"ai_protocol","","",19,null],[12,"ai_addrlen","","",19,null],[12,"ai_addr","","",19,null],[12,"ai_canonname","","",19,null],[12,"ai_next","","",19,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",20,null],[12,"nl_pid","","",20,null],[12,"nl_groups","","",20,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",21,null],[12,"sll_protocol","","",21,null],[12,"sll_ifindex","","",21,null],[12,"sll_hatype","","",21,null],[12,"sll_pkttype","","",21,null],[12,"sll_halen","","",21,null],[12,"sll_addr","","",21,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",22,null],[12,"tm_min","","",22,null],[12,"tm_hour","","",22,null],[12,"tm_mday","","",22,null],[12,"tm_mon","","",22,null],[12,"tm_year","","",22,null],[12,"tm_wday","","",22,null],[12,"tm_yday","","",22,null],[12,"tm_isdst","","",22,null],[12,"tm_gmtoff","","",22,null],[12,"tm_zone","","",22,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",23,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",24,null],[12,"dli_fbase","","",24,null],[12,"dli_sname","","",24,null],[12,"dli_saddr","","",24,null],[3,"epoll_event","","",null,null],[12,"events","","",25,null],[12,"u64","","",25,null],[3,"utsname","","",null,null],[12,"sysname","","",26,null],[12,"nodename","","",26,null],[12,"release","","",26,null],[12,"version","","",26,null],[12,"machine","","",26,null],[12,"domainname","","",26,null],[3,"lconv","","",null,null],[12,"decimal_point","","",27,null],[12,"thousands_sep","","",27,null],[12,"grouping","","",27,null],[12,"int_curr_symbol","","",27,null],[12,"currency_symbol","","",27,null],[12,"mon_decimal_point","","",27,null],[12,"mon_thousands_sep","","",27,null],[12,"mon_grouping","","",27,null],[12,"positive_sign","","",27,null],[12,"negative_sign","","",27,null],[12,"int_frac_digits","","",27,null],[12,"frac_digits","","",27,null],[12,"p_cs_precedes","","",27,null],[12,"p_sep_by_space","","",27,null],[12,"n_cs_precedes","","",27,null],[12,"n_sep_by_space","","",27,null],[12,"p_sign_posn","","",27,null],[12,"n_sign_posn","","",27,null],[12,"int_p_cs_precedes","","",27,null],[12,"int_p_sep_by_space","","",27,null],[12,"int_n_cs_precedes","","",27,null],[12,"int_n_sep_by_space","","",27,null],[12,"int_p_sign_posn","","",27,null],[12,"int_n_sign_posn","","",27,null],[3,"dirent","","",null,null],[12,"d_ino","","",28,null],[12,"d_off","","",28,null],[12,"d_reclen","","",28,null],[12,"d_type","","",28,null],[12,"d_name","","",28,null],[3,"dirent64","","",null,null],[12,"d_ino","","",29,null],[12,"d_off","","",29,null],[12,"d_reclen","","",29,null],[12,"d_type","","",29,null],[12,"d_name","","",29,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",30,null],[12,"rlim_max","","",30,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",31,null],[12,"gl_pathv","","",31,null],[12,"gl_offs","","",31,null],[12,"gl_flags","","",31,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",32,null],[12,"ifa_name","","",32,null],[12,"ifa_flags","","",32,null],[12,"ifa_addr","","",32,null],[12,"ifa_netmask","","",32,null],[12,"ifa_ifu","","",32,null],[12,"ifa_data","","",32,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"passwd","","",null,null],[12,"pw_name","","",33,null],[12,"pw_passwd","","",33,null],[12,"pw_uid","","",33,null],[12,"pw_gid","","",33,null],[12,"pw_gecos","","",33,null],[12,"pw_dir","","",33,null],[12,"pw_shell","","",33,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",34,null],[12,"f_frsize","","",34,null],[12,"f_blocks","","",34,null],[12,"f_bfree","","",34,null],[12,"f_bavail","","",34,null],[12,"f_files","","",34,null],[12,"f_ffree","","",34,null],[12,"f_favail","","",34,null],[12,"f_fsid","","",34,null],[12,"f_flag","","",34,null],[12,"f_namemax","","",34,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",35,null],[12,"dqb_bsoftlimit","","",35,null],[12,"dqb_curspace","","",35,null],[12,"dqb_ihardlimit","","",35,null],[12,"dqb_isoftlimit","","",35,null],[12,"dqb_curinodes","","",35,null],[12,"dqb_btime","","",35,null],[12,"dqb_itime","","",35,null],[12,"dqb_valid","","",35,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",36,null],[12,"ssi_errno","","",36,null],[12,"ssi_code","","",36,null],[12,"ssi_pid","","",36,null],[12,"ssi_uid","","",36,null],[12,"ssi_fd","","",36,null],[12,"ssi_tid","","",36,null],[12,"ssi_band","","",36,null],[12,"ssi_overrun","","",36,null],[12,"ssi_trapno","","",36,null],[12,"ssi_status","","",36,null],[12,"ssi_int","","",36,null],[12,"ssi_ptr","","",36,null],[12,"ssi_utime","","",36,null],[12,"ssi_stime","","",36,null],[12,"ssi_addr","","",36,null],[3,"fsid_t","","",null,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",37,null],[12,"mq_maxmsg","","",37,null],[12,"mq_msgsize","","",37,null],[12,"mq_curmsgs","","",37,null],[3,"cpu_set_t","","",null,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",38,null],[12,"sa_mask","","",38,null],[12,"sa_flags","","",38,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",39,null],[12,"ss_flags","","",39,null],[12,"ss_size","","",39,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",40,null],[12,"si_errno","","",40,null],[12,"si_code","","",40,null],[12,"_pad","","",40,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",41,null],[12,"gl_pathv","","",41,null],[12,"gl_offs","","",41,null],[12,"gl_flags","","",41,null],[3,"ucred","","",null,null],[12,"pid","","",42,null],[12,"uid","","",42,null],[12,"gid","","",42,null],[3,"statfs","","",null,null],[12,"f_type","","",43,null],[12,"f_bsize","","",43,null],[12,"f_blocks","","",43,null],[12,"f_bfree","","",43,null],[12,"f_bavail","","",43,null],[12,"f_files","","",43,null],[12,"f_ffree","","",43,null],[12,"f_fsid","","",43,null],[12,"f_namelen","","",43,null],[12,"f_frsize","","",43,null],[3,"msghdr","","",null,null],[12,"msg_name","","",44,null],[12,"msg_namelen","","",44,null],[12,"msg_iov","","",44,null],[12,"msg_iovlen","","",44,null],[12,"msg_control","","",44,null],[12,"msg_controllen","","",44,null],[12,"msg_flags","","",44,null],[3,"termios","","",null,null],[12,"c_iflag","","",45,null],[12,"c_oflag","","",45,null],[12,"c_cflag","","",45,null],[12,"c_lflag","","",45,null],[12,"c_line","","",45,null],[12,"c_cc","","",45,null],[12,"c_ispeed","","",45,null],[12,"c_ospeed","","",45,null],[3,"flock","","",null,null],[12,"l_type","","",46,null],[12,"l_whence","","",46,null],[12,"l_start","","",46,null],[12,"l_len","","",46,null],[12,"l_pid","","",46,null],[3,"ipc_perm","","",null,null],[12,"__key","","",47,null],[12,"uid","","",47,null],[12,"gid","","",47,null],[12,"cuid","","",47,null],[12,"cgid","","",47,null],[12,"mode","","",47,null],[12,"__seq","","",47,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",48,null],[12,"shm_segsz","","",48,null],[12,"shm_atime","","",48,null],[12,"shm_dtime","","",48,null],[12,"shm_ctime","","",48,null],[12,"shm_cpid","","",48,null],[12,"shm_lpid","","",48,null],[12,"shm_nattch","","",48,null],[3,"sem_t","","",null,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",49,null],[12,"loads","","",49,null],[12,"totalram","","",49,null],[12,"freeram","","",49,null],[12,"sharedram","","",49,null],[12,"bufferram","","",49,null],[12,"totalswap","","",49,null],[12,"freeswap","","",49,null],[12,"procs","","",49,null],[12,"pad","","",49,null],[12,"totalhigh","","",49,null],[12,"freehigh","","",49,null],[12,"mem_unit","","",49,null],[12,"_f","","",49,null],[3,"stat","","",null,null],[12,"st_dev","","",50,null],[12,"st_ino","","",50,null],[12,"st_nlink","","",50,null],[12,"st_mode","","",50,null],[12,"st_uid","","",50,null],[12,"st_gid","","",50,null],[12,"st_rdev","","",50,null],[12,"st_size","","",50,null],[12,"st_blksize","","",50,null],[12,"st_blocks","","",50,null],[12,"st_atime","","",50,null],[12,"st_atime_nsec","","",50,null],[12,"st_mtime","","",50,null],[12,"st_mtime_nsec","","",50,null],[12,"st_ctime","","",50,null],[12,"st_ctime_nsec","","",50,null],[3,"stat64","","",null,null],[12,"st_dev","","",51,null],[12,"st_ino","","",51,null],[12,"st_nlink","","",51,null],[12,"st_mode","","",51,null],[12,"st_uid","","",51,null],[12,"st_gid","","",51,null],[12,"st_rdev","","",51,null],[12,"st_size","","",51,null],[12,"st_blksize","","",51,null],[12,"st_blocks","","",51,null],[12,"st_atime","","",51,null],[12,"st_atime_nsec","","",51,null],[12,"st_mtime","","",51,null],[12,"st_mtime_nsec","","",51,null],[12,"st_ctime","","",51,null],[12,"st_ctime_nsec","","",51,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",52,null],[12,"exponent","","",52,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",53,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",54,null],[12,"swd","","",54,null],[12,"ftw","","",54,null],[12,"fop","","",54,null],[12,"rip","","",54,null],[12,"rdp","","",54,null],[12,"mxcsr","","",54,null],[12,"mxcr_mask","","",54,null],[12,"_st","","",54,null],[12,"_xmm","","",54,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",55,null],[12,"fpregs","","",55,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",56,null],[12,"uc_link","","",56,null],[12,"uc_stack","","",56,null],[12,"uc_mcontext","","",56,null],[12,"uc_sigmask","","",56,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"locale_t","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WIFSTOPPED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WSTOPSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFSIGNALED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WTERMSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFEXITED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WEXITSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WCOREDUMP","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"CPU_ZERO","","",null,null],[5,"CPU_SET","","",null,null],[5,"CPU_ISSET","","",null,{"inputs":[{"name":"usize"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"CPU_EQUAL","","",null,{"inputs":[{"name":"cpu_set_t"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memcmp","","",null,null],[5,"memchr","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"popen","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"getdtablesize","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_create","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"pthread_kill","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"sigaltstack","","",null,null],[5,"sigwait","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"mknod","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"uname","","",null,null],[5,"daemon","","",null,null],[5,"gethostname","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_open","","",null,null],[5,"sem_close","","",null,null],[5,"sem_unlink","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"sem_init","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"getsid","","",null,null],[5,"madvise","","",null,null],[5,"readlink","","",null,null],[5,"msync","","",null,null],[5,"sysconf","","",null,null],[5,"recvfrom","","",null,null],[5,"mkfifo","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"timegm","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkstemps","","",null,null],[5,"mkdtemp","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"getpwuid_r","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"prctl","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_create1","","",null,null],[5,"epoll_ctl","","",null,null],[5,"epoll_wait","","",null,null],[5,"pipe2","","",null,null],[5,"mount","","",null,null],[5,"umount","","",null,null],[5,"umount2","","",null,null],[5,"clone","","",null,null],[5,"statfs","","",null,null],[5,"fstatfs","","",null,null],[5,"memrchr","","",null,null],[5,"syscall","","",null,null],[5,"sendfile","","",null,null],[5,"splice","","",null,null],[5,"tee","","",null,null],[5,"vmsplice","","",null,null],[5,"posix_fadvise","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"getrlimit64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"pread64","","",null,null],[5,"pwrite64","","",null,null],[5,"readdir64_r","","",null,null],[5,"setrlimit64","","",null,null],[5,"stat64","","",null,null],[5,"eventfd","","",null,null],[5,"sysinfo","","",null,null],[5,"openat","","",null,null],[5,"faccessat","","",null,null],[5,"fchmodat","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"mkdirat","","",null,null],[5,"mknodat","","",null,null],[5,"readlinkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"posix_fallocate","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"unshare","","",null,null],[5,"sethostname","","",null,null],[5,"setns","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"getnameinfo","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"mkfifoat","","",null,null],[5,"sysctl","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"sched_getcpu","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[11,"clone","","",50,null],[11,"clone","","",51,null],[11,"clone","","",57,null],[11,"clone","","",52,null],[11,"clone","","",53,null],[11,"clone","","",54,null],[11,"clone","","",55,null],[11,"clone","","",56,null],[11,"clone","","",58,null],[11,"clone","","",49,null],[11,"clone","","",38,null],[11,"clone","","",39,null],[11,"clone","","",40,null],[11,"clone","","",41,null],[11,"clone","","",42,null],[11,"clone","","",43,null],[11,"clone","","",44,null],[11,"clone","","",45,null],[11,"clone","","",46,null],[11,"clone","","",47,null],[11,"clone","","",48,null],[11,"clone","","",59,null],[11,"clone","","",28,null],[11,"clone","","",29,null],[11,"clone","","",30,null],[11,"clone","","",31,null],[11,"clone","","",32,null],[11,"clone","","",60,null],[11,"clone","","",61,null],[11,"clone","","",62,null],[11,"clone","","",63,null],[11,"clone","","",33,null],[11,"clone","","",34,null],[11,"clone","","",35,null],[11,"clone","","",36,null],[11,"clone","","",64,null],[11,"clone","","",37,null],[11,"clone","","",65,null],[11,"clone","","",14,null],[11,"clone","","",15,null],[11,"clone","","",16,null],[11,"clone","","",17,null],[11,"clone","","",18,null],[11,"clone","","",19,null],[11,"clone","","",20,null],[11,"clone","","",21,null],[11,"clone","","",66,null],[11,"clone","","",22,null],[11,"clone","","",23,null],[11,"clone","","",24,null],[11,"clone","","",25,null],[11,"clone","","",26,null],[11,"clone","","",27,null],[11,"clone","","",0,null],[11,"clone","","",1,null],[11,"clone","","",2,null],[11,"clone","","",3,null],[11,"clone","","",4,null],[11,"clone","","",5,null],[11,"clone","","",6,null],[11,"clone","","",7,null],[11,"clone","","",8,null],[11,"clone","","",9,null],[11,"clone","","",10,null],[11,"clone","","",11,null],[11,"clone","","",12,null],[11,"clone","","",13,null],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"loff_t","","",null,null],[6,"clockid_t","","",null,null],[6,"id_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"pthread_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"key_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"mqd_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"__priority_which_t","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"AF_PACKET","","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"CBAUD","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR0","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF0","","",null,null],[17,"FF1","","",null,null],[17,"BS0","","",null,null],[17,"BS1","","",null,null],[17,"VT0","","",null,null],[17,"VT1","","",null,null],[17,"VERASE","","",null,null],[17,"VWERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VREPRINT","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VLNEXT","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS5","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHO","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"NCCS","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"VEOF","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"IUTF8","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"EXTPROC","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"SEEK_DATA","","",null,null],[17,"SEEK_HOLE","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"FIONREAD","","",null,null],[17,"TIOCCONS","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_perf_event_open","","",null,null]],"paths":[[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"passwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"mq_attr"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"sysinfo"],[3,"stat"],[3,"stat64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"sem_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"fd_set"]]};
searchIndex["vk_sys"] = {"doc":"","items":[[3,"ApplicationInfo","vk_sys","",null,null],[12,"sType","","",0,null],[12,"pNext","","",0,null],[12,"pApplicationName","","",0,null],[12,"applicationVersion","","",0,null],[12,"pEngineName","","",0,null],[12,"engineVersion","","",0,null],[12,"apiVersion","","",0,null],[3,"InstanceCreateInfo","","",null,null],[12,"sType","","",1,null],[12,"pNext","","",1,null],[12,"flags","","",1,null],[12,"pApplicationInfo","","",1,null],[12,"enabledLayerCount","","",1,null],[12,"ppEnabledLayerNames","","",1,null],[12,"enabledExtensionCount","","",1,null],[12,"ppEnabledExtensionNames","","",1,null],[3,"AllocationCallbacks","","",null,null],[12,"pUserData","","",2,null],[12,"pfnAllocation","","",2,null],[12,"pfnReallocation","","",2,null],[12,"pfnFree","","",2,null],[12,"pfnInternalAllocation","","",2,null],[12,"pfnInternalFree","","",2,null],[3,"PhysicalDeviceFeatures","","",null,null],[12,"robustBufferAccess","","",3,null],[12,"fullDrawIndexUint32","","",3,null],[12,"imageCubeArray","","",3,null],[12,"independentBlend","","",3,null],[12,"geometryShader","","",3,null],[12,"tessellationShader","","",3,null],[12,"sampleRateShading","","",3,null],[12,"dualSrcBlend","","",3,null],[12,"logicOp","","",3,null],[12,"multiDrawIndirect","","",3,null],[12,"drawIndirectFirstInstance","","",3,null],[12,"depthClamp","","",3,null],[12,"depthBiasClamp","","",3,null],[12,"fillModeNonSolid","","",3,null],[12,"depthBounds","","",3,null],[12,"wideLines","","",3,null],[12,"largePoints","","",3,null],[12,"alphaToOne","","",3,null],[12,"multiViewport","","",3,null],[12,"samplerAnisotropy","","",3,null],[12,"textureCompressionETC2","","",3,null],[12,"textureCompressionASTC_LDR","","",3,null],[12,"textureCompressionBC","","",3,null],[12,"occlusionQueryPrecise","","",3,null],[12,"pipelineStatisticsQuery","","",3,null],[12,"vertexPipelineStoresAndAtomics","","",3,null],[12,"fragmentStoresAndAtomics","","",3,null],[12,"shaderTessellationAndGeometryPointSize","","",3,null],[12,"shaderImageGatherExtended","","",3,null],[12,"shaderStorageImageExtendedFormats","","",3,null],[12,"shaderStorageImageMultisample","","",3,null],[12,"shaderStorageImageReadWithoutFormat","","",3,null],[12,"shaderStorageImageWriteWithoutFormat","","",3,null],[12,"shaderUniformBufferArrayDynamicIndexing","","",3,null],[12,"shaderSampledImageArrayDynamicIndexing","","",3,null],[12,"shaderStorageBufferArrayDynamicIndexing","","",3,null],[12,"shaderStorageImageArrayDynamicIndexing","","",3,null],[12,"shaderClipDistance","","",3,null],[12,"shaderCullDistance","","",3,null],[12,"shaderf3264","","",3,null],[12,"shaderInt64","","",3,null],[12,"shaderInt16","","",3,null],[12,"shaderResourceResidency","","",3,null],[12,"shaderResourceMinLod","","",3,null],[12,"sparseBinding","","",3,null],[12,"sparseResidencyBuffer","","",3,null],[12,"sparseResidencyImage2D","","",3,null],[12,"sparseResidencyImage3D","","",3,null],[12,"sparseResidency2Samples","","",3,null],[12,"sparseResidency4Samples","","",3,null],[12,"sparseResidency8Samples","","",3,null],[12,"sparseResidency16Samples","","",3,null],[12,"sparseResidencyAliased","","",3,null],[12,"variableMultisampleRate","","",3,null],[12,"inheritedQueries","","",3,null],[3,"FormatProperties","","",null,null],[12,"linearTilingFeatures","","",4,null],[12,"optimalTilingFeatures","","",4,null],[12,"bufferFeatures","","",4,null],[3,"Extent3D","","",null,null],[12,"width","","",5,null],[12,"height","","",5,null],[12,"depth","","",5,null],[3,"ImageFormatProperties","","",null,null],[12,"maxExtent","","",6,null],[12,"maxMipLevels","","",6,null],[12,"maxArrayLayers","","",6,null],[12,"sampleCounts","","",6,null],[12,"maxResourceSize","","",6,null],[3,"PhysicalDeviceLimits","","",null,null],[12,"maxImageDimension1D","","",7,null],[12,"maxImageDimension2D","","",7,null],[12,"maxImageDimension3D","","",7,null],[12,"maxImageDimensionCube","","",7,null],[12,"maxImageArrayLayers","","",7,null],[12,"maxTexelBufferElements","","",7,null],[12,"maxUniformBufferRange","","",7,null],[12,"maxStorageBufferRange","","",7,null],[12,"maxPushConstantsSize","","",7,null],[12,"maxMemoryAllocationCount","","",7,null],[12,"maxSamplerAllocationCount","","",7,null],[12,"bufferImageGranularity","","",7,null],[12,"sparseAddressSpaceSize","","",7,null],[12,"maxBoundDescriptorSets","","",7,null],[12,"maxPerStageDescriptorSamplers","","",7,null],[12,"maxPerStageDescriptorUniformBuffers","","",7,null],[12,"maxPerStageDescriptorStorageBuffers","","",7,null],[12,"maxPerStageDescriptorSampledImages","","",7,null],[12,"maxPerStageDescriptorStorageImages","","",7,null],[12,"maxPerStageDescriptorInputAttachments","","",7,null],[12,"maxPerStageResources","","",7,null],[12,"maxDescriptorSetSamplers","","",7,null],[12,"maxDescriptorSetUniformBuffers","","",7,null],[12,"maxDescriptorSetUniformBuffersDynamic","","",7,null],[12,"maxDescriptorSetStorageBuffers","","",7,null],[12,"maxDescriptorSetStorageBuffersDynamic","","",7,null],[12,"maxDescriptorSetSampledImages","","",7,null],[12,"maxDescriptorSetStorageImages","","",7,null],[12,"maxDescriptorSetInputAttachments","","",7,null],[12,"maxVertexInputAttributes","","",7,null],[12,"maxVertexInputBindings","","",7,null],[12,"maxVertexInputAttributeOffset","","",7,null],[12,"maxVertexInputBindingStride","","",7,null],[12,"maxVertexOutputComponents","","",7,null],[12,"maxTessellationGenerationLevel","","",7,null],[12,"maxTessellationPatchSize","","",7,null],[12,"maxTessellationControlPerVertexInputComponents","","",7,null],[12,"maxTessellationControlPerVertexOutputComponents","","",7,null],[12,"maxTessellationControlPerPatchOutputComponents","","",7,null],[12,"maxTessellationControlTotalOutputComponents","","",7,null],[12,"maxTessellationEvaluationInputComponents","","",7,null],[12,"maxTessellationEvaluationOutputComponents","","",7,null],[12,"maxGeometryShaderInvocations","","",7,null],[12,"maxGeometryInputComponents","","",7,null],[12,"maxGeometryOutputComponents","","",7,null],[12,"maxGeometryOutputVertices","","",7,null],[12,"maxGeometryTotalOutputComponents","","",7,null],[12,"maxFragmentInputComponents","","",7,null],[12,"maxFragmentOutputAttachments","","",7,null],[12,"maxFragmentDualSrcAttachments","","",7,null],[12,"maxFragmentCombinedOutputResources","","",7,null],[12,"maxComputeSharedMemorySize","","",7,null],[12,"maxComputeWorkGroupCount","","",7,null],[12,"maxComputeWorkGroupInvocations","","",7,null],[12,"maxComputeWorkGroupSize","","",7,null],[12,"subPixelPrecisionBits","","",7,null],[12,"subTexelPrecisionBits","","",7,null],[12,"mipmapPrecisionBits","","",7,null],[12,"maxDrawIndexedIndexValue","","",7,null],[12,"maxDrawIndirectCount","","",7,null],[12,"maxSamplerLodBias","","",7,null],[12,"maxSamplerAnisotropy","","",7,null],[12,"maxViewports","","",7,null],[12,"maxViewportDimensions","","",7,null],[12,"viewportBoundsRange","","",7,null],[12,"viewportSubPixelBits","","",7,null],[12,"minMemoryMapAlignment","","",7,null],[12,"minTexelBufferOffsetAlignment","","",7,null],[12,"minUniformBufferOffsetAlignment","","",7,null],[12,"minStorageBufferOffsetAlignment","","",7,null],[12,"minTexelOffset","","",7,null],[12,"maxTexelOffset","","",7,null],[12,"minTexelGatherOffset","","",7,null],[12,"maxTexelGatherOffset","","",7,null],[12,"minInterpolationOffset","","",7,null],[12,"maxInterpolationOffset","","",7,null],[12,"subPixelInterpolationOffsetBits","","",7,null],[12,"maxFramebufferWidth","","",7,null],[12,"maxFramebufferHeight","","",7,null],[12,"maxFramebufferLayers","","",7,null],[12,"framebufferColorSampleCounts","","",7,null],[12,"framebufferDepthSampleCounts","","",7,null],[12,"framebufferStencilSampleCounts","","",7,null],[12,"framebufferNoAttachmentsSampleCounts","","",7,null],[12,"maxColorAttachments","","",7,null],[12,"sampledImageColorSampleCounts","","",7,null],[12,"sampledImageIntegerSampleCounts","","",7,null],[12,"sampledImageDepthSampleCounts","","",7,null],[12,"sampledImageStencilSampleCounts","","",7,null],[12,"storageImageSampleCounts","","",7,null],[12,"maxSampleMaskWords","","",7,null],[12,"timestampComputeAndGraphics","","",7,null],[12,"timestampPeriod","","",7,null],[12,"maxClipDistances","","",7,null],[12,"maxCullDistances","","",7,null],[12,"maxCombinedClipAndCullDistances","","",7,null],[12,"discreteQueuePriorities","","",7,null],[12,"pointSizeRange","","",7,null],[12,"lineWidthRange","","",7,null],[12,"pointSizeGranularity","","",7,null],[12,"lineWidthGranularity","","",7,null],[12,"strictLines","","",7,null],[12,"standardSampleLocations","","",7,null],[12,"optimalBufferCopyOffsetAlignment","","",7,null],[12,"optimalBufferCopyRowPitchAlignment","","",7,null],[12,"nonCoherentAtomSize","","",7,null],[3,"PhysicalDeviceSparseProperties","","",null,null],[12,"residencyStandard2DBlockShape","","",8,null],[12,"residencyStandard2DMultisampleBlockShape","","",8,null],[12,"residencyStandard3DBlockShape","","",8,null],[12,"residencyAlignedMipSize","","",8,null],[12,"residencyNonResidentStrict","","",8,null],[3,"PhysicalDeviceProperties","","",null,null],[12,"apiVersion","","",9,null],[12,"driverVersion","","",9,null],[12,"vendorID","","",9,null],[12,"deviceID","","",9,null],[12,"deviceType","","",9,null],[12,"deviceName","","",9,null],[12,"pipelineCacheUUID","","",9,null],[12,"limits","","",9,null],[12,"sparseProperties","","",9,null],[3,"QueueFamilyProperties","","",null,null],[12,"queueFlags","","",10,null],[12,"queueCount","","",10,null],[12,"timestampValidBits","","",10,null],[12,"minImageTransferGranularity","","",10,null],[3,"MemoryType","","",null,null],[12,"propertyFlags","","",11,null],[12,"heapIndex","","",11,null],[3,"MemoryHeap","","",null,null],[12,"size","","",12,null],[12,"flags","","",12,null],[3,"PhysicalDeviceMemoryProperties","","",null,null],[12,"memoryTypeCount","","",13,null],[12,"memoryTypes","","",13,null],[12,"memoryHeapCount","","",13,null],[12,"memoryHeaps","","",13,null],[3,"DeviceQueueCreateInfo","","",null,null],[12,"sType","","",14,null],[12,"pNext","","",14,null],[12,"flags","","",14,null],[12,"queueFamilyIndex","","",14,null],[12,"queueCount","","",14,null],[12,"pQueuePriorities","","",14,null],[3,"DeviceCreateInfo","","",null,null],[12,"sType","","",15,null],[12,"pNext","","",15,null],[12,"flags","","",15,null],[12,"queueCreateInfoCount","","",15,null],[12,"pQueueCreateInfos","","",15,null],[12,"enabledLayerCount","","",15,null],[12,"ppEnabledLayerNames","","",15,null],[12,"enabledExtensionCount","","",15,null],[12,"ppEnabledExtensionNames","","",15,null],[12,"pEnabledFeatures","","",15,null],[3,"ExtensionProperties","","",null,null],[12,"extensionName","","",16,null],[12,"specVersion","","",16,null],[3,"LayerProperties","","",null,null],[12,"layerName","","",17,null],[12,"specVersion","","",17,null],[12,"implementationVersion","","",17,null],[12,"description","","",17,null],[3,"SubmitInfo","","",null,null],[12,"sType","","",18,null],[12,"pNext","","",18,null],[12,"waitSemaphoreCount","","",18,null],[12,"pWaitSemaphores","","",18,null],[12,"pWaitDstStageMask","","",18,null],[12,"commandBufferCount","","",18,null],[12,"pCommandBuffers","","",18,null],[12,"signalSemaphoreCount","","",18,null],[12,"pSignalSemaphores","","",18,null],[3,"MemoryAllocateInfo","","",null,null],[12,"sType","","",19,null],[12,"pNext","","",19,null],[12,"allocationSize","","",19,null],[12,"memoryTypeIndex","","",19,null],[3,"MappedMemoryRange","","",null,null],[12,"sType","","",20,null],[12,"pNext","","",20,null],[12,"memory","","",20,null],[12,"offset","","",20,null],[12,"size","","",20,null],[3,"MemoryRequirements","","",null,null],[12,"size","","",21,null],[12,"alignment","","",21,null],[12,"memoryTypeBits","","",21,null],[3,"SparseImageFormatProperties","","",null,null],[12,"aspectMask","","",22,null],[12,"imageGranularity","","",22,null],[12,"flags","","",22,null],[3,"SparseImageMemoryRequirements","","",null,null],[12,"formatProperties","","",23,null],[12,"imageMipTailFirstLod","","",23,null],[12,"imageMipTailSize","","",23,null],[12,"imageMipTailOffset","","",23,null],[12,"imageMipTailStride","","",23,null],[3,"SparseMemoryBind","","",null,null],[12,"resourceOffset","","",24,null],[12,"size","","",24,null],[12,"memory","","",24,null],[12,"memoryOffset","","",24,null],[12,"flags","","",24,null],[3,"SparseBufferMemoryBindInfo","","",null,null],[12,"buffer","","",25,null],[12,"bindCount","","",25,null],[12,"pBinds","","",25,null],[3,"SparseImageOpaqueMemoryBindInfo","","",null,null],[12,"image","","",26,null],[12,"bindCount","","",26,null],[12,"pBinds","","",26,null],[3,"ImageSubresource","","",null,null],[12,"aspectMask","","",27,null],[12,"mipLevel","","",27,null],[12,"arrayLayer","","",27,null],[3,"Offset3D","","",null,null],[12,"x","","",28,null],[12,"y","","",28,null],[12,"z","","",28,null],[3,"SparseImageMemoryBind","","",null,null],[12,"subresource","","",29,null],[12,"offset","","",29,null],[12,"extent","","",29,null],[12,"memory","","",29,null],[12,"memoryOffset","","",29,null],[12,"flags","","",29,null],[3,"SparseImageMemoryBindInfo","","",null,null],[12,"image","","",30,null],[12,"bindCount","","",30,null],[12,"pBinds","","",30,null],[3,"BindSparseInfo","","",null,null],[12,"sType","","",31,null],[12,"pNext","","",31,null],[12,"waitSemaphoreCount","","",31,null],[12,"pWaitSemaphores","","",31,null],[12,"bufferBindCount","","",31,null],[12,"pBufferBinds","","",31,null],[12,"imageOpaqueBindCount","","",31,null],[12,"pImageOpaqueBinds","","",31,null],[12,"imageBindCount","","",31,null],[12,"pImageBinds","","",31,null],[12,"signalSemaphoreCount","","",31,null],[12,"pSignalSemaphores","","",31,null],[3,"FenceCreateInfo","","",null,null],[12,"sType","","",32,null],[12,"pNext","","",32,null],[12,"flags","","",32,null],[3,"SemaphoreCreateInfo","","",null,null],[12,"sType","","",33,null],[12,"pNext","","",33,null],[12,"flags","","",33,null],[3,"EventCreateInfo","","",null,null],[12,"sType","","",34,null],[12,"pNext","","",34,null],[12,"flags","","",34,null],[3,"QueryPoolCreateInfo","","",null,null],[12,"sType","","",35,null],[12,"pNext","","",35,null],[12,"flags","","",35,null],[12,"queryType","","",35,null],[12,"queryCount","","",35,null],[12,"pipelineStatistics","","",35,null],[3,"BufferCreateInfo","","",null,null],[12,"sType","","",36,null],[12,"pNext","","",36,null],[12,"flags","","",36,null],[12,"size","","",36,null],[12,"usage","","",36,null],[12,"sharingMode","","",36,null],[12,"queueFamilyIndexCount","","",36,null],[12,"pQueueFamilyIndices","","",36,null],[3,"BufferViewCreateInfo","","",null,null],[12,"sType","","",37,null],[12,"pNext","","",37,null],[12,"flags","","",37,null],[12,"buffer","","",37,null],[12,"format","","",37,null],[12,"offset","","",37,null],[12,"range","","",37,null],[3,"ImageCreateInfo","","",null,null],[12,"sType","","",38,null],[12,"pNext","","",38,null],[12,"flags","","",38,null],[12,"imageType","","",38,null],[12,"format","","",38,null],[12,"extent","","",38,null],[12,"mipLevels","","",38,null],[12,"arrayLayers","","",38,null],[12,"samples","","",38,null],[12,"tiling","","",38,null],[12,"usage","","",38,null],[12,"sharingMode","","",38,null],[12,"queueFamilyIndexCount","","",38,null],[12,"pQueueFamilyIndices","","",38,null],[12,"initialLayout","","",38,null],[3,"SubresourceLayout","","",null,null],[12,"offset","","",39,null],[12,"size","","",39,null],[12,"rowPitch","","",39,null],[12,"arrayPitch","","",39,null],[12,"depthPitch","","",39,null],[3,"ComponentMapping","","",null,null],[12,"r","","",40,null],[12,"g","","",40,null],[12,"b","","",40,null],[12,"a","","",40,null],[3,"ImageSubresourceRange","","",null,null],[12,"aspectMask","","",41,null],[12,"baseMipLevel","","",41,null],[12,"levelCount","","",41,null],[12,"baseArrayLayer","","",41,null],[12,"layerCount","","",41,null],[3,"ImageViewCreateInfo","","",null,null],[12,"sType","","",42,null],[12,"pNext","","",42,null],[12,"flags","","",42,null],[12,"image","","",42,null],[12,"viewType","","",42,null],[12,"format","","",42,null],[12,"components","","",42,null],[12,"subresourceRange","","",42,null],[3,"ShaderModuleCreateInfo","","",null,null],[12,"sType","","",43,null],[12,"pNext","","",43,null],[12,"flags","","",43,null],[12,"codeSize","","",43,null],[12,"pCode","","",43,null],[3,"PipelineCacheCreateInfo","","",null,null],[12,"sType","","",44,null],[12,"pNext","","",44,null],[12,"flags","","",44,null],[12,"initialDataSize","","",44,null],[12,"pInitialData","","",44,null],[3,"SpecializationMapEntry","","",null,null],[12,"constantID","","",45,null],[12,"offset","","",45,null],[12,"size","","",45,null],[3,"SpecializationInfo","","",null,null],[12,"mapEntryCount","","",46,null],[12,"pMapEntries","","",46,null],[12,"dataSize","","",46,null],[12,"pData","","",46,null],[3,"PipelineShaderStageCreateInfo","","",null,null],[12,"sType","","",47,null],[12,"pNext","","",47,null],[12,"flags","","",47,null],[12,"stage","","",47,null],[12,"module","","",47,null],[12,"pName","","",47,null],[12,"pSpecializationInfo","","",47,null],[3,"VertexInputBindingDescription","","",null,null],[12,"binding","","",48,null],[12,"stride","","",48,null],[12,"inputRate","","",48,null],[3,"VertexInputAttributeDescription","","",null,null],[12,"location","","",49,null],[12,"binding","","",49,null],[12,"format","","",49,null],[12,"offset","","",49,null],[3,"PipelineVertexInputStateCreateInfo","","",null,null],[12,"sType","","",50,null],[12,"pNext","","",50,null],[12,"flags","","",50,null],[12,"vertexBindingDescriptionCount","","",50,null],[12,"pVertexBindingDescriptions","","",50,null],[12,"vertexAttributeDescriptionCount","","",50,null],[12,"pVertexAttributeDescriptions","","",50,null],[3,"PipelineInputAssemblyStateCreateInfo","","",null,null],[12,"sType","","",51,null],[12,"pNext","","",51,null],[12,"flags","","",51,null],[12,"topology","","",51,null],[12,"primitiveRestartEnable","","",51,null],[3,"PipelineTessellationStateCreateInfo","","",null,null],[12,"sType","","",52,null],[12,"pNext","","",52,null],[12,"flags","","",52,null],[12,"patchControlPoints","","",52,null],[3,"Viewport","","",null,null],[12,"x","","",53,null],[12,"y","","",53,null],[12,"width","","",53,null],[12,"height","","",53,null],[12,"minDepth","","",53,null],[12,"maxDepth","","",53,null],[3,"Offset2D","","",null,null],[12,"x","","",54,null],[12,"y","","",54,null],[3,"Extent2D","","",null,null],[12,"width","","",55,null],[12,"height","","",55,null],[3,"Rect2D","","",null,null],[12,"offset","","",56,null],[12,"extent","","",56,null],[3,"PipelineViewportStateCreateInfo","","",null,null],[12,"sType","","",57,null],[12,"pNext","","",57,null],[12,"flags","","",57,null],[12,"viewportCount","","",57,null],[12,"pViewports","","",57,null],[12,"scissorCount","","",57,null],[12,"pScissors","","",57,null],[3,"PipelineRasterizationStateCreateInfo","","",null,null],[12,"sType","","",58,null],[12,"pNext","","",58,null],[12,"flags","","",58,null],[12,"depthClampEnable","","",58,null],[12,"rasterizerDiscardEnable","","",58,null],[12,"polygonMode","","",58,null],[12,"cullMode","","",58,null],[12,"frontFace","","",58,null],[12,"depthBiasEnable","","",58,null],[12,"depthBiasConstantFactor","","",58,null],[12,"depthBiasClamp","","",58,null],[12,"depthBiasSlopeFactor","","",58,null],[12,"lineWidth","","",58,null],[3,"PipelineMultisampleStateCreateInfo","","",null,null],[12,"sType","","",59,null],[12,"pNext","","",59,null],[12,"flags","","",59,null],[12,"rasterizationSamples","","",59,null],[12,"sampleShadingEnable","","",59,null],[12,"minSampleShading","","",59,null],[12,"pSampleMask","","",59,null],[12,"alphaToCoverageEnable","","",59,null],[12,"alphaToOneEnable","","",59,null],[3,"StencilOpState","","",null,null],[12,"failOp","","",60,null],[12,"passOp","","",60,null],[12,"depthFailOp","","",60,null],[12,"compareOp","","",60,null],[12,"compareMask","","",60,null],[12,"writeMask","","",60,null],[12,"reference","","",60,null],[3,"PipelineDepthStencilStateCreateInfo","","",null,null],[12,"sType","","",61,null],[12,"pNext","","",61,null],[12,"flags","","",61,null],[12,"depthTestEnable","","",61,null],[12,"depthWriteEnable","","",61,null],[12,"depthCompareOp","","",61,null],[12,"depthBoundsTestEnable","","",61,null],[12,"stencilTestEnable","","",61,null],[12,"front","","",61,null],[12,"back","","",61,null],[12,"minDepthBounds","","",61,null],[12,"maxDepthBounds","","",61,null],[3,"PipelineColorBlendAttachmentState","","",null,null],[12,"blendEnable","","",62,null],[12,"srcColorBlendFactor","","",62,null],[12,"dstColorBlendFactor","","",62,null],[12,"colorBlendOp","","",62,null],[12,"srcAlphaBlendFactor","","",62,null],[12,"dstAlphaBlendFactor","","",62,null],[12,"alphaBlendOp","","",62,null],[12,"colorWriteMask","","",62,null],[3,"PipelineColorBlendStateCreateInfo","","",null,null],[12,"sType","","",63,null],[12,"pNext","","",63,null],[12,"flags","","",63,null],[12,"logicOpEnable","","",63,null],[12,"logicOp","","",63,null],[12,"attachmentCount","","",63,null],[12,"pAttachments","","",63,null],[12,"blendConstants","","",63,null],[3,"PipelineDynamicStateCreateInfo","","",null,null],[12,"sType","","",64,null],[12,"pNext","","",64,null],[12,"flags","","",64,null],[12,"dynamicStateCount","","",64,null],[12,"pDynamicStates","","",64,null],[3,"GraphicsPipelineCreateInfo","","",null,null],[12,"sType","","",65,null],[12,"pNext","","",65,null],[12,"flags","","",65,null],[12,"stageCount","","",65,null],[12,"pStages","","",65,null],[12,"pVertexInputState","","",65,null],[12,"pInputAssemblyState","","",65,null],[12,"pTessellationState","","",65,null],[12,"pViewportState","","",65,null],[12,"pRasterizationState","","",65,null],[12,"pMultisampleState","","",65,null],[12,"pDepthStencilState","","",65,null],[12,"pColorBlendState","","",65,null],[12,"pDynamicState","","",65,null],[12,"layout","","",65,null],[12,"renderPass","","",65,null],[12,"subpass","","",65,null],[12,"basePipelineHandle","","",65,null],[12,"basePipelineIndex","","",65,null],[3,"ComputePipelineCreateInfo","","",null,null],[12,"sType","","",66,null],[12,"pNext","","",66,null],[12,"flags","","",66,null],[12,"stage","","",66,null],[12,"layout","","",66,null],[12,"basePipelineHandle","","",66,null],[12,"basePipelineIndex","","",66,null],[3,"PushConstantRange","","",null,null],[12,"stageFlags","","",67,null],[12,"offset","","",67,null],[12,"size","","",67,null],[3,"PipelineLayoutCreateInfo","","",null,null],[12,"sType","","",68,null],[12,"pNext","","",68,null],[12,"flags","","",68,null],[12,"setLayoutCount","","",68,null],[12,"pSetLayouts","","",68,null],[12,"pushConstantRangeCount","","",68,null],[12,"pPushConstantRanges","","",68,null],[3,"SamplerCreateInfo","","",null,null],[12,"sType","","",69,null],[12,"pNext","","",69,null],[12,"flags","","",69,null],[12,"magFilter","","",69,null],[12,"minFilter","","",69,null],[12,"mipmapMode","","",69,null],[12,"addressModeU","","",69,null],[12,"addressModeV","","",69,null],[12,"addressModeW","","",69,null],[12,"mipLodBias","","",69,null],[12,"anisotropyEnable","","",69,null],[12,"maxAnisotropy","","",69,null],[12,"compareEnable","","",69,null],[12,"compareOp","","",69,null],[12,"minLod","","",69,null],[12,"maxLod","","",69,null],[12,"borderColor","","",69,null],[12,"unnormalizedCoordinates","","",69,null],[3,"DescriptorSetLayoutBinding","","",null,null],[12,"binding","","",70,null],[12,"descriptorType","","",70,null],[12,"descriptorCount","","",70,null],[12,"stageFlags","","",70,null],[12,"pImmutableSamplers","","",70,null],[3,"DescriptorSetLayoutCreateInfo","","",null,null],[12,"sType","","",71,null],[12,"pNext","","",71,null],[12,"flags","","",71,null],[12,"bindingCount","","",71,null],[12,"pBindings","","",71,null],[3,"DescriptorPoolSize","","",null,null],[12,"ty","","",72,null],[12,"descriptorCount","","",72,null],[3,"DescriptorPoolCreateInfo","","",null,null],[12,"sType","","",73,null],[12,"pNext","","",73,null],[12,"flags","","",73,null],[12,"maxSets","","",73,null],[12,"poolSizeCount","","",73,null],[12,"pPoolSizes","","",73,null],[3,"DescriptorSetAllocateInfo","","",null,null],[12,"sType","","",74,null],[12,"pNext","","",74,null],[12,"descriptorPool","","",74,null],[12,"descriptorSetCount","","",74,null],[12,"pSetLayouts","","",74,null],[3,"DescriptorImageInfo","","",null,null],[12,"sampler","","",75,null],[12,"imageView","","",75,null],[12,"imageLayout","","",75,null],[3,"DescriptorBufferInfo","","",null,null],[12,"buffer","","",76,null],[12,"offset","","",76,null],[12,"range","","",76,null],[3,"WriteDescriptorSet","","",null,null],[12,"sType","","",77,null],[12,"pNext","","",77,null],[12,"dstSet","","",77,null],[12,"dstBinding","","",77,null],[12,"dstArrayElement","","",77,null],[12,"descriptorCount","","",77,null],[12,"descriptorType","","",77,null],[12,"pImageInfo","","",77,null],[12,"pBufferInfo","","",77,null],[12,"pTexelBufferView","","",77,null],[3,"CopyDescriptorSet","","",null,null],[12,"sType","","",78,null],[12,"pNext","","",78,null],[12,"srcSet","","",78,null],[12,"srcBinding","","",78,null],[12,"srcArrayElement","","",78,null],[12,"dstSet","","",78,null],[12,"dstBinding","","",78,null],[12,"dstArrayElement","","",78,null],[12,"descriptorCount","","",78,null],[3,"FramebufferCreateInfo","","",null,null],[12,"sType","","",79,null],[12,"pNext","","",79,null],[12,"flags","","",79,null],[12,"renderPass","","",79,null],[12,"attachmentCount","","",79,null],[12,"pAttachments","","",79,null],[12,"width","","",79,null],[12,"height","","",79,null],[12,"layers","","",79,null],[3,"AttachmentDescription","","",null,null],[12,"flags","","",80,null],[12,"format","","",80,null],[12,"samples","","",80,null],[12,"loadOp","","",80,null],[12,"storeOp","","",80,null],[12,"stencilLoadOp","","",80,null],[12,"stencilStoreOp","","",80,null],[12,"initialLayout","","",80,null],[12,"finalLayout","","",80,null],[3,"AttachmentReference","","",null,null],[12,"attachment","","",81,null],[12,"layout","","",81,null],[3,"SubpassDescription","","",null,null],[12,"flags","","",82,null],[12,"pipelineBindPoint","","",82,null],[12,"inputAttachmentCount","","",82,null],[12,"pInputAttachments","","",82,null],[12,"colorAttachmentCount","","",82,null],[12,"pColorAttachments","","",82,null],[12,"pResolveAttachments","","",82,null],[12,"pDepthStencilAttachment","","",82,null],[12,"preserveAttachmentCount","","",82,null],[12,"pPreserveAttachments","","",82,null],[3,"SubpassDependency","","",null,null],[12,"srcSubpass","","",83,null],[12,"dstSubpass","","",83,null],[12,"srcStageMask","","",83,null],[12,"dstStageMask","","",83,null],[12,"srcAccessMask","","",83,null],[12,"dstAccessMask","","",83,null],[12,"dependencyFlags","","",83,null],[3,"RenderPassCreateInfo","","",null,null],[12,"sType","","",84,null],[12,"pNext","","",84,null],[12,"flags","","",84,null],[12,"attachmentCount","","",84,null],[12,"pAttachments","","",84,null],[12,"subpassCount","","",84,null],[12,"pSubpasses","","",84,null],[12,"dependencyCount","","",84,null],[12,"pDependencies","","",84,null],[3,"CommandPoolCreateInfo","","",null,null],[12,"sType","","",85,null],[12,"pNext","","",85,null],[12,"flags","","",85,null],[12,"queueFamilyIndex","","",85,null],[3,"CommandBufferAllocateInfo","","",null,null],[12,"sType","","",86,null],[12,"pNext","","",86,null],[12,"commandPool","","",86,null],[12,"level","","",86,null],[12,"commandBufferCount","","",86,null],[3,"CommandBufferInheritanceInfo","","",null,null],[12,"sType","","",87,null],[12,"pNext","","",87,null],[12,"renderPass","","",87,null],[12,"subpass","","",87,null],[12,"framebuffer","","",87,null],[12,"occlusionQueryEnable","","",87,null],[12,"queryFlags","","",87,null],[12,"pipelineStatistics","","",87,null],[3,"CommandBufferBeginInfo","","",null,null],[12,"sType","","",88,null],[12,"pNext","","",88,null],[12,"flags","","",88,null],[12,"pInheritanceInfo","","",88,null],[3,"BufferCopy","","",null,null],[12,"srcOffset","","",89,null],[12,"dstOffset","","",89,null],[12,"size","","",89,null],[3,"ImageSubresourceLayers","","",null,null],[12,"aspectMask","","",90,null],[12,"mipLevel","","",90,null],[12,"baseArrayLayer","","",90,null],[12,"layerCount","","",90,null],[3,"ImageCopy","","",null,null],[12,"srcSubresource","","",91,null],[12,"srcOffset","","",91,null],[12,"dstSubresource","","",91,null],[12,"dstOffset","","",91,null],[12,"extent","","",91,null],[3,"ImageBlit","","",null,null],[12,"srcSubresource","","",92,null],[12,"srcOffsets","","",92,null],[12,"dstSubresource","","",92,null],[12,"dstOffsets","","",92,null],[3,"BufferImageCopy","","",null,null],[12,"bufferOffset","","",93,null],[12,"bufferRowLength","","",93,null],[12,"bufferImageHeight","","",93,null],[12,"imageSubresource","","",93,null],[12,"imageOffset","","",93,null],[12,"imageExtent","","",93,null],[3,"ClearColorValue","","",null,null],[3,"ClearDepthStencilValue","","",null,null],[12,"depth","","",94,null],[12,"stencil","","",94,null],[3,"ClearValue","","",null,null],[3,"ClearAttachment","","",null,null],[12,"aspectMask","","",95,null],[12,"colorAttachment","","",95,null],[12,"clearValue","","",95,null],[3,"ClearRect","","",null,null],[12,"rect","","",96,null],[12,"baseArrayLayer","","",96,null],[12,"layerCount","","",96,null],[3,"ImageResolve","","",null,null],[12,"srcSubresource","","",97,null],[12,"srcOffset","","",97,null],[12,"dstSubresource","","",97,null],[12,"dstOffset","","",97,null],[12,"extent","","",97,null],[3,"MemoryBarrier","","",null,null],[12,"sType","","",98,null],[12,"pNext","","",98,null],[12,"srcAccessMask","","",98,null],[12,"dstAccessMask","","",98,null],[3,"BufferMemoryBarrier","","",null,null],[12,"sType","","",99,null],[12,"pNext","","",99,null],[12,"srcAccessMask","","",99,null],[12,"dstAccessMask","","",99,null],[12,"srcQueueFamilyIndex","","",99,null],[12,"dstQueueFamilyIndex","","",99,null],[12,"buffer","","",99,null],[12,"offset","","",99,null],[12,"size","","",99,null],[3,"ImageMemoryBarrier","","",null,null],[12,"sType","","",100,null],[12,"pNext","","",100,null],[12,"srcAccessMask","","",100,null],[12,"dstAccessMask","","",100,null],[12,"oldLayout","","",100,null],[12,"newLayout","","",100,null],[12,"srcQueueFamilyIndex","","",100,null],[12,"dstQueueFamilyIndex","","",100,null],[12,"image","","",100,null],[12,"subresourceRange","","",100,null],[3,"RenderPassBeginInfo","","",null,null],[12,"sType","","",101,null],[12,"pNext","","",101,null],[12,"renderPass","","",101,null],[12,"framebuffer","","",101,null],[12,"renderArea","","",101,null],[12,"clearValueCount","","",101,null],[12,"pClearValues","","",101,null],[3,"DispatchIndirectCommand","","",null,null],[12,"x","","",102,null],[12,"y","","",102,null],[12,"z","","",102,null],[3,"DrawIndexedIndirectCommand","","",null,null],[12,"indexCount","","",103,null],[12,"instanceCount","","",103,null],[12,"firstIndex","","",103,null],[12,"vertexOffset","","",103,null],[12,"firstInstance","","",103,null],[3,"DrawIndirectCommand","","",null,null],[12,"vertexCount","","",104,null],[12,"instanceCount","","",104,null],[12,"firstVertex","","",104,null],[12,"firstInstance","","",104,null],[3,"SurfaceCapabilitiesKHR","","",null,null],[12,"minImageCount","","",105,null],[12,"maxImageCount","","",105,null],[12,"currentExtent","","",105,null],[12,"minImageExtent","","",105,null],[12,"maxImageExtent","","",105,null],[12,"maxImageArrayLayers","","",105,null],[12,"supportedTransforms","","",105,null],[12,"currentTransform","","",105,null],[12,"supportedCompositeAlpha","","",105,null],[12,"supportedUsageFlags","","",105,null],[3,"SurfaceFormatKHR","","",null,null],[12,"format","","",106,null],[12,"colorSpace","","",106,null],[3,"SwapchainCreateInfoKHR","","",null,null],[12,"sType","","",107,null],[12,"pNext","","",107,null],[12,"flags","","",107,null],[12,"surface","","",107,null],[12,"minImageCount","","",107,null],[12,"imageFormat","","",107,null],[12,"imageColorSpace","","",107,null],[12,"imageExtent","","",107,null],[12,"imageArrayLayers","","",107,null],[12,"imageUsage","","",107,null],[12,"imageSharingMode","","",107,null],[12,"queueFamilyIndexCount","","",107,null],[12,"pQueueFamilyIndices","","",107,null],[12,"preTransform","","",107,null],[12,"compositeAlpha","","",107,null],[12,"presentMode","","",107,null],[12,"clipped","","",107,null],[12,"oldSwapchain","","",107,null],[3,"PresentInfoKHR","","",null,null],[12,"sType","","",108,null],[12,"pNext","","",108,null],[12,"waitSemaphoreCount","","",108,null],[12,"pWaitSemaphores","","",108,null],[12,"swapchainCount","","",108,null],[12,"pSwapchains","","",108,null],[12,"pImageIndices","","",108,null],[12,"pResults","","",108,null],[3,"DisplayPropertiesKHR","","",null,null],[12,"display","","",109,null],[12,"displayName","","",109,null],[12,"physicalDimensions","","",109,null],[12,"physicalResolution","","",109,null],[12,"supportedTransforms","","",109,null],[12,"planeReorderPossible","","",109,null],[12,"persistentContent","","",109,null],[3,"DisplayModeParametersKHR","","",null,null],[12,"visibleRegion","","",110,null],[12,"refreshRate","","",110,null],[3,"DisplayModePropertiesKHR","","",null,null],[12,"displayMode","","",111,null],[12,"parameters","","",111,null],[3,"DisplayModeCreateInfoKHR","","",null,null],[12,"sType","","",112,null],[12,"pNext","","",112,null],[12,"flags","","",112,null],[12,"parameters","","",112,null],[3,"DisplayPlaneCapabilitiesKHR","","",null,null],[12,"supportedAlpha","","",113,null],[12,"minSrcPosition","","",113,null],[12,"maxSrcPosition","","",113,null],[12,"minSrcExtent","","",113,null],[12,"maxSrcExtent","","",113,null],[12,"minDstPosition","","",113,null],[12,"maxDstPosition","","",113,null],[12,"minDstExtent","","",113,null],[12,"maxDstExtent","","",113,null],[3,"DisplayPlanePropertiesKHR","","",null,null],[12,"currentDisplay","","",114,null],[12,"currentStackIndex","","",114,null],[3,"DisplaySurfaceCreateInfoKHR","","",null,null],[12,"sType","","",115,null],[12,"pNext","","",115,null],[12,"flags","","",115,null],[12,"displayMode","","",115,null],[12,"planeIndex","","",115,null],[12,"planeStackIndex","","",115,null],[12,"transform","","",115,null],[12,"globalAlpha","","",115,null],[12,"alphaMode","","",115,null],[12,"imageExtent","","",115,null],[3,"DisplayPresentInfoKHR","","",null,null],[12,"sType","","",116,null],[12,"pNext","","",116,null],[12,"srcRect","","",116,null],[12,"dstRect","","",116,null],[12,"persistent","","",116,null],[3,"XlibSurfaceCreateInfoKHR","","",null,null],[12,"sType","","",117,null],[12,"pNext","","",117,null],[12,"flags","","",117,null],[12,"dpy","","",117,null],[12,"window","","",117,null],[3,"XcbSurfaceCreateInfoKHR","","",null,null],[12,"sType","","",118,null],[12,"pNext","","",118,null],[12,"flags","","",118,null],[12,"connection","","",118,null],[12,"window","","",118,null],[3,"WaylandSurfaceCreateInfoKHR","","",null,null],[12,"sType","","",119,null],[12,"pNext","","",119,null],[12,"flags","","",119,null],[12,"display","","",119,null],[12,"surface","","",119,null],[3,"MirSurfaceCreateInfoKHR","","",null,null],[12,"sType","","",120,null],[12,"pNext","","",120,null],[12,"flags","","",120,null],[12,"connection","","",120,null],[12,"mirSurface","","",120,null],[3,"AndroidSurfaceCreateInfoKHR","","",null,null],[12,"sType","","",121,null],[12,"pNext","","",121,null],[12,"flags","","",121,null],[12,"window","","",121,null],[3,"Win32SurfaceCreateInfoKHR","","",null,null],[12,"sType","","",122,null],[12,"pNext","","",122,null],[12,"flags","","",122,null],[12,"hinstance","","",122,null],[12,"hwnd","","",122,null],[3,"DebugReportCallbackCreateInfoEXT","","",null,null],[12,"sType","","",123,null],[12,"pNext","","",123,null],[12,"flags","","",123,null],[12,"pfnCallback","","",123,null],[12,"pUserData","","",123,null],[3,"Static","","",null,null],[3,"EntryPoints","","",null,null],[3,"InstancePointers","","",null,null],[3,"DevicePointers","","",null,null],[6,"Flags","","",null,null],[6,"Bool32","","",null,null],[6,"DeviceSize","","",null,null],[6,"SampleMask","","",null,null],[6,"Instance","","",null,null],[6,"PhysicalDevice","","",null,null],[6,"Device","","",null,null],[6,"Queue","","",null,null],[6,"CommandBuffer","","",null,null],[6,"Semaphore","","",null,null],[6,"Fence","","",null,null],[6,"DeviceMemory","","",null,null],[6,"Buffer","","",null,null],[6,"Image","","",null,null],[6,"Event","","",null,null],[6,"QueryPool","","",null,null],[6,"BufferView","","",null,null],[6,"ImageView","","",null,null],[6,"ShaderModule","","",null,null],[6,"PipelineCache","","",null,null],[6,"PipelineLayout","","",null,null],[6,"RenderPass","","",null,null],[6,"Pipeline","","",null,null],[6,"DescriptorSetLayout","","",null,null],[6,"Sampler","","",null,null],[6,"DescriptorPool","","",null,null],[6,"DescriptorSet","","",null,null],[6,"Framebuffer","","",null,null],[6,"CommandPool","","",null,null],[6,"SurfaceKHR","","",null,null],[6,"SwapchainKHR","","",null,null],[6,"DisplayKHR","","",null,null],[6,"DisplayModeKHR","","",null,null],[6,"DebugReportCallbackEXT","","",null,null],[6,"PipelineCacheHeaderVersion","","",null,null],[6,"Result","","",null,null],[6,"StructureType","","",null,null],[6,"SystemAllocationScope","","",null,null],[6,"InternalAllocationType","","",null,null],[6,"Format","","",null,null],[6,"ImageType","","",null,null],[6,"ImageTiling","","",null,null],[6,"PhysicalDeviceType","","",null,null],[6,"QueryType","","",null,null],[6,"SharingMode","","",null,null],[6,"ImageLayout","","",null,null],[6,"ImageViewType","","",null,null],[6,"ComponentSwizzle","","",null,null],[6,"VertexInputRate","","",null,null],[6,"PrimitiveTopology","","",null,null],[6,"PolygonMode","","",null,null],[6,"FrontFace","","",null,null],[6,"CompareOp","","",null,null],[6,"StencilOp","","",null,null],[6,"LogicOp","","",null,null],[6,"BlendFactor","","",null,null],[6,"BlendOp","","",null,null],[6,"DynamicState","","",null,null],[6,"Filter","","",null,null],[6,"SamplerMipmapMode","","",null,null],[6,"SamplerAddressMode","","",null,null],[6,"BorderColor","","",null,null],[6,"DescriptorType","","",null,null],[6,"AttachmentLoadOp","","",null,null],[6,"AttachmentStoreOp","","",null,null],[6,"PipelineBindPoint","","",null,null],[6,"CommandBufferLevel","","",null,null],[6,"IndexType","","",null,null],[6,"SubpassContents","","",null,null],[6,"InstanceCreateFlags","","",null,null],[6,"FormatFeatureFlagBits","","",null,null],[6,"FormatFeatureFlags","","",null,null],[6,"ImageUsageFlagBits","","",null,null],[6,"ImageUsageFlags","","",null,null],[6,"ImageCreateFlagBits","","",null,null],[6,"ImageCreateFlags","","",null,null],[6,"SampleCountFlagBits","","",null,null],[6,"SampleCountFlags","","",null,null],[6,"QueueFlagBits","","",null,null],[6,"QueueFlags","","",null,null],[6,"MemoryPropertyFlagBits","","",null,null],[6,"MemoryPropertyFlags","","",null,null],[6,"MemoryHeapFlagBits","","",null,null],[6,"MemoryHeapFlags","","",null,null],[6,"DeviceCreateFlags","","",null,null],[6,"DeviceQueueCreateFlags","","",null,null],[6,"PipelineStageFlagBits","","",null,null],[6,"PipelineStageFlags","","",null,null],[6,"MemoryMapFlags","","",null,null],[6,"ImageAspectFlagBits","","",null,null],[6,"ImageAspectFlags","","",null,null],[6,"SparseImageFormatFlagBits","","",null,null],[6,"SparseImageFormatFlags","","",null,null],[6,"SparseMemoryBindFlagBits","","",null,null],[6,"SparseMemoryBindFlags","","",null,null],[6,"FenceCreateFlagBits","","",null,null],[6,"FenceCreateFlags","","",null,null],[6,"SemaphoreCreateFlags","","",null,null],[6,"EventCreateFlags","","",null,null],[6,"QueryPoolCreateFlags","","",null,null],[6,"QueryPipelineStatisticFlagBits","","",null,null],[6,"QueryPipelineStatisticFlags","","",null,null],[6,"QueryResultFlagBits","","",null,null],[6,"QueryResultFlags","","",null,null],[6,"BufferCreateFlagBits","","",null,null],[6,"BufferCreateFlags","","",null,null],[6,"BufferUsageFlagBits","","",null,null],[6,"BufferUsageFlags","","",null,null],[6,"BufferViewCreateFlags","","",null,null],[6,"ImageViewCreateFlags","","",null,null],[6,"ShaderModuleCreateFlags","","",null,null],[6,"PipelineCacheCreateFlags","","",null,null],[6,"PipelineCreateFlagBits","","",null,null],[6,"PipelineCreateFlags","","",null,null],[6,"PipelineShaderStageCreateFlags","","",null,null],[6,"ShaderStageFlagBits","","",null,null],[6,"PipelineVertexInputStateCreateFlags","","",null,null],[6,"PipelineInputAssemblyStateCreateFlags","","",null,null],[6,"PipelineTessellationStateCreateFlags","","",null,null],[6,"PipelineViewportStateCreateFlags","","",null,null],[6,"PipelineRasterizationStateCreateFlags","","",null,null],[6,"CullModeFlagBits","","",null,null],[6,"CullModeFlags","","",null,null],[6,"PipelineMultisampleStateCreateFlags","","",null,null],[6,"PipelineDepthStencilStateCreateFlags","","",null,null],[6,"PipelineColorBlendStateCreateFlags","","",null,null],[6,"ColorComponentFlagBits","","",null,null],[6,"ColorComponentFlags","","",null,null],[6,"PipelineDynamicStateCreateFlags","","",null,null],[6,"PipelineLayoutCreateFlags","","",null,null],[6,"ShaderStageFlags","","",null,null],[6,"SamplerCreateFlags","","",null,null],[6,"DescriptorSetLayoutCreateFlags","","",null,null],[6,"DescriptorPoolCreateFlagBits","","",null,null],[6,"DescriptorPoolCreateFlags","","",null,null],[6,"DescriptorPoolResetFlags","","",null,null],[6,"FramebufferCreateFlags","","",null,null],[6,"RenderPassCreateFlags","","",null,null],[6,"AttachmentDescriptionFlagBits","","",null,null],[6,"AttachmentDescriptionFlags","","",null,null],[6,"SubpassDescriptionFlags","","",null,null],[6,"AccessFlagBits","","",null,null],[6,"AccessFlags","","",null,null],[6,"DependencyFlagBits","","",null,null],[6,"DependencyFlags","","",null,null],[6,"CommandPoolCreateFlagBits","","",null,null],[6,"CommandPoolCreateFlags","","",null,null],[6,"CommandPoolResetFlagBits","","",null,null],[6,"CommandPoolResetFlags","","",null,null],[6,"CommandBufferUsageFlagBits","","",null,null],[6,"CommandBufferUsageFlags","","",null,null],[6,"QueryControlFlagBits","","",null,null],[6,"QueryControlFlags","","",null,null],[6,"CommandBufferResetFlagBits","","",null,null],[6,"CommandBufferResetFlags","","",null,null],[6,"StencilFaceFlagBits","","",null,null],[6,"StencilFaceFlags","","",null,null],[6,"DisplayPlaneAlphaFlagBitsKHR","","",null,null],[6,"DisplayModeCreateFlagsKHR","","",null,null],[6,"DisplayPlaneAlphaFlagsKHR","","",null,null],[6,"DisplaySurfaceCreateFlagsKHR","","",null,null],[6,"ColorSpaceKHR","","",null,null],[6,"PresentModeKHR","","",null,null],[6,"SurfaceTransformFlagBitsKHR","","",null,null],[6,"SurfaceTransformFlagsKHR","","",null,null],[6,"CompositeAlphaFlagBitsKHR","","",null,null],[6,"CompositeAlphaFlagsKHR","","",null,null],[6,"DebugReportObjectTypeEXT","","",null,null],[6,"DebugReportErrorEXT","","",null,null],[6,"DebugReportFlagBitsEXT","","",null,null],[6,"DebugReportFlagsEXT","","",null,null],[6,"PFN_vkAllocationFunction","","",null,null],[6,"PFN_vkReallocationFunction","","",null,null],[6,"PFN_vkFreeFunction","","",null,null],[6,"PFN_vkInternalAllocationNotification","","",null,null],[6,"PFN_vkInternalFreeNotification","","",null,null],[6,"PFN_vkDebugReportCallbackEXT","","",null,null],[6,"PFN_vkVoidFunction","","",null,null],[6,"SwapchainCreateFlagsKHR","","",null,null],[6,"XlibSurfaceCreateFlagsKHR","","",null,null],[6,"XcbSurfaceCreateFlagsKHR","","",null,null],[6,"WaylandSurfaceCreateFlagsKHR","","",null,null],[6,"MirSurfaceCreateFlagsKHR","","",null,null],[6,"AndroidSurfaceCreateFlagsKHR","","",null,null],[6,"Win32SurfaceCreateFlagsKHR","","",null,null],[17,"LOD_CLAMP_NONE","","",null,null],[17,"REMAINING_MIP_LEVELS","","",null,null],[17,"REMAINING_ARRAY_LAYERS","","",null,null],[17,"WHOLE_SIZE","","",null,null],[17,"ATTACHMENT_UNUSED","","",null,null],[17,"TRUE","","",null,null],[17,"FALSE","","",null,null],[17,"QUEUE_FAMILY_IGNORED","","",null,null],[17,"SUBPASS_EXTERNAL","","",null,null],[17,"MAX_PHYSICAL_DEVICE_NAME_SIZE","","",null,null],[17,"UUID_SIZE","","",null,null],[17,"MAX_MEMORY_TYPES","","",null,null],[17,"MAX_MEMORY_HEAPS","","",null,null],[17,"MAX_EXTENSION_NAME_SIZE","","",null,null],[17,"MAX_DESCRIPTION_SIZE","","",null,null],[17,"PIPELINE_CACHE_HEADER_VERSION_ONE","","",null,null],[17,"SUCCESS","","",null,null],[17,"NOT_READY","","",null,null],[17,"TIMEOUT","","",null,null],[17,"EVENT_SET","","",null,null],[17,"EVENT_RESET","","",null,null],[17,"INCOMPLETE","","",null,null],[17,"ERROR_OUT_OF_HOST_MEMORY","","",null,null],[17,"ERROR_OUT_OF_DEVICE_MEMORY","","",null,null],[17,"ERROR_INITIALIZATION_FAILED","","",null,null],[17,"ERROR_DEVICE_LOST","","",null,null],[17,"ERROR_MEMORY_MAP_FAILED","","",null,null],[17,"ERROR_LAYER_NOT_PRESENT","","",null,null],[17,"ERROR_EXTENSION_NOT_PRESENT","","",null,null],[17,"ERROR_FEATURE_NOT_PRESENT","","",null,null],[17,"ERROR_INCOMPATIBLE_DRIVER","","",null,null],[17,"ERROR_TOO_MANY_OBJECTS","","",null,null],[17,"ERROR_FORMAT_NOT_SUPPORTED","","",null,null],[17,"ERROR_SURFACE_LOST_KHR","","",null,null],[17,"ERROR_NATIVE_WINDOW_IN_USE_KHR","","",null,null],[17,"SUBOPTIMAL_KHR","","",null,null],[17,"ERROR_OUT_OF_DATE_KHR","","",null,null],[17,"ERROR_INCOMPATIBLE_DISPLAY_KHR","","",null,null],[17,"ERROR_VALIDATION_FAILED_EXT","","",null,null],[17,"STRUCTURE_TYPE_APPLICATION_INFO","","",null,null],[17,"STRUCTURE_TYPE_INSTANCE_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_DEVICE_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_SUBMIT_INFO","","",null,null],[17,"STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_MAPPED_MEMORY_RANGE","","",null,null],[17,"STRUCTURE_TYPE_BIND_SPARSE_INFO","","",null,null],[17,"STRUCTURE_TYPE_FENCE_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_EVENT_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_BUFFER_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_IMAGE_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_SAMPLER_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET","","",null,null],[17,"STRUCTURE_TYPE_COPY_DESCRIPTOR_SET","","",null,null],[17,"STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO","","",null,null],[17,"STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO","","",null,null],[17,"STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO","","",null,null],[17,"STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER","","",null,null],[17,"STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER","","",null,null],[17,"STRUCTURE_TYPE_MEMORY_BARRIER","","",null,null],[17,"STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR","","",null,null],[17,"STRUCTURE_TYPE_PRESENT_INFO_KHR","","",null,null],[17,"STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR","","",null,null],[17,"STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR","","",null,null],[17,"STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR","","",null,null],[17,"STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR","","",null,null],[17,"STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR","","",null,null],[17,"STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR","","",null,null],[17,"STRUCTURE_TYPE_MIR_SURFACE_CREATE_INFO_KHR","","",null,null],[17,"STRUCTURE_TYPE_ANDROID_SURFACE_CREATE_INFO_KHR","","",null,null],[17,"STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR","","",null,null],[17,"STRUCTURE_TYPE_DEBUG_REPORT_CREATE_INFO_EXT","","",null,null],[17,"SYSTEM_ALLOCATION_SCOPE_COMMAND","","",null,null],[17,"SYSTEM_ALLOCATION_SCOPE_OBJECT","","",null,null],[17,"SYSTEM_ALLOCATION_SCOPE_CACHE","","",null,null],[17,"SYSTEM_ALLOCATION_SCOPE_DEVICE","","",null,null],[17,"SYSTEM_ALLOCATION_SCOPE_INSTANCE","","",null,null],[17,"INTERNAL_ALLOCATION_TYPE_EXECUTABLE","","",null,null],[17,"FORMAT_UNDEFINED","","",null,null],[17,"FORMAT_R4G4_UNORM_PACK8","","",null,null],[17,"FORMAT_R4G4B4A4_UNORM_PACK16","","",null,null],[17,"FORMAT_B4G4R4A4_UNORM_PACK16","","",null,null],[17,"FORMAT_R5G6B5_UNORM_PACK16","","",null,null],[17,"FORMAT_B5G6R5_UNORM_PACK16","","",null,null],[17,"FORMAT_R5G5B5A1_UNORM_PACK16","","",null,null],[17,"FORMAT_B5G5R5A1_UNORM_PACK16","","",null,null],[17,"FORMAT_A1R5G5B5_UNORM_PACK16","","",null,null],[17,"FORMAT_R8_UNORM","","",null,null],[17,"FORMAT_R8_SNORM","","",null,null],[17,"FORMAT_R8_USCALED","","",null,null],[17,"FORMAT_R8_SSCALED","","",null,null],[17,"FORMAT_R8_UINT","","",null,null],[17,"FORMAT_R8_SINT","","",null,null],[17,"FORMAT_R8_SRGB","","",null,null],[17,"FORMAT_R8G8_UNORM","","",null,null],[17,"FORMAT_R8G8_SNORM","","",null,null],[17,"FORMAT_R8G8_USCALED","","",null,null],[17,"FORMAT_R8G8_SSCALED","","",null,null],[17,"FORMAT_R8G8_UINT","","",null,null],[17,"FORMAT_R8G8_SINT","","",null,null],[17,"FORMAT_R8G8_SRGB","","",null,null],[17,"FORMAT_R8G8B8_UNORM","","",null,null],[17,"FORMAT_R8G8B8_SNORM","","",null,null],[17,"FORMAT_R8G8B8_USCALED","","",null,null],[17,"FORMAT_R8G8B8_SSCALED","","",null,null],[17,"FORMAT_R8G8B8_UINT","","",null,null],[17,"FORMAT_R8G8B8_SINT","","",null,null],[17,"FORMAT_R8G8B8_SRGB","","",null,null],[17,"FORMAT_B8G8R8_UNORM","","",null,null],[17,"FORMAT_B8G8R8_SNORM","","",null,null],[17,"FORMAT_B8G8R8_USCALED","","",null,null],[17,"FORMAT_B8G8R8_SSCALED","","",null,null],[17,"FORMAT_B8G8R8_UINT","","",null,null],[17,"FORMAT_B8G8R8_SINT","","",null,null],[17,"FORMAT_B8G8R8_SRGB","","",null,null],[17,"FORMAT_R8G8B8A8_UNORM","","",null,null],[17,"FORMAT_R8G8B8A8_SNORM","","",null,null],[17,"FORMAT_R8G8B8A8_USCALED","","",null,null],[17,"FORMAT_R8G8B8A8_SSCALED","","",null,null],[17,"FORMAT_R8G8B8A8_UINT","","",null,null],[17,"FORMAT_R8G8B8A8_SINT","","",null,null],[17,"FORMAT_R8G8B8A8_SRGB","","",null,null],[17,"FORMAT_B8G8R8A8_UNORM","","",null,null],[17,"FORMAT_B8G8R8A8_SNORM","","",null,null],[17,"FORMAT_B8G8R8A8_USCALED","","",null,null],[17,"FORMAT_B8G8R8A8_SSCALED","","",null,null],[17,"FORMAT_B8G8R8A8_UINT","","",null,null],[17,"FORMAT_B8G8R8A8_SINT","","",null,null],[17,"FORMAT_B8G8R8A8_SRGB","","",null,null],[17,"FORMAT_A8B8G8R8_UNORM_PACK32","","",null,null],[17,"FORMAT_A8B8G8R8_SNORM_PACK32","","",null,null],[17,"FORMAT_A8B8G8R8_USCALED_PACK32","","",null,null],[17,"FORMAT_A8B8G8R8_SSCALED_PACK32","","",null,null],[17,"FORMAT_A8B8G8R8_UINT_PACK32","","",null,null],[17,"FORMAT_A8B8G8R8_SINT_PACK32","","",null,null],[17,"FORMAT_A8B8G8R8_SRGB_PACK32","","",null,null],[17,"FORMAT_A2R10G10B10_UNORM_PACK32","","",null,null],[17,"FORMAT_A2R10G10B10_SNORM_PACK32","","",null,null],[17,"FORMAT_A2R10G10B10_USCALED_PACK32","","",null,null],[17,"FORMAT_A2R10G10B10_SSCALED_PACK32","","",null,null],[17,"FORMAT_A2R10G10B10_UINT_PACK32","","",null,null],[17,"FORMAT_A2R10G10B10_SINT_PACK32","","",null,null],[17,"FORMAT_A2B10G10R10_UNORM_PACK32","","",null,null],[17,"FORMAT_A2B10G10R10_SNORM_PACK32","","",null,null],[17,"FORMAT_A2B10G10R10_USCALED_PACK32","","",null,null],[17,"FORMAT_A2B10G10R10_SSCALED_PACK32","","",null,null],[17,"FORMAT_A2B10G10R10_UINT_PACK32","","",null,null],[17,"FORMAT_A2B10G10R10_SINT_PACK32","","",null,null],[17,"FORMAT_R16_UNORM","","",null,null],[17,"FORMAT_R16_SNORM","","",null,null],[17,"FORMAT_R16_USCALED","","",null,null],[17,"FORMAT_R16_SSCALED","","",null,null],[17,"FORMAT_R16_UINT","","",null,null],[17,"FORMAT_R16_SINT","","",null,null],[17,"FORMAT_R16_SFLOAT","","",null,null],[17,"FORMAT_R16G16_UNORM","","",null,null],[17,"FORMAT_R16G16_SNORM","","",null,null],[17,"FORMAT_R16G16_USCALED","","",null,null],[17,"FORMAT_R16G16_SSCALED","","",null,null],[17,"FORMAT_R16G16_UINT","","",null,null],[17,"FORMAT_R16G16_SINT","","",null,null],[17,"FORMAT_R16G16_SFLOAT","","",null,null],[17,"FORMAT_R16G16B16_UNORM","","",null,null],[17,"FORMAT_R16G16B16_SNORM","","",null,null],[17,"FORMAT_R16G16B16_USCALED","","",null,null],[17,"FORMAT_R16G16B16_SSCALED","","",null,null],[17,"FORMAT_R16G16B16_UINT","","",null,null],[17,"FORMAT_R16G16B16_SINT","","",null,null],[17,"FORMAT_R16G16B16_SFLOAT","","",null,null],[17,"FORMAT_R16G16B16A16_UNORM","","",null,null],[17,"FORMAT_R16G16B16A16_SNORM","","",null,null],[17,"FORMAT_R16G16B16A16_USCALED","","",null,null],[17,"FORMAT_R16G16B16A16_SSCALED","","",null,null],[17,"FORMAT_R16G16B16A16_UINT","","",null,null],[17,"FORMAT_R16G16B16A16_SINT","","",null,null],[17,"FORMAT_R16G16B16A16_SFLOAT","","",null,null],[17,"FORMAT_R32_UINT","","",null,null],[17,"FORMAT_R32_SINT","","",null,null],[17,"FORMAT_R32_SFLOAT","","",null,null],[17,"FORMAT_R32G32_UINT","","",null,null],[17,"FORMAT_R32G32_SINT","","",null,null],[17,"FORMAT_R32G32_SFLOAT","","",null,null],[17,"FORMAT_R32G32B32_UINT","","",null,null],[17,"FORMAT_R32G32B32_SINT","","",null,null],[17,"FORMAT_R32G32B32_SFLOAT","","",null,null],[17,"FORMAT_R32G32B32A32_UINT","","",null,null],[17,"FORMAT_R32G32B32A32_SINT","","",null,null],[17,"FORMAT_R32G32B32A32_SFLOAT","","",null,null],[17,"FORMAT_R64_UINT","","",null,null],[17,"FORMAT_R64_SINT","","",null,null],[17,"FORMAT_R64_SFLOAT","","",null,null],[17,"FORMAT_R64G64_UINT","","",null,null],[17,"FORMAT_R64G64_SINT","","",null,null],[17,"FORMAT_R64G64_SFLOAT","","",null,null],[17,"FORMAT_R64G64B64_UINT","","",null,null],[17,"FORMAT_R64G64B64_SINT","","",null,null],[17,"FORMAT_R64G64B64_SFLOAT","","",null,null],[17,"FORMAT_R64G64B64A64_UINT","","",null,null],[17,"FORMAT_R64G64B64A64_SINT","","",null,null],[17,"FORMAT_R64G64B64A64_SFLOAT","","",null,null],[17,"FORMAT_B10G11R11_UFLOAT_PACK32","","",null,null],[17,"FORMAT_E5B9G9R9_UFLOAT_PACK32","","",null,null],[17,"FORMAT_D16_UNORM","","",null,null],[17,"FORMAT_X8_D24_UNORM_PACK32","","",null,null],[17,"FORMAT_D32_SFLOAT","","",null,null],[17,"FORMAT_S8_UINT","","",null,null],[17,"FORMAT_D16_UNORM_S8_UINT","","",null,null],[17,"FORMAT_D24_UNORM_S8_UINT","","",null,null],[17,"FORMAT_D32_SFLOAT_S8_UINT","","",null,null],[17,"FORMAT_BC1_RGB_UNORM_BLOCK","","",null,null],[17,"FORMAT_BC1_RGB_SRGB_BLOCK","","",null,null],[17,"FORMAT_BC1_RGBA_UNORM_BLOCK","","",null,null],[17,"FORMAT_BC1_RGBA_SRGB_BLOCK","","",null,null],[17,"FORMAT_BC2_UNORM_BLOCK","","",null,null],[17,"FORMAT_BC2_SRGB_BLOCK","","",null,null],[17,"FORMAT_BC3_UNORM_BLOCK","","",null,null],[17,"FORMAT_BC3_SRGB_BLOCK","","",null,null],[17,"FORMAT_BC4_UNORM_BLOCK","","",null,null],[17,"FORMAT_BC4_SNORM_BLOCK","","",null,null],[17,"FORMAT_BC5_UNORM_BLOCK","","",null,null],[17,"FORMAT_BC5_SNORM_BLOCK","","",null,null],[17,"FORMAT_BC6H_UFLOAT_BLOCK","","",null,null],[17,"FORMAT_BC6H_SFLOAT_BLOCK","","",null,null],[17,"FORMAT_BC7_UNORM_BLOCK","","",null,null],[17,"FORMAT_BC7_SRGB_BLOCK","","",null,null],[17,"FORMAT_ETC2_R8G8B8_UNORM_BLOCK","","",null,null],[17,"FORMAT_ETC2_R8G8B8_SRGB_BLOCK","","",null,null],[17,"FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK","","",null,null],[17,"FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK","","",null,null],[17,"FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK","","",null,null],[17,"FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK","","",null,null],[17,"FORMAT_EAC_R11_UNORM_BLOCK","","",null,null],[17,"FORMAT_EAC_R11_SNORM_BLOCK","","",null,null],[17,"FORMAT_EAC_R11G11_UNORM_BLOCK","","",null,null],[17,"FORMAT_EAC_R11G11_SNORM_BLOCK","","",null,null],[17,"FORMAT_ASTC_4x4_UNORM_BLOCK","","",null,null],[17,"FORMAT_ASTC_4x4_SRGB_BLOCK","","",null,null],[17,"FORMAT_ASTC_5x4_UNORM_BLOCK","","",null,null],[17,"FORMAT_ASTC_5x4_SRGB_BLOCK","","",null,null],[17,"FORMAT_ASTC_5x5_UNORM_BLOCK","","",null,null],[17,"FORMAT_ASTC_5x5_SRGB_BLOCK","","",null,null],[17,"FORMAT_ASTC_6x5_UNORM_BLOCK","","",null,null],[17,"FORMAT_ASTC_6x5_SRGB_BLOCK","","",null,null],[17,"FORMAT_ASTC_6x6_UNORM_BLOCK","","",null,null],[17,"FORMAT_ASTC_6x6_SRGB_BLOCK","","",null,null],[17,"FORMAT_ASTC_8x5_UNORM_BLOCK","","",null,null],[17,"FORMAT_ASTC_8x5_SRGB_BLOCK","","",null,null],[17,"FORMAT_ASTC_8x6_UNORM_BLOCK","","",null,null],[17,"FORMAT_ASTC_8x6_SRGB_BLOCK","","",null,null],[17,"FORMAT_ASTC_8x8_UNORM_BLOCK","","",null,null],[17,"FORMAT_ASTC_8x8_SRGB_BLOCK","","",null,null],[17,"FORMAT_ASTC_10x5_UNORM_BLOCK","","",null,null],[17,"FORMAT_ASTC_10x5_SRGB_BLOCK","","",null,null],[17,"FORMAT_ASTC_10x6_UNORM_BLOCK","","",null,null],[17,"FORMAT_ASTC_10x6_SRGB_BLOCK","","",null,null],[17,"FORMAT_ASTC_10x8_UNORM_BLOCK","","",null,null],[17,"FORMAT_ASTC_10x8_SRGB_BLOCK","","",null,null],[17,"FORMAT_ASTC_10x10_UNORM_BLOCK","","",null,null],[17,"FORMAT_ASTC_10x10_SRGB_BLOCK","","",null,null],[17,"FORMAT_ASTC_12x10_UNORM_BLOCK","","",null,null],[17,"FORMAT_ASTC_12x10_SRGB_BLOCK","","",null,null],[17,"FORMAT_ASTC_12x12_UNORM_BLOCK","","",null,null],[17,"FORMAT_ASTC_12x12_SRGB_BLOCK","","",null,null],[17,"IMAGE_TYPE_1D","","",null,null],[17,"IMAGE_TYPE_2D","","",null,null],[17,"IMAGE_TYPE_3D","","",null,null],[17,"IMAGE_TILING_OPTIMAL","","",null,null],[17,"IMAGE_TILING_LINEAR","","",null,null],[17,"PHYSICAL_DEVICE_TYPE_OTHER","","",null,null],[17,"PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU","","",null,null],[17,"PHYSICAL_DEVICE_TYPE_DISCRETE_GPU","","",null,null],[17,"PHYSICAL_DEVICE_TYPE_VIRTUAL_GPU","","",null,null],[17,"PHYSICAL_DEVICE_TYPE_CPU","","",null,null],[17,"QUERY_TYPE_OCCLUSION","","",null,null],[17,"QUERY_TYPE_PIPELINE_STATISTICS","","",null,null],[17,"QUERY_TYPE_TIMESTAMP","","",null,null],[17,"SHARING_MODE_EXCLUSIVE","","",null,null],[17,"SHARING_MODE_CONCURRENT","","",null,null],[17,"IMAGE_LAYOUT_UNDEFINED","","",null,null],[17,"IMAGE_LAYOUT_GENERAL","","",null,null],[17,"IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL","","",null,null],[17,"IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL","","",null,null],[17,"IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL","","",null,null],[17,"IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL","","",null,null],[17,"IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL","","",null,null],[17,"IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL","","",null,null],[17,"IMAGE_LAYOUT_PREINITIALIZED","","",null,null],[17,"IMAGE_LAYOUT_PRESENT_SRC_KHR","","",null,null],[17,"IMAGE_VIEW_TYPE_1D","","",null,null],[17,"IMAGE_VIEW_TYPE_2D","","",null,null],[17,"IMAGE_VIEW_TYPE_3D","","",null,null],[17,"IMAGE_VIEW_TYPE_CUBE","","",null,null],[17,"IMAGE_VIEW_TYPE_1D_ARRAY","","",null,null],[17,"IMAGE_VIEW_TYPE_2D_ARRAY","","",null,null],[17,"IMAGE_VIEW_TYPE_CUBE_ARRAY","","",null,null],[17,"COMPONENT_SWIZZLE_IDENTITY","","",null,null],[17,"COMPONENT_SWIZZLE_ZERO","","",null,null],[17,"COMPONENT_SWIZZLE_ONE","","",null,null],[17,"COMPONENT_SWIZZLE_R","","",null,null],[17,"COMPONENT_SWIZZLE_G","","",null,null],[17,"COMPONENT_SWIZZLE_B","","",null,null],[17,"COMPONENT_SWIZZLE_A","","",null,null],[17,"VERTEX_INPUT_RATE_VERTEX","","",null,null],[17,"VERTEX_INPUT_RATE_INSTANCE","","",null,null],[17,"PRIMITIVE_TOPOLOGY_POINT_LIST","","",null,null],[17,"PRIMITIVE_TOPOLOGY_LINE_LIST","","",null,null],[17,"PRIMITIVE_TOPOLOGY_LINE_STRIP","","",null,null],[17,"PRIMITIVE_TOPOLOGY_TRIANGLE_LIST","","",null,null],[17,"PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP","","",null,null],[17,"PRIMITIVE_TOPOLOGY_TRIANGLE_FAN","","",null,null],[17,"PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY","","",null,null],[17,"PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY","","",null,null],[17,"PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY","","",null,null],[17,"PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY","","",null,null],[17,"PRIMITIVE_TOPOLOGY_PATCH_LIST","","",null,null],[17,"POLYGON_MODE_FILL","","",null,null],[17,"POLYGON_MODE_LINE","","",null,null],[17,"POLYGON_MODE_POINT","","",null,null],[17,"FRONT_FACE_COUNTER_CLOCKWISE","","",null,null],[17,"FRONT_FACE_CLOCKWISE","","",null,null],[17,"COMPARE_OP_NEVER","","",null,null],[17,"COMPARE_OP_LESS","","",null,null],[17,"COMPARE_OP_EQUAL","","",null,null],[17,"COMPARE_OP_LESS_OR_EQUAL","","",null,null],[17,"COMPARE_OP_GREATER","","",null,null],[17,"COMPARE_OP_NOT_EQUAL","","",null,null],[17,"COMPARE_OP_GREATER_OR_EQUAL","","",null,null],[17,"COMPARE_OP_ALWAYS","","",null,null],[17,"STENCIL_OP_KEEP","","",null,null],[17,"STENCIL_OP_ZERO","","",null,null],[17,"STENCIL_OP_REPLACE","","",null,null],[17,"STENCIL_OP_INCREMENT_AND_CLAMP","","",null,null],[17,"STENCIL_OP_DECREMENT_AND_CLAMP","","",null,null],[17,"STENCIL_OP_INVERT","","",null,null],[17,"STENCIL_OP_INCREMENT_AND_WRAP","","",null,null],[17,"STENCIL_OP_DECREMENT_AND_WRAP","","",null,null],[17,"LOGIC_OP_CLEAR","","",null,null],[17,"LOGIC_OP_AND","","",null,null],[17,"LOGIC_OP_AND_REVERSE","","",null,null],[17,"LOGIC_OP_COPY","","",null,null],[17,"LOGIC_OP_AND_INVERTED","","",null,null],[17,"LOGIC_OP_NO_OP","","",null,null],[17,"LOGIC_OP_XOR","","",null,null],[17,"LOGIC_OP_OR","","",null,null],[17,"LOGIC_OP_NOR","","",null,null],[17,"LOGIC_OP_EQUIVALENT","","",null,null],[17,"LOGIC_OP_INVERT","","",null,null],[17,"LOGIC_OP_OR_REVERSE","","",null,null],[17,"LOGIC_OP_COPY_INVERTED","","",null,null],[17,"LOGIC_OP_OR_INVERTED","","",null,null],[17,"LOGIC_OP_NAND","","",null,null],[17,"LOGIC_OP_SET","","",null,null],[17,"BLEND_FACTOR_ZERO","","",null,null],[17,"BLEND_FACTOR_ONE","","",null,null],[17,"BLEND_FACTOR_SRC_COLOR","","",null,null],[17,"BLEND_FACTOR_ONE_MINUS_SRC_COLOR","","",null,null],[17,"BLEND_FACTOR_DST_COLOR","","",null,null],[17,"BLEND_FACTOR_ONE_MINUS_DST_COLOR","","",null,null],[17,"BLEND_FACTOR_SRC_ALPHA","","",null,null],[17,"BLEND_FACTOR_ONE_MINUS_SRC_ALPHA","","",null,null],[17,"BLEND_FACTOR_DST_ALPHA","","",null,null],[17,"BLEND_FACTOR_ONE_MINUS_DST_ALPHA","","",null,null],[17,"BLEND_FACTOR_CONSTANT_COLOR","","",null,null],[17,"BLEND_FACTOR_ONE_MINUS_CONSTANT_COLOR","","",null,null],[17,"BLEND_FACTOR_CONSTANT_ALPHA","","",null,null],[17,"BLEND_FACTOR_ONE_MINUS_CONSTANT_ALPHA","","",null,null],[17,"BLEND_FACTOR_SRC_ALPHA_SATURATE","","",null,null],[17,"BLEND_FACTOR_SRC1_COLOR","","",null,null],[17,"BLEND_FACTOR_ONE_MINUS_SRC1_COLOR","","",null,null],[17,"BLEND_FACTOR_SRC1_ALPHA","","",null,null],[17,"BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA","","",null,null],[17,"BLEND_OP_ADD","","",null,null],[17,"BLEND_OP_SUBTRACT","","",null,null],[17,"BLEND_OP_REVERSE_SUBTRACT","","",null,null],[17,"BLEND_OP_MIN","","",null,null],[17,"BLEND_OP_MAX","","",null,null],[17,"DYNAMIC_STATE_VIEWPORT","","",null,null],[17,"DYNAMIC_STATE_SCISSOR","","",null,null],[17,"DYNAMIC_STATE_LINE_WIDTH","","",null,null],[17,"DYNAMIC_STATE_DEPTH_BIAS","","",null,null],[17,"DYNAMIC_STATE_BLEND_CONSTANTS","","",null,null],[17,"DYNAMIC_STATE_DEPTH_BOUNDS","","",null,null],[17,"DYNAMIC_STATE_STENCIL_COMPARE_MASK","","",null,null],[17,"DYNAMIC_STATE_STENCIL_WRITE_MASK","","",null,null],[17,"DYNAMIC_STATE_STENCIL_REFERENCE","","",null,null],[17,"FILTER_NEAREST","","",null,null],[17,"FILTER_LINEAR","","",null,null],[17,"SAMPLER_MIPMAP_MODE_NEAREST","","",null,null],[17,"SAMPLER_MIPMAP_MODE_LINEAR","","",null,null],[17,"SAMPLER_ADDRESS_MODE_REPEAT","","",null,null],[17,"SAMPLER_ADDRESS_MODE_MIRRORED_REPEAT","","",null,null],[17,"SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE","","",null,null],[17,"SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER","","",null,null],[17,"SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE","","",null,null],[17,"BORDER_COLOR_FLOAT_TRANSPARENT_BLACK","","",null,null],[17,"BORDER_COLOR_INT_TRANSPARENT_BLACK","","",null,null],[17,"BORDER_COLOR_FLOAT_OPAQUE_BLACK","","",null,null],[17,"BORDER_COLOR_INT_OPAQUE_BLACK","","",null,null],[17,"BORDER_COLOR_FLOAT_OPAQUE_WHITE","","",null,null],[17,"BORDER_COLOR_INT_OPAQUE_WHITE","","",null,null],[17,"DESCRIPTOR_TYPE_SAMPLER","","",null,null],[17,"DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER","","",null,null],[17,"DESCRIPTOR_TYPE_SAMPLED_IMAGE","","",null,null],[17,"DESCRIPTOR_TYPE_STORAGE_IMAGE","","",null,null],[17,"DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER","","",null,null],[17,"DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER","","",null,null],[17,"DESCRIPTOR_TYPE_UNIFORM_BUFFER","","",null,null],[17,"DESCRIPTOR_TYPE_STORAGE_BUFFER","","",null,null],[17,"DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC","","",null,null],[17,"DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC","","",null,null],[17,"DESCRIPTOR_TYPE_INPUT_ATTACHMENT","","",null,null],[17,"ATTACHMENT_LOAD_OP_LOAD","","",null,null],[17,"ATTACHMENT_LOAD_OP_CLEAR","","",null,null],[17,"ATTACHMENT_LOAD_OP_DONT_CARE","","",null,null],[17,"ATTACHMENT_STORE_OP_STORE","","",null,null],[17,"ATTACHMENT_STORE_OP_DONT_CARE","","",null,null],[17,"PIPELINE_BIND_POINT_GRAPHICS","","",null,null],[17,"PIPELINE_BIND_POINT_COMPUTE","","",null,null],[17,"COMMAND_BUFFER_LEVEL_PRIMARY","","",null,null],[17,"COMMAND_BUFFER_LEVEL_SECONDARY","","",null,null],[17,"INDEX_TYPE_UINT16","","",null,null],[17,"INDEX_TYPE_UINT32","","",null,null],[17,"SUBPASS_CONTENTS_INLINE","","",null,null],[17,"SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS","","",null,null],[17,"FORMAT_FEATURE_SAMPLED_IMAGE_BIT","","",null,null],[17,"FORMAT_FEATURE_STORAGE_IMAGE_BIT","","",null,null],[17,"FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT","","",null,null],[17,"FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT","","",null,null],[17,"FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT","","",null,null],[17,"FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT","","",null,null],[17,"FORMAT_FEATURE_VERTEX_BUFFER_BIT","","",null,null],[17,"FORMAT_FEATURE_COLOR_ATTACHMENT_BIT","","",null,null],[17,"FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT","","",null,null],[17,"FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT","","",null,null],[17,"FORMAT_FEATURE_BLIT_SRC_BIT","","",null,null],[17,"FORMAT_FEATURE_BLIT_DST_BIT","","",null,null],[17,"FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT","","",null,null],[17,"IMAGE_USAGE_TRANSFER_SRC_BIT","","",null,null],[17,"IMAGE_USAGE_TRANSFER_DST_BIT","","",null,null],[17,"IMAGE_USAGE_SAMPLED_BIT","","",null,null],[17,"IMAGE_USAGE_STORAGE_BIT","","",null,null],[17,"IMAGE_USAGE_COLOR_ATTACHMENT_BIT","","",null,null],[17,"IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT","","",null,null],[17,"IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT","","",null,null],[17,"IMAGE_USAGE_INPUT_ATTACHMENT_BIT","","",null,null],[17,"IMAGE_CREATE_SPARSE_BINDING_BIT","","",null,null],[17,"IMAGE_CREATE_SPARSE_RESIDENCY_BIT","","",null,null],[17,"IMAGE_CREATE_SPARSE_ALIASED_BIT","","",null,null],[17,"IMAGE_CREATE_MUTABLE_FORMAT_BIT","","",null,null],[17,"IMAGE_CREATE_CUBE_COMPATIBLE_BIT","","",null,null],[17,"SAMPLE_COUNT_1_BIT","","",null,null],[17,"SAMPLE_COUNT_2_BIT","","",null,null],[17,"SAMPLE_COUNT_4_BIT","","",null,null],[17,"SAMPLE_COUNT_8_BIT","","",null,null],[17,"SAMPLE_COUNT_16_BIT","","",null,null],[17,"SAMPLE_COUNT_32_BIT","","",null,null],[17,"SAMPLE_COUNT_64_BIT","","",null,null],[17,"QUEUE_GRAPHICS_BIT","","",null,null],[17,"QUEUE_COMPUTE_BIT","","",null,null],[17,"QUEUE_TRANSFER_BIT","","",null,null],[17,"QUEUE_SPARSE_BINDING_BIT","","",null,null],[17,"MEMORY_PROPERTY_DEVICE_LOCAL_BIT","","",null,null],[17,"MEMORY_PROPERTY_HOST_VISIBLE_BIT","","",null,null],[17,"MEMORY_PROPERTY_HOST_COHERENT_BIT","","",null,null],[17,"MEMORY_PROPERTY_HOST_CACHED_BIT","","",null,null],[17,"MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT","","",null,null],[17,"MEMORY_HEAP_DEVICE_LOCAL_BIT","","",null,null],[17,"PIPELINE_STAGE_TOP_OF_PIPE_BIT","","",null,null],[17,"PIPELINE_STAGE_DRAW_INDIRECT_BIT","","",null,null],[17,"PIPELINE_STAGE_VERTEX_INPUT_BIT","","",null,null],[17,"PIPELINE_STAGE_VERTEX_SHADER_BIT","","",null,null],[17,"PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT","","",null,null],[17,"PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT","","",null,null],[17,"PIPELINE_STAGE_GEOMETRY_SHADER_BIT","","",null,null],[17,"PIPELINE_STAGE_FRAGMENT_SHADER_BIT","","",null,null],[17,"PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT","","",null,null],[17,"PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT","","",null,null],[17,"PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT","","",null,null],[17,"PIPELINE_STAGE_COMPUTE_SHADER_BIT","","",null,null],[17,"PIPELINE_STAGE_TRANSFER_BIT","","",null,null],[17,"PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT","","",null,null],[17,"PIPELINE_STAGE_HOST_BIT","","",null,null],[17,"PIPELINE_STAGE_ALL_GRAPHICS_BIT","","",null,null],[17,"PIPELINE_STAGE_ALL_COMMANDS_BIT","","",null,null],[17,"IMAGE_ASPECT_COLOR_BIT","","",null,null],[17,"IMAGE_ASPECT_DEPTH_BIT","","",null,null],[17,"IMAGE_ASPECT_STENCIL_BIT","","",null,null],[17,"IMAGE_ASPECT_METADATA_BIT","","",null,null],[17,"SPARSE_IMAGE_FORMAT_SINGLE_MIPTAIL_BIT","","",null,null],[17,"SPARSE_IMAGE_FORMAT_ALIGNED_MIP_SIZE_BIT","","",null,null],[17,"SPARSE_IMAGE_FORMAT_NONSTANDARD_BLOCK_SIZE_BIT","","",null,null],[17,"SPARSE_MEMORY_BIND_METADATA_BIT","","",null,null],[17,"FENCE_CREATE_SIGNALED_BIT","","",null,null],[17,"QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_VERTICES_BIT","","",null,null],[17,"QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_PRIMITIVES_BIT","","",null,null],[17,"QUERY_PIPELINE_STATISTIC_VERTEX_SHADER_INVOCATIONS_BIT","","",null,null],[17,"QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_INVOCATIONS_BIT","","",null,null],[17,"QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_PRIMITIVES_BIT","","",null,null],[17,"QUERY_PIPELINE_STATISTIC_CLIPPING_INVOCATIONS_BIT","","",null,null],[17,"QUERY_PIPELINE_STATISTIC_CLIPPING_PRIMITIVES_BIT","","",null,null],[17,"QUERY_PIPELINE_STATISTIC_FRAGMENT_SHADER_INVOCATIONS_BIT","","",null,null],[17,"QUERY_PIPELINE_STATISTIC_TESSELLATION_CONTROL_SHADER_PATCHES_BIT","","",null,null],[17,"QUERY_PIPELINE_STATISTIC_TESSELLATION_EVALUATION_SHADER_INVOCATIONS_BIT","","",null,null],[17,"QUERY_PIPELINE_STATISTIC_COMPUTE_SHADER_INVOCATIONS_BIT","","",null,null],[17,"QUERY_RESULT_64_BIT","","",null,null],[17,"QUERY_RESULT_WAIT_BIT","","",null,null],[17,"QUERY_RESULT_WITH_AVAILABILITY_BIT","","",null,null],[17,"QUERY_RESULT_PARTIAL_BIT","","",null,null],[17,"BUFFER_CREATE_SPARSE_BINDING_BIT","","",null,null],[17,"BUFFER_CREATE_SPARSE_RESIDENCY_BIT","","",null,null],[17,"BUFFER_CREATE_SPARSE_ALIASED_BIT","","",null,null],[17,"BUFFER_USAGE_TRANSFER_SRC_BIT","","",null,null],[17,"BUFFER_USAGE_TRANSFER_DST_BIT","","",null,null],[17,"BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT","","",null,null],[17,"BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT","","",null,null],[17,"BUFFER_USAGE_UNIFORM_BUFFER_BIT","","",null,null],[17,"BUFFER_USAGE_STORAGE_BUFFER_BIT","","",null,null],[17,"BUFFER_USAGE_INDEX_BUFFER_BIT","","",null,null],[17,"BUFFER_USAGE_VERTEX_BUFFER_BIT","","",null,null],[17,"BUFFER_USAGE_INDIRECT_BUFFER_BIT","","",null,null],[17,"PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT","","",null,null],[17,"PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT","","",null,null],[17,"PIPELINE_CREATE_DERIVATIVE_BIT","","",null,null],[17,"SHADER_STAGE_VERTEX_BIT","","",null,null],[17,"SHADER_STAGE_TESSELLATION_CONTROL_BIT","","",null,null],[17,"SHADER_STAGE_TESSELLATION_EVALUATION_BIT","","",null,null],[17,"SHADER_STAGE_GEOMETRY_BIT","","",null,null],[17,"SHADER_STAGE_FRAGMENT_BIT","","",null,null],[17,"SHADER_STAGE_COMPUTE_BIT","","",null,null],[17,"SHADER_STAGE_ALL_GRAPHICS","","",null,null],[17,"SHADER_STAGE_ALL","","",null,null],[17,"CULL_MODE_NONE","","",null,null],[17,"CULL_MODE_FRONT_BIT","","",null,null],[17,"CULL_MODE_BACK_BIT","","",null,null],[17,"CULL_MODE_FRONT_AND_BACK","","",null,null],[17,"COLOR_COMPONENT_R_BIT","","",null,null],[17,"COLOR_COMPONENT_G_BIT","","",null,null],[17,"COLOR_COMPONENT_B_BIT","","",null,null],[17,"COLOR_COMPONENT_A_BIT","","",null,null],[17,"DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT","","",null,null],[17,"ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT","","",null,null],[17,"ACCESS_INDIRECT_COMMAND_READ_BIT","","",null,null],[17,"ACCESS_INDEX_READ_BIT","","",null,null],[17,"ACCESS_VERTEX_ATTRIBUTE_READ_BIT","","",null,null],[17,"ACCESS_UNIFORM_READ_BIT","","",null,null],[17,"ACCESS_INPUT_ATTACHMENT_READ_BIT","","",null,null],[17,"ACCESS_SHADER_READ_BIT","","",null,null],[17,"ACCESS_SHADER_WRITE_BIT","","",null,null],[17,"ACCESS_COLOR_ATTACHMENT_READ_BIT","","",null,null],[17,"ACCESS_COLOR_ATTACHMENT_WRITE_BIT","","",null,null],[17,"ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT","","",null,null],[17,"ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT","","",null,null],[17,"ACCESS_TRANSFER_READ_BIT","","",null,null],[17,"ACCESS_TRANSFER_WRITE_BIT","","",null,null],[17,"ACCESS_HOST_READ_BIT","","",null,null],[17,"ACCESS_HOST_WRITE_BIT","","",null,null],[17,"ACCESS_MEMORY_READ_BIT","","",null,null],[17,"ACCESS_MEMORY_WRITE_BIT","","",null,null],[17,"DEPENDENCY_BY_REGION_BIT","","",null,null],[17,"COMMAND_POOL_CREATE_TRANSIENT_BIT","","",null,null],[17,"COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT","","",null,null],[17,"COMMAND_POOL_RESET_RELEASE_RESOURCES_BIT","","",null,null],[17,"COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT","","",null,null],[17,"COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT","","",null,null],[17,"COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT","","",null,null],[17,"QUERY_CONTROL_PRECISE_BIT","","",null,null],[17,"COMMAND_BUFFER_RESET_RELEASE_RESOURCES_BIT","","",null,null],[17,"STENCIL_FACE_FRONT_BIT","","",null,null],[17,"STENCIL_FACE_BACK_BIT","","",null,null],[17,"STENCIL_FRONT_AND_BACK","","",null,null],[17,"DISPLAY_PLANE_ALPHA_OPAQUE_BIT_KHR","","",null,null],[17,"DISPLAY_PLANE_ALPHA_GLOBAL_BIT_KHR","","",null,null],[17,"DISPLAY_PLANE_ALPHA_PER_PIXEL_BIT_KHR","","",null,null],[17,"DISPLAY_PLANE_ALPHA_PER_PIXEL_PREMULTIPLIED_BIT_KHR","","",null,null],[17,"COLORSPACE_SRGB_NONLINEAR_KHR","","",null,null],[17,"COLOR_SPACE_SRGB_NONLINEAR_KHR","","",null,null],[17,"PRESENT_MODE_IMMEDIATE_KHR","","",null,null],[17,"PRESENT_MODE_MAILBOX_KHR","","",null,null],[17,"PRESENT_MODE_FIFO_KHR","","",null,null],[17,"PRESENT_MODE_FIFO_RELAXED_KHR","","",null,null],[17,"SURFACE_TRANSFORM_IDENTITY_BIT_KHR","","",null,null],[17,"SURFACE_TRANSFORM_ROTATE_90_BIT_KHR","","",null,null],[17,"SURFACE_TRANSFORM_ROTATE_180_BIT_KHR","","",null,null],[17,"SURFACE_TRANSFORM_ROTATE_270_BIT_KHR","","",null,null],[17,"SURFACE_TRANSFORM_HORIZONTAL_MIRROR_BIT_KHR","","",null,null],[17,"SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_90_BIT_KHR","","",null,null],[17,"SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_180_BIT_KHR","","",null,null],[17,"SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_270_BIT_KHR","","",null,null],[17,"SURFACE_TRANSFORM_INHERIT_BIT_KHR","","",null,null],[17,"COMPOSITE_ALPHA_OPAQUE_BIT_KHR","","",null,null],[17,"COMPOSITE_ALPHA_PRE_MULTIPLIED_BIT_KHR","","",null,null],[17,"COMPOSITE_ALPHA_POST_MULTIPLIED_BIT_KHR","","",null,null],[17,"COMPOSITE_ALPHA_INHERIT_BIT_KHR","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_INSTANCE_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_PHYSICAL_DEVICE_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_DEVICE_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_QUEUE_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_SEMAPHORE_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_COMMAND_BUFFER_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_FENCE_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_DEVICE_MEMORY_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_BUFFER_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_IMAGE_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_EVENT_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_QUERY_POOL_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_BUFFER_VIEW_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_IMAGE_VIEW_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_SHADER_MODULE_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_PIPELINE_CACHE_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_PIPELINE_LAYOUT_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_RENDER_PASS_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_PIPELINE_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_SAMPLER_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_POOL_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_FRAMEBUFFER_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_COMMAND_POOL_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_SURFACE_KHR_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_SWAPCHAIN_KHR_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_EXT","","",null,null],[17,"DEBUG_REPORT_ERROR_NONE_EXT","","",null,null],[17,"DEBUG_REPORT_ERROR_CALLBACK_REF_EXT","","",null,null],[17,"DEBUG_REPORT_INFORMATION_BIT_EXT","","",null,null],[17,"DEBUG_REPORT_WARNING_BIT_EXT","","",null,null],[17,"DEBUG_REPORT_PERFORMANCE_WARNING_BIT_EXT","","",null,null],[17,"DEBUG_REPORT_ERROR_BIT_EXT","","",null,null],[17,"DEBUG_REPORT_DEBUG_BIT_EXT","","",null,null],[11,"as_float32","","",124,null],[11,"as_int32","","",124,null],[11,"as_uint32","","",124,null],[11,"float32","","",124,null],[11,"int32","","",124,null],[11,"uint32","","",124,null],[11,"as_color","","",125,null],[11,"as_depth_stencil","","",125,null],[11,"color","","",125,{"inputs":[{"name":"clearcolorvalue"}],"output":{"name":"clearvalue"}}],[11,"depth_stencil","","",125,{"inputs":[{"name":"cleardepthstencilvalue"}],"output":{"name":"clearvalue"}}],[11,"fmt","","",126,null],[11,"load","","",126,{"inputs":[{"name":"f"}],"output":{"name":"static"}}],[11,"GetInstanceProcAddr","","",126,null],[11,"fmt","","",127,null],[11,"load","","",127,{"inputs":[{"name":"f"}],"output":{"name":"entrypoints"}}],[11,"CreateInstance","","",127,null],[11,"EnumerateInstanceExtensionProperties","","",127,null],[11,"EnumerateInstanceLayerProperties","","",127,null],[11,"fmt","","",128,null],[11,"load","","",128,{"inputs":[{"name":"f"}],"output":{"name":"instancepointers"}}],[11,"DestroyInstance","","",128,null],[11,"GetDeviceProcAddr","","",128,null],[11,"EnumeratePhysicalDevices","","",128,null],[11,"EnumerateDeviceExtensionProperties","","",128,null],[11,"EnumerateDeviceLayerProperties","","",128,null],[11,"CreateDevice","","",128,null],[11,"GetPhysicalDeviceFeatures","","",128,null],[11,"GetPhysicalDeviceFormatProperties","","",128,null],[11,"GetPhysicalDeviceImageFormatProperties","","",128,null],[11,"GetPhysicalDeviceProperties","","",128,null],[11,"GetPhysicalDeviceQueueFamilyProperties","","",128,null],[11,"GetPhysicalDeviceMemoryProperties","","",128,null],[11,"GetPhysicalDeviceSparseImageFormatProperties","","",128,null],[11,"DestroySurfaceKHR","","",128,null],[11,"CreateXlibSurfaceKHR","","",128,null],[11,"GetPhysicalDeviceXlibPresentationSupportKHR","","",128,null],[11,"CreateXcbSurfaceKHR","","",128,null],[11,"GetPhysicalDeviceXcbPresentationSupportKHR","","",128,null],[11,"CreateWaylandSurfaceKHR","","",128,null],[11,"GetPhysicalDeviceWaylandPresentationSupportKHR","","",128,null],[11,"CreateMirSurfaceKHR","","",128,null],[11,"GetPhysicalDeviceMirPresentationSupportKHR","","",128,null],[11,"CreateAndroidSurfaceKHR","","",128,null],[11,"CreateWin32SurfaceKHR","","",128,null],[11,"GetPhysicalDeviceWin32PresentationSupportKHR","","",128,null],[11,"GetPhysicalDeviceDisplayPropertiesKHR","","",128,null],[11,"GetPhysicalDeviceDisplayPlanePropertiesKHR","","",128,null],[11,"GetDisplayPlaneSupportedDisplaysKHR","","",128,null],[11,"GetDisplayModePropertiesKHR","","",128,null],[11,"CreateDisplayModeKHR","","",128,null],[11,"GetDisplayPlaneCapabilitiesKHR","","",128,null],[11,"CreateDisplayPlaneSurfaceKHR","","",128,null],[11,"GetPhysicalDeviceSurfaceSupportKHR","","",128,null],[11,"GetPhysicalDeviceSurfaceCapabilitiesKHR","","",128,null],[11,"GetPhysicalDeviceSurfaceFormatsKHR","","",128,null],[11,"GetPhysicalDeviceSurfacePresentModesKHR","","",128,null],[11,"CreateDebugReportCallbackEXT","","",128,null],[11,"DestroyDebugReportCallbackEXT","","",128,null],[11,"DebugReportMessageEXT","","",128,null],[11,"fmt","","",129,null],[11,"load","","",129,{"inputs":[{"name":"f"}],"output":{"name":"devicepointers"}}],[11,"DestroyDevice","","",129,null],[11,"GetDeviceQueue","","",129,null],[11,"QueueSubmit","","",129,null],[11,"QueueWaitIdle","","",129,null],[11,"DeviceWaitIdle","","",129,null],[11,"AllocateMemory","","",129,null],[11,"FreeMemory","","",129,null],[11,"MapMemory","","",129,null],[11,"UnmapMemory","","",129,null],[11,"FlushMappedMemoryRanges","","",129,null],[11,"InvalidateMappedMemoryRanges","","",129,null],[11,"GetDeviceMemoryCommitment","","",129,null],[11,"BindBufferMemory","","",129,null],[11,"BindImageMemory","","",129,null],[11,"GetBufferMemoryRequirements","","",129,null],[11,"GetImageMemoryRequirements","","",129,null],[11,"GetImageSparseMemoryRequirements","","",129,null],[11,"QueueBindSparse","","",129,null],[11,"CreateFence","","",129,null],[11,"DestroyFence","","",129,null],[11,"ResetFences","","",129,null],[11,"GetFenceStatus","","",129,null],[11,"WaitForFences","","",129,null],[11,"CreateSemaphore","","",129,null],[11,"DestroySemaphore","","",129,null],[11,"CreateEvent","","",129,null],[11,"DestroyEvent","","",129,null],[11,"GetEventStatus","","",129,null],[11,"SetEvent","","",129,null],[11,"ResetEvent","","",129,null],[11,"CreateQueryPool","","",129,null],[11,"DestroyQueryPool","","",129,null],[11,"GetQueryPoolResults","","",129,null],[11,"CreateBuffer","","",129,null],[11,"DestroyBuffer","","",129,null],[11,"CreateBufferView","","",129,null],[11,"DestroyBufferView","","",129,null],[11,"CreateImage","","",129,null],[11,"DestroyImage","","",129,null],[11,"GetImageSubresourceLayout","","",129,null],[11,"CreateImageView","","",129,null],[11,"DestroyImageView","","",129,null],[11,"CreateShaderModule","","",129,null],[11,"DestroyShaderModule","","",129,null],[11,"CreatePipelineCache","","",129,null],[11,"DestroyPipelineCache","","",129,null],[11,"GetPipelineCacheData","","",129,null],[11,"MergePipelineCaches","","",129,null],[11,"CreateGraphicsPipelines","","",129,null],[11,"CreateComputePipelines","","",129,null],[11,"DestroyPipeline","","",129,null],[11,"CreatePipelineLayout","","",129,null],[11,"DestroyPipelineLayout","","",129,null],[11,"CreateSampler","","",129,null],[11,"DestroySampler","","",129,null],[11,"CreateDescriptorSetLayout","","",129,null],[11,"DestroyDescriptorSetLayout","","",129,null],[11,"CreateDescriptorPool","","",129,null],[11,"DestroyDescriptorPool","","",129,null],[11,"ResetDescriptorPool","","",129,null],[11,"AllocateDescriptorSets","","",129,null],[11,"FreeDescriptorSets","","",129,null],[11,"UpdateDescriptorSets","","",129,null],[11,"CreateFramebuffer","","",129,null],[11,"DestroyFramebuffer","","",129,null],[11,"CreateRenderPass","","",129,null],[11,"DestroyRenderPass","","",129,null],[11,"GetRenderAreaGranularity","","",129,null],[11,"CreateCommandPool","","",129,null],[11,"DestroyCommandPool","","",129,null],[11,"ResetCommandPool","","",129,null],[11,"AllocateCommandBuffers","","",129,null],[11,"FreeCommandBuffers","","",129,null],[11,"BeginCommandBuffer","","",129,null],[11,"EndCommandBuffer","","",129,null],[11,"ResetCommandBuffer","","",129,null],[11,"CmdBindPipeline","","",129,null],[11,"CmdSetViewport","","",129,null],[11,"CmdSetScissor","","",129,null],[11,"CmdSetLineWidth","","",129,null],[11,"CmdSetDepthBias","","",129,null],[11,"CmdSetBlendConstants","","",129,null],[11,"CmdSetDepthBounds","","",129,null],[11,"CmdSetStencilCompareMask","","",129,null],[11,"CmdSetStencilWriteMask","","",129,null],[11,"CmdSetStencilReference","","",129,null],[11,"CmdBindDescriptorSets","","",129,null],[11,"CmdBindIndexBuffer","","",129,null],[11,"CmdBindVertexBuffers","","",129,null],[11,"CmdDraw","","",129,null],[11,"CmdDrawIndexed","","",129,null],[11,"CmdDrawIndirect","","",129,null],[11,"CmdDrawIndexedIndirect","","",129,null],[11,"CmdDispatch","","",129,null],[11,"CmdDispatchIndirect","","",129,null],[11,"CmdCopyBuffer","","",129,null],[11,"CmdCopyImage","","",129,null],[11,"CmdBlitImage","","",129,null],[11,"CmdCopyBufferToImage","","",129,null],[11,"CmdCopyImageToBuffer","","",129,null],[11,"CmdUpdateBuffer","","",129,null],[11,"CmdFillBuffer","","",129,null],[11,"CmdClearColorImage","","",129,null],[11,"CmdClearDepthStencilImage","","",129,null],[11,"CmdClearAttachments","","",129,null],[11,"CmdResolveImage","","",129,null],[11,"CmdSetEvent","","",129,null],[11,"CmdResetEvent","","",129,null],[11,"CmdWaitEvents","","",129,null],[11,"CmdPipelineBarrier","","",129,null],[11,"CmdBeginQuery","","",129,null],[11,"CmdEndQuery","","",129,null],[11,"CmdResetQueryPool","","",129,null],[11,"CmdWriteTimestamp","","",129,null],[11,"CmdCopyQueryPoolResults","","",129,null],[11,"CmdPushConstants","","",129,null],[11,"CmdBeginRenderPass","","",129,null],[11,"CmdNextSubpass","","",129,null],[11,"CmdEndRenderPass","","",129,null],[11,"CmdExecuteCommands","","",129,null],[11,"CreateSwapchainKHR","","",129,null],[11,"DestroySwapchainKHR","","",129,null],[11,"GetSwapchainImagesKHR","","",129,null],[11,"AcquireNextImageKHR","","",129,null],[11,"QueuePresentKHR","","",129,null],[11,"CreateSharedSwapchainsKHR","","",129,null]],"paths":[[3,"ApplicationInfo"],[3,"InstanceCreateInfo"],[3,"AllocationCallbacks"],[3,"PhysicalDeviceFeatures"],[3,"FormatProperties"],[3,"Extent3D"],[3,"ImageFormatProperties"],[3,"PhysicalDeviceLimits"],[3,"PhysicalDeviceSparseProperties"],[3,"PhysicalDeviceProperties"],[3,"QueueFamilyProperties"],[3,"MemoryType"],[3,"MemoryHeap"],[3,"PhysicalDeviceMemoryProperties"],[3,"DeviceQueueCreateInfo"],[3,"DeviceCreateInfo"],[3,"ExtensionProperties"],[3,"LayerProperties"],[3,"SubmitInfo"],[3,"MemoryAllocateInfo"],[3,"MappedMemoryRange"],[3,"MemoryRequirements"],[3,"SparseImageFormatProperties"],[3,"SparseImageMemoryRequirements"],[3,"SparseMemoryBind"],[3,"SparseBufferMemoryBindInfo"],[3,"SparseImageOpaqueMemoryBindInfo"],[3,"ImageSubresource"],[3,"Offset3D"],[3,"SparseImageMemoryBind"],[3,"SparseImageMemoryBindInfo"],[3,"BindSparseInfo"],[3,"FenceCreateInfo"],[3,"SemaphoreCreateInfo"],[3,"EventCreateInfo"],[3,"QueryPoolCreateInfo"],[3,"BufferCreateInfo"],[3,"BufferViewCreateInfo"],[3,"ImageCreateInfo"],[3,"SubresourceLayout"],[3,"ComponentMapping"],[3,"ImageSubresourceRange"],[3,"ImageViewCreateInfo"],[3,"ShaderModuleCreateInfo"],[3,"PipelineCacheCreateInfo"],[3,"SpecializationMapEntry"],[3,"SpecializationInfo"],[3,"PipelineShaderStageCreateInfo"],[3,"VertexInputBindingDescription"],[3,"VertexInputAttributeDescription"],[3,"PipelineVertexInputStateCreateInfo"],[3,"PipelineInputAssemblyStateCreateInfo"],[3,"PipelineTessellationStateCreateInfo"],[3,"Viewport"],[3,"Offset2D"],[3,"Extent2D"],[3,"Rect2D"],[3,"PipelineViewportStateCreateInfo"],[3,"PipelineRasterizationStateCreateInfo"],[3,"PipelineMultisampleStateCreateInfo"],[3,"StencilOpState"],[3,"PipelineDepthStencilStateCreateInfo"],[3,"PipelineColorBlendAttachmentState"],[3,"PipelineColorBlendStateCreateInfo"],[3,"PipelineDynamicStateCreateInfo"],[3,"GraphicsPipelineCreateInfo"],[3,"ComputePipelineCreateInfo"],[3,"PushConstantRange"],[3,"PipelineLayoutCreateInfo"],[3,"SamplerCreateInfo"],[3,"DescriptorSetLayoutBinding"],[3,"DescriptorSetLayoutCreateInfo"],[3,"DescriptorPoolSize"],[3,"DescriptorPoolCreateInfo"],[3,"DescriptorSetAllocateInfo"],[3,"DescriptorImageInfo"],[3,"DescriptorBufferInfo"],[3,"WriteDescriptorSet"],[3,"CopyDescriptorSet"],[3,"FramebufferCreateInfo"],[3,"AttachmentDescription"],[3,"AttachmentReference"],[3,"SubpassDescription"],[3,"SubpassDependency"],[3,"RenderPassCreateInfo"],[3,"CommandPoolCreateInfo"],[3,"CommandBufferAllocateInfo"],[3,"CommandBufferInheritanceInfo"],[3,"CommandBufferBeginInfo"],[3,"BufferCopy"],[3,"ImageSubresourceLayers"],[3,"ImageCopy"],[3,"ImageBlit"],[3,"BufferImageCopy"],[3,"ClearDepthStencilValue"],[3,"ClearAttachment"],[3,"ClearRect"],[3,"ImageResolve"],[3,"MemoryBarrier"],[3,"BufferMemoryBarrier"],[3,"ImageMemoryBarrier"],[3,"RenderPassBeginInfo"],[3,"DispatchIndirectCommand"],[3,"DrawIndexedIndirectCommand"],[3,"DrawIndirectCommand"],[3,"SurfaceCapabilitiesKHR"],[3,"SurfaceFormatKHR"],[3,"SwapchainCreateInfoKHR"],[3,"PresentInfoKHR"],[3,"DisplayPropertiesKHR"],[3,"DisplayModeParametersKHR"],[3,"DisplayModePropertiesKHR"],[3,"DisplayModeCreateInfoKHR"],[3,"DisplayPlaneCapabilitiesKHR"],[3,"DisplayPlanePropertiesKHR"],[3,"DisplaySurfaceCreateInfoKHR"],[3,"DisplayPresentInfoKHR"],[3,"XlibSurfaceCreateInfoKHR"],[3,"XcbSurfaceCreateInfoKHR"],[3,"WaylandSurfaceCreateInfoKHR"],[3,"MirSurfaceCreateInfoKHR"],[3,"AndroidSurfaceCreateInfoKHR"],[3,"Win32SurfaceCreateInfoKHR"],[3,"DebugReportCallbackCreateInfoEXT"],[3,"ClearColorValue"],[3,"ClearValue"],[3,"Static"],[3,"EntryPoints"],[3,"InstancePointers"],[3,"DevicePointers"]]};
searchIndex["crossbeam"] = {"doc":"Support for concurrent and parallel programming.","items":[[3,"Scope","crossbeam","",null,null],[3,"ScopedJoinHandle","","A handle to a scoped thread",null,null],[5,"scope","","Create a new `scope`, for deferred destructors.",null,{"inputs":[{"name":"f"}],"output":{"name":"r"}}],[5,"spawn_unsafe","","Like `std::thread::spawn`, but without the closure bounds.",null,{"inputs":[{"name":"f"}],"output":{"name":"joinhandle"}}],[0,"mem","","Memory management for concurrent data structures",null,null],[3,"CachePadded","crossbeam::mem","Pad `T` to the length of a cacheline.",null,null],[0,"epoch","","Epoch-based memory management",null,null],[3,"Atomic","crossbeam::mem::epoch","Like `std::sync::atomic::AtomicPtr`.",null,null],[3,"Guard","","An RAII-style guard for pinning the current epoch.",null,null],[3,"Owned","","Like `Box&lt;T&gt;`: an owned, heap-allocated data value of type `T`.",null,null],[3,"Shared","","Like `&amp;&#39;a T`: a shared reference valid for lifetime `&#39;a`.",null,null],[5,"pin","","Pin the current epoch.",null,{"inputs":[],"output":{"name":"guard"}}],[11,"null","","",0,{"inputs":[],"output":{"name":"atomic"}}],[11,"new","","Create a new atomic pointer",0,{"inputs":[{"name":"t"}],"output":{"name":"atomic"}}],[11,"load","","Do an atomic load with the given memory ordering.",0,null],[11,"store","","Do an atomic store with the given memory ordering.",0,null],[11,"store_and_ref","","Do an atomic store with the given memory ordering, immediately yielding\na shared reference to the pointer that was stored.",0,null],[11,"store_shared","","Do an atomic store of a `Shared` pointer with the given memory ordering.",0,null],[11,"cas","","Do a compare-and-set from a `Shared` to an `Owned` pointer with the\ngiven memory ordering.",0,null],[11,"cas_and_ref","","Do a compare-and-set from a `Shared` to an `Owned` pointer with the\ngiven memory ordering, immediatley acquiring a new `Shared` reference to\nthe previously-owned pointer if successful.",0,null],[11,"cas_shared","","Do a compare-and-set from a `Shared` to another `Shared` pointer with\nthe given memory ordering.",0,null],[11,"swap","","Do an atomic swap with an `Owned` pointer with the given memory ordering.",0,null],[11,"swap_shared","","Do an atomic swap with a `Shared` pointer with the given memory ordering.",0,null],[11,"unlinked","","Assert that the value is no longer reachable from a lock-free data\nstructure and should be collected when sufficient epochs have passed.",1,null],[11,"migrate_garbage","","Move the thread-local garbage into the global set of garbage.",1,null],[11,"drop","","",1,null],[11,"new","","Move `t` to a new heap allocation.",2,{"inputs":[{"name":"t"}],"output":{"name":"owned"}}],[11,"into_inner","","Move data out of the owned box, deallocating the box.",2,null],[11,"deref","","",2,null],[11,"deref_mut","","",2,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"clone","","",3,null],[11,"deref","","",3,null],[11,"as_raw","","",3,null],[11,"zeroed","crossbeam::mem","A const fn equivalent to mem::zeroed().",4,{"inputs":[],"output":{"name":"cachepadded"}}],[11,"new","","Wrap `t` with cacheline padding.",4,{"inputs":[{"name":"t"}],"output":{"name":"cachepadded"}}],[11,"deref","","",4,null],[11,"deref_mut","","",4,null],[8,"ZerosValid","","Types for which mem::zeroed() is safe.",null,null],[0,"sync","crossbeam","Synchronization primitives.",null,null],[3,"MsQueue","crossbeam::sync","A Michael-Scott lock-free queue, with support for blocking `pop`s.",null,null],[3,"AtomicOption","","",null,null],[3,"TreiberStack","","Treiber&#39;s lock-free stack.",null,null],[3,"SegQueue","","A Michael-Scott queue that allocates &quot;segments&quot; (arrays of nodes)\nfor efficiency.",null,null],[3,"ArcCell","","A type providing atomic storage and retrieval of an `Arc&lt;T&gt;`.",null,null],[11,"new","","",5,{"inputs":[],"output":{"name":"atomicoption"}}],[11,"swap_box","","",5,null],[11,"swap","","",5,null],[11,"take","","",5,null],[11,"new","","Create a new, empty queue.",6,{"inputs":[],"output":{"name":"msqueue"}}],[11,"push","","Add `t` to the back of the queue, possibly waking up threads\nblocked on `pop`.",6,null],[11,"is_empty","","Check if this queue is empty.",6,null],[11,"try_pop","","Attempt to dequeue from the front.",6,null],[11,"pop","","Dequeue an element from the front of the queue, blocking if the queue is\nempty.",6,null],[11,"new","","Create a new, empty stack.",7,{"inputs":[],"output":{"name":"treiberstack"}}],[11,"push","","Push `t` on top of the stack.",7,null],[11,"pop","","Attempt to pop the top element of the stack.",7,null],[11,"is_empty","","Check if this queue is empty.",7,null],[11,"new","","Create a new, empty queue.",8,{"inputs":[],"output":{"name":"segqueue"}}],[11,"push","","Add `t` to the back of the queue.",8,null],[11,"try_pop","","Attempt to dequeue from the front.",8,null],[0,"chase_lev","","A lock-free concurrent work-stealing deque",null,null],[3,"Worker","crossbeam::sync::chase_lev","Worker half of the work-stealing deque. This worker has exclusive access to\none side of the deque, and uses `push` and `try_pop` method to manipulate it.",null,null],[3,"Stealer","","The stealing half of the work-stealing deque. Stealers have access to the\nopposite end of the deque from the worker, and they only have access to the\n`steal` method.",null,null],[4,"Steal","","When stealing some data, this is an enumeration of the possible outcomes.",null,null],[13,"Empty","","The deque was empty at the time of stealing",9,null],[13,"Abort","","The stealer lost the race for stealing data, and a retry may return more\ndata.",9,null],[13,"Data","","The stealer has successfully stolen some data.",9,null],[5,"deque","","Creates a new empty deque",null,null],[11,"fmt","","",9,null],[11,"eq","","",9,null],[11,"ne","","",9,null],[11,"push","","Pushes data onto the front of this work queue.",10,null],[11,"try_pop","","Pops data off the front of the work queue, returning `None` on an empty\nqueue.",10,null],[11,"steal","","Steals work off the end of the queue (opposite of the worker&#39;s end)",11,null],[11,"clone","","",11,null],[11,"drop","crossbeam::sync","",12,null],[11,"new","","Creates a new `ArcCell`.",12,{"inputs":[{"name":"arc"}],"output":{"name":"arccell"}}],[11,"set","","Stores a new value in the `ArcCell`, returning the previous\nvalue.",12,null],[11,"get","","Returns a copy of the value stored by the `ArcCell`.",12,null],[11,"defer","crossbeam","Schedule code to be executed when exiting the scope.",13,null],[11,"spawn","","Create a scoped thread.",13,null],[11,"join","","Join the scoped thread, returning the result it produced.",14,null],[11,"thread","","Get the underlying thread handle.",14,null],[11,"drop","","",13,null]],"paths":[[3,"Atomic"],[3,"Guard"],[3,"Owned"],[3,"Shared"],[3,"CachePadded"],[3,"AtomicOption"],[3,"MsQueue"],[3,"TreiberStack"],[3,"SegQueue"],[4,"Steal"],[3,"Worker"],[3,"Stealer"],[3,"ArcCell"],[3,"Scope"],[3,"ScopedJoinHandle"]]};
searchIndex["smallvec"] = {"doc":"Small vectors in various sizes. These store a certain number of elements inline and fall back\nto the heap for larger allocations.","items":[[3,"SmallVecMoveIterator","smallvec","",null,null],[3,"SmallVec","","",null,null],[6,"SmallVec1","","Deprecated alias to ease transition from an earlier version.",null,null],[6,"SmallVec2","","Deprecated alias to ease transition from an earlier version.",null,null],[6,"SmallVec4","","Deprecated alias to ease transition from an earlier version.",null,null],[6,"SmallVec8","","Deprecated alias to ease transition from an earlier version.",null,null],[6,"SmallVec16","","Deprecated alias to ease transition from an earlier version.",null,null],[6,"SmallVec24","","Deprecated alias to ease transition from an earlier version.",null,null],[6,"SmallVec32","","Deprecated alias to ease transition from an earlier version.",null,null],[8,"VecLike","","",null,null],[10,"len","","",0,null],[10,"push","","",0,null],[8,"Array","","",null,null],[16,"Item","","",1,null],[10,"size","","",1,{"inputs":[],"output":{"name":"usize"}}],[10,"ptr","","",1,null],[10,"ptr_mut","","",1,null],[11,"next","","",2,null],[11,"drop","","",2,null],[11,"set_len","","",3,null],[11,"inline_size","","",3,null],[11,"len","","",3,null],[11,"is_empty","","",3,null],[11,"capacity","","",3,null],[11,"spilled","","",3,null],[11,"into_iter","","NB: For efficiency reasons (avoiding making a second copy of the inline elements), this\nactually clears out the original array instead of moving it.\nFIXME: Rename this to `drain`? It’s more like `Vec::drain` than `Vec::into_iter`.",3,null],[11,"push","","",3,null],[11,"push_all_move","","",3,null],[11,"pop","","",3,null],[11,"grow","","",3,null],[11,"reserve","","",3,null],[11,"reserve_exact","","",3,null],[11,"shrink_to_fit","","",3,null],[11,"truncate","","",3,null],[11,"swap_remove","","",3,null],[11,"clear","","",3,null],[11,"remove","","",3,null],[11,"insert","","",3,null],[11,"deref","","",3,null],[11,"deref_mut","","",3,null],[11,"index","","",3,null],[11,"index_mut","","",3,null],[11,"index","","",3,null],[11,"index_mut","","",3,null],[11,"index","","",3,null],[11,"index_mut","","",3,null],[11,"index","","",3,null],[11,"index_mut","","",3,null],[11,"index","","",3,null],[11,"index_mut","","",3,null],[11,"len","","",3,null],[11,"push","","",3,null],[11,"from_iter","","",3,{"inputs":[{"name":"i"}],"output":{"name":"smallvec"}}],[11,"extend","","",3,null],[11,"fmt","","",3,null],[11,"new","","",3,{"inputs":[],"output":{"name":"smallvec"}}],[11,"drop","","",3,null],[11,"clone","","",3,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"partial_cmp","","",3,null],[11,"cmp","","",3,null]],"paths":[[8,"VecLike"],[8,"Array"],[3,"SmallVecMoveIterator"],[3,"SmallVec"]]};
searchIndex["fnv"] = {"doc":"An implementation of the [Fowler–Noll–Vo hash function][chongo].","items":[[3,"FnvHasher","fnv","An implementation of the Fowler–Noll–Vo hash function.",null,null],[11,"default","","",0,{"inputs":[],"output":{"name":"fnvhasher"}}],[11,"finish","","",0,null],[11,"write","","",0,null]],"paths":[[3,"FnvHasher"]]};
searchIndex["lazy_static"] = {"doc":"A macro for declaring lazily evaluated statics.","items":[[14,"lazy_static!","lazy_static","",null,null]],"paths":[]};
initSearch(searchIndex);
